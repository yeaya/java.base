#include <java/lang/CharacterData00.h>

#include <java/lang/AssertionError.h>
#include <java/lang/CharacterData.h>
#include <jcpp.h>

#undef A
#undef A_DATA
#undef B
#undef DECIMAL_DIGIT_NUMBER
#undef DIRECTIONALITY_FIRST_STRONG_ISOLATE
#undef DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
#undef DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE
#undef DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
#undef DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
#undef DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE
#undef DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
#undef DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE
#undef DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
#undef DIRECTIONALITY_UNDEFINED
#undef ERROR
#undef MAX_RADIX
#undef MIN_RADIX
#undef X
#undef Y

using $charArray2 = $Array<char16_t, 2>;
using $charArray3 = $Array<char16_t, 3>;
using $AssertionError = ::java::lang::AssertionError;
using $Character = ::java::lang::Character;
using $CharacterData = ::java::lang::CharacterData;
using $ClassInfo = ::java::lang::ClassInfo;
using $FieldInfo = ::java::lang::FieldInfo;
using $MethodInfo = ::java::lang::MethodInfo;

namespace java {
	namespace lang {

$FieldInfo _CharacterData00_FieldInfo_[] = {
	{"$assertionsDisabled", "Z", nullptr, $STATIC | $FINAL | $SYNTHETIC, $staticField(CharacterData00, $assertionsDisabled)},
	{"instance", "Ljava/lang/CharacterData00;", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, instance)},
	{"charMap", "[[[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, charMap)},
	{"X", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, X)},
	{"Y", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, Y)},
	{"A", "[I", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, A)},
	{"A_DATA", "Ljava/lang/String;", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, A_DATA)},
	{"B", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData00, B)},
	{}
};

$MethodInfo _CharacterData00_MethodInfo_[] = {
	{"<init>", "()V", nullptr, $PRIVATE, $method(static_cast<void(CharacterData00::*)()>(&CharacterData00::init$))},
	{"digit", "(II)I", nullptr, 0},
	{"findInCharMap", "(I)I", nullptr, 0},
	{"getDirectionality", "(I)B", nullptr, 0},
	{"getNumericValue", "(I)I", nullptr, 0},
	{"getProperties", "(I)I", nullptr, 0},
	{"getPropertiesEx", "(I)I", nullptr, 0},
	{"getType", "(I)I", nullptr, 0},
	{"isDigit", "(I)Z", nullptr, 0},
	{"isIdentifierIgnorable", "(I)Z", nullptr, 0},
	{"isIdeographic", "(I)Z", nullptr, 0},
	{"isJavaIdentifierPart", "(I)Z", nullptr, 0},
	{"isJavaIdentifierStart", "(I)Z", nullptr, 0},
	{"isLowerCase", "(I)Z", nullptr, 0},
	{"isMirrored", "(I)Z", nullptr, 0},
	{"isOtherAlphabetic", "(I)Z", nullptr, 0},
	{"isUnicodeIdentifierPart", "(I)Z", nullptr, 0},
	{"isUnicodeIdentifierStart", "(I)Z", nullptr, 0},
	{"isUpperCase", "(I)Z", nullptr, 0},
	{"isWhitespace", "(I)Z", nullptr, 0},
	{"toLowerCase", "(I)I", nullptr, 0},
	{"toTitleCase", "(I)I", nullptr, 0},
	{"toUpperCase", "(I)I", nullptr, 0},
	{"toUpperCaseCharArray", "(I)[C", nullptr, 0},
	{"toUpperCaseEx", "(I)I", nullptr, 0},
	{}
};

$ClassInfo _CharacterData00_ClassInfo_ = {
	$ACC_SUPER,
	"java.lang.CharacterData00",
	"java.lang.CharacterData",
	nullptr,
	_CharacterData00_FieldInfo_,
	_CharacterData00_MethodInfo_
};

$Object* allocate$CharacterData00($Class* clazz) {
	return $of($alloc(CharacterData00));
}

bool CharacterData00::$assertionsDisabled = false;
CharacterData00* CharacterData00::instance = nullptr;
$charArray3* CharacterData00::charMap = nullptr;
$chars* CharacterData00::X = nullptr;
$chars* CharacterData00::Y = nullptr;
$ints* CharacterData00::A = nullptr;
$String* CharacterData00::A_DATA = nullptr;
$chars* CharacterData00::B = nullptr;

int32_t CharacterData00::getProperties(int32_t ch) {
	char16_t offset = (char16_t)ch;
	int32_t props = $nc(CharacterData00::A)->get($nc(CharacterData00::Y)->get($nc(CharacterData00::X)->get(offset >> 5) | ((int32_t)((offset >> 1) & (uint32_t)15))) | ((int32_t)(offset & (uint32_t)1)));
	return props;
}

int32_t CharacterData00::getPropertiesEx(int32_t ch) {
	char16_t offset = (char16_t)ch;
	int32_t props = $nc(CharacterData00::B)->get($nc(CharacterData00::Y)->get($nc(CharacterData00::X)->get(offset >> 5) | ((int32_t)((offset >> 1) & (uint32_t)15))) | ((int32_t)(offset & (uint32_t)1)));
	return props;
}

int32_t CharacterData00::getType(int32_t ch) {
	int32_t props = getProperties(ch);
	return ((int32_t)(props & (uint32_t)31));
}

bool CharacterData00::isOtherAlphabetic(int32_t ch) {
	int32_t props = getPropertiesEx(ch);
	return ((int32_t)(props & (uint32_t)4)) != 0;
}

bool CharacterData00::isIdeographic(int32_t ch) {
	int32_t props = getPropertiesEx(ch);
	return ((int32_t)(props & (uint32_t)8)) != 0;
}

bool CharacterData00::isJavaIdentifierStart(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) >= 20480);
}

bool CharacterData00::isJavaIdentifierPart(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)12288)) != 0);
}

bool CharacterData00::isUnicodeIdentifierStart(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)16)) != 0 || ch == 11823;
}

bool CharacterData00::isUnicodeIdentifierPart(int32_t ch) {
	bool var$0 = ((int32_t)(getPropertiesEx(ch) & (uint32_t)32)) != 0;
	return var$0 || isIdentifierIgnorable(ch) || ch == 11823;
}

bool CharacterData00::isIdentifierIgnorable(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) == 4096);
}

int32_t CharacterData00::toLowerCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)0x00020000)) != 0) {
		if (((int32_t)(val & (uint32_t)0x07FC0000)) == 0x07FC0000) {
			switch (ch) {
			case 304:
				{
					mapChar = 105;
					break;
				}
			case 570:
				{
					mapChar = 11365;
					break;
				}
			case 574:
				{
					mapChar = 11366;
					break;
				}
			case 1042:
				{
					mapChar = 7296;
					break;
				}
			case 1044:
				{
					mapChar = 7297;
					break;
				}
			case 1054:
				{
					mapChar = 7298;
					break;
				}
			case 1057:
				{
					mapChar = 7299;
					break;
				}
			case 1066:
				{
					mapChar = 7302;
					break;
				}
			case 1122:
				{
					mapChar = 7303;
					break;
				}
			case 4256:
				{
					mapChar = 11520;
					break;
				}
			case 4257:
				{
					mapChar = 11521;
					break;
				}
			case 4258:
				{
					mapChar = 11522;
					break;
				}
			case 4259:
				{
					mapChar = 11523;
					break;
				}
			case 4260:
				{
					mapChar = 11524;
					break;
				}
			case 4261:
				{
					mapChar = 11525;
					break;
				}
			case 4262:
				{
					mapChar = 11526;
					break;
				}
			case 4263:
				{
					mapChar = 11527;
					break;
				}
			case 4264:
				{
					mapChar = 11528;
					break;
				}
			case 4265:
				{
					mapChar = 11529;
					break;
				}
			case 4266:
				{
					mapChar = 11530;
					break;
				}
			case 4267:
				{
					mapChar = 11531;
					break;
				}
			case 4268:
				{
					mapChar = 11532;
					break;
				}
			case 4269:
				{
					mapChar = 11533;
					break;
				}
			case 4270:
				{
					mapChar = 11534;
					break;
				}
			case 4271:
				{
					mapChar = 11535;
					break;
				}
			case 4272:
				{
					mapChar = 11536;
					break;
				}
			case 4273:
				{
					mapChar = 11537;
					break;
				}
			case 4274:
				{
					mapChar = 11538;
					break;
				}
			case 4275:
				{
					mapChar = 11539;
					break;
				}
			case 4276:
				{
					mapChar = 11540;
					break;
				}
			case 4277:
				{
					mapChar = 11541;
					break;
				}
			case 4278:
				{
					mapChar = 11542;
					break;
				}
			case 4279:
				{
					mapChar = 11543;
					break;
				}
			case 4280:
				{
					mapChar = 11544;
					break;
				}
			case 4281:
				{
					mapChar = 11545;
					break;
				}
			case 4282:
				{
					mapChar = 11546;
					break;
				}
			case 4283:
				{
					mapChar = 11547;
					break;
				}
			case 4284:
				{
					mapChar = 11548;
					break;
				}
			case 4285:
				{
					mapChar = 11549;
					break;
				}
			case 4286:
				{
					mapChar = 11550;
					break;
				}
			case 4287:
				{
					mapChar = 11551;
					break;
				}
			case 4288:
				{
					mapChar = 11552;
					break;
				}
			case 4289:
				{
					mapChar = 11553;
					break;
				}
			case 4290:
				{
					mapChar = 11554;
					break;
				}
			case 4291:
				{
					mapChar = 11555;
					break;
				}
			case 4292:
				{
					mapChar = 11556;
					break;
				}
			case 4293:
				{
					mapChar = 11557;
					break;
				}
			case 4295:
				{
					mapChar = 11559;
					break;
				}
			case 4301:
				{
					mapChar = 11565;
					break;
				}
			case 5024:
				{
					mapChar = 0x0000AB70;
					break;
				}
			case 5025:
				{
					mapChar = 0x0000AB71;
					break;
				}
			case 5026:
				{
					mapChar = 0x0000AB72;
					break;
				}
			case 5027:
				{
					mapChar = 0x0000AB73;
					break;
				}
			case 5028:
				{
					mapChar = 0x0000AB74;
					break;
				}
			case 5029:
				{
					mapChar = 0x0000AB75;
					break;
				}
			case 5030:
				{
					mapChar = 0x0000AB76;
					break;
				}
			case 5031:
				{
					mapChar = 0x0000AB77;
					break;
				}
			case 5032:
				{
					mapChar = 0x0000AB78;
					break;
				}
			case 5033:
				{
					mapChar = 0x0000AB79;
					break;
				}
			case 5034:
				{
					mapChar = 0x0000AB7A;
					break;
				}
			case 5035:
				{
					mapChar = 0x0000AB7B;
					break;
				}
			case 5036:
				{
					mapChar = 0x0000AB7C;
					break;
				}
			case 5037:
				{
					mapChar = 0x0000AB7D;
					break;
				}
			case 5038:
				{
					mapChar = 0x0000AB7E;
					break;
				}
			case 5039:
				{
					mapChar = 0x0000AB7F;
					break;
				}
			case 5040:
				{
					mapChar = 0x0000AB80;
					break;
				}
			case 5041:
				{
					mapChar = 0x0000AB81;
					break;
				}
			case 5042:
				{
					mapChar = 0x0000AB82;
					break;
				}
			case 5043:
				{
					mapChar = 0x0000AB83;
					break;
				}
			case 5044:
				{
					mapChar = 0x0000AB84;
					break;
				}
			case 5045:
				{
					mapChar = 0x0000AB85;
					break;
				}
			case 5046:
				{
					mapChar = 0x0000AB86;
					break;
				}
			case 5047:
				{
					mapChar = 0x0000AB87;
					break;
				}
			case 5048:
				{
					mapChar = 0x0000AB88;
					break;
				}
			case 5049:
				{
					mapChar = 0x0000AB89;
					break;
				}
			case 5050:
				{
					mapChar = 0x0000AB8A;
					break;
				}
			case 5051:
				{
					mapChar = 0x0000AB8B;
					break;
				}
			case 5052:
				{
					mapChar = 0x0000AB8C;
					break;
				}
			case 5053:
				{
					mapChar = 0x0000AB8D;
					break;
				}
			case 5054:
				{
					mapChar = 0x0000AB8E;
					break;
				}
			case 5055:
				{
					mapChar = 0x0000AB8F;
					break;
				}
			case 5056:
				{
					mapChar = 0x0000AB90;
					break;
				}
			case 5057:
				{
					mapChar = 0x0000AB91;
					break;
				}
			case 5058:
				{
					mapChar = 0x0000AB92;
					break;
				}
			case 5059:
				{
					mapChar = 0x0000AB93;
					break;
				}
			case 5060:
				{
					mapChar = 0x0000AB94;
					break;
				}
			case 5061:
				{
					mapChar = 0x0000AB95;
					break;
				}
			case 5062:
				{
					mapChar = 0x0000AB96;
					break;
				}
			case 5063:
				{
					mapChar = 0x0000AB97;
					break;
				}
			case 5064:
				{
					mapChar = 0x0000AB98;
					break;
				}
			case 5065:
				{
					mapChar = 0x0000AB99;
					break;
				}
			case 5066:
				{
					mapChar = 0x0000AB9A;
					break;
				}
			case 5067:
				{
					mapChar = 0x0000AB9B;
					break;
				}
			case 5068:
				{
					mapChar = 0x0000AB9C;
					break;
				}
			case 5069:
				{
					mapChar = 0x0000AB9D;
					break;
				}
			case 5070:
				{
					mapChar = 0x0000AB9E;
					break;
				}
			case 5071:
				{
					mapChar = 0x0000AB9F;
					break;
				}
			case 5072:
				{
					mapChar = 0x0000ABA0;
					break;
				}
			case 5073:
				{
					mapChar = 0x0000ABA1;
					break;
				}
			case 5074:
				{
					mapChar = 0x0000ABA2;
					break;
				}
			case 5075:
				{
					mapChar = 0x0000ABA3;
					break;
				}
			case 5076:
				{
					mapChar = 0x0000ABA4;
					break;
				}
			case 5077:
				{
					mapChar = 0x0000ABA5;
					break;
				}
			case 5078:
				{
					mapChar = 0x0000ABA6;
					break;
				}
			case 5079:
				{
					mapChar = 0x0000ABA7;
					break;
				}
			case 5080:
				{
					mapChar = 0x0000ABA8;
					break;
				}
			case 5081:
				{
					mapChar = 0x0000ABA9;
					break;
				}
			case 5082:
				{
					mapChar = 0x0000ABAA;
					break;
				}
			case 5083:
				{
					mapChar = 0x0000ABAB;
					break;
				}
			case 5084:
				{
					mapChar = 0x0000ABAC;
					break;
				}
			case 5085:
				{
					mapChar = 0x0000ABAD;
					break;
				}
			case 5086:
				{
					mapChar = 0x0000ABAE;
					break;
				}
			case 5087:
				{
					mapChar = 0x0000ABAF;
					break;
				}
			case 5088:
				{
					mapChar = 0x0000ABB0;
					break;
				}
			case 5089:
				{
					mapChar = 0x0000ABB1;
					break;
				}
			case 5090:
				{
					mapChar = 0x0000ABB2;
					break;
				}
			case 5091:
				{
					mapChar = 0x0000ABB3;
					break;
				}
			case 5092:
				{
					mapChar = 0x0000ABB4;
					break;
				}
			case 5093:
				{
					mapChar = 0x0000ABB5;
					break;
				}
			case 5094:
				{
					mapChar = 0x0000ABB6;
					break;
				}
			case 5095:
				{
					mapChar = 0x0000ABB7;
					break;
				}
			case 5096:
				{
					mapChar = 0x0000ABB8;
					break;
				}
			case 5097:
				{
					mapChar = 0x0000ABB9;
					break;
				}
			case 5098:
				{
					mapChar = 0x0000ABBA;
					break;
				}
			case 5099:
				{
					mapChar = 0x0000ABBB;
					break;
				}
			case 5100:
				{
					mapChar = 0x0000ABBC;
					break;
				}
			case 5101:
				{
					mapChar = 0x0000ABBD;
					break;
				}
			case 5102:
				{
					mapChar = 0x0000ABBE;
					break;
				}
			case 5103:
				{
					mapChar = 0x0000ABBF;
					break;
				}
			case 7312:
				{
					mapChar = 4304;
					break;
				}
			case 7313:
				{
					mapChar = 4305;
					break;
				}
			case 7314:
				{
					mapChar = 4306;
					break;
				}
			case 7315:
				{
					mapChar = 4307;
					break;
				}
			case 7316:
				{
					mapChar = 4308;
					break;
				}
			case 7317:
				{
					mapChar = 4309;
					break;
				}
			case 7318:
				{
					mapChar = 4310;
					break;
				}
			case 7319:
				{
					mapChar = 4311;
					break;
				}
			case 7320:
				{
					mapChar = 4312;
					break;
				}
			case 7321:
				{
					mapChar = 4313;
					break;
				}
			case 7322:
				{
					mapChar = 4314;
					break;
				}
			case 7323:
				{
					mapChar = 4315;
					break;
				}
			case 7324:
				{
					mapChar = 4316;
					break;
				}
			case 7325:
				{
					mapChar = 4317;
					break;
				}
			case 7326:
				{
					mapChar = 4318;
					break;
				}
			case 7327:
				{
					mapChar = 4319;
					break;
				}
			case 7328:
				{
					mapChar = 4320;
					break;
				}
			case 7329:
				{
					mapChar = 4321;
					break;
				}
			case 7330:
				{
					mapChar = 4322;
					break;
				}
			case 7331:
				{
					mapChar = 4323;
					break;
				}
			case 7332:
				{
					mapChar = 4324;
					break;
				}
			case 7333:
				{
					mapChar = 4325;
					break;
				}
			case 7334:
				{
					mapChar = 4326;
					break;
				}
			case 7335:
				{
					mapChar = 4327;
					break;
				}
			case 7336:
				{
					mapChar = 4328;
					break;
				}
			case 7337:
				{
					mapChar = 4329;
					break;
				}
			case 7338:
				{
					mapChar = 4330;
					break;
				}
			case 7339:
				{
					mapChar = 4331;
					break;
				}
			case 7340:
				{
					mapChar = 4332;
					break;
				}
			case 7341:
				{
					mapChar = 4333;
					break;
				}
			case 7342:
				{
					mapChar = 4334;
					break;
				}
			case 7343:
				{
					mapChar = 4335;
					break;
				}
			case 7344:
				{
					mapChar = 4336;
					break;
				}
			case 7345:
				{
					mapChar = 4337;
					break;
				}
			case 7346:
				{
					mapChar = 4338;
					break;
				}
			case 7347:
				{
					mapChar = 4339;
					break;
				}
			case 7348:
				{
					mapChar = 4340;
					break;
				}
			case 7349:
				{
					mapChar = 4341;
					break;
				}
			case 7350:
				{
					mapChar = 4342;
					break;
				}
			case 7351:
				{
					mapChar = 4343;
					break;
				}
			case 7352:
				{
					mapChar = 4344;
					break;
				}
			case 7353:
				{
					mapChar = 4345;
					break;
				}
			case 7354:
				{
					mapChar = 4346;
					break;
				}
			case 7355:
				{
					mapChar = 4347;
					break;
				}
			case 7356:
				{
					mapChar = 4348;
					break;
				}
			case 7357:
				{
					mapChar = 4349;
					break;
				}
			case 7358:
				{
					mapChar = 4350;
					break;
				}
			case 7359:
				{
					mapChar = 4351;
					break;
				}
			case 7838:
				{
					mapChar = 223;
					break;
				}
			case 8072:
				{
					mapChar = 8064;
					break;
				}
			case 8073:
				{
					mapChar = 8065;
					break;
				}
			case 8074:
				{
					mapChar = 8066;
					break;
				}
			case 8075:
				{
					mapChar = 8067;
					break;
				}
			case 8076:
				{
					mapChar = 8068;
					break;
				}
			case 8077:
				{
					mapChar = 8069;
					break;
				}
			case 8078:
				{
					mapChar = 8070;
					break;
				}
			case 8079:
				{
					mapChar = 8071;
					break;
				}
			case 8088:
				{
					mapChar = 8080;
					break;
				}
			case 8089:
				{
					mapChar = 8081;
					break;
				}
			case 8090:
				{
					mapChar = 8082;
					break;
				}
			case 8091:
				{
					mapChar = 8083;
					break;
				}
			case 8092:
				{
					mapChar = 8084;
					break;
				}
			case 8093:
				{
					mapChar = 8085;
					break;
				}
			case 8094:
				{
					mapChar = 8086;
					break;
				}
			case 8095:
				{
					mapChar = 8087;
					break;
				}
			case 8104:
				{
					mapChar = 8096;
					break;
				}
			case 8105:
				{
					mapChar = 8097;
					break;
				}
			case 8106:
				{
					mapChar = 8098;
					break;
				}
			case 8107:
				{
					mapChar = 8099;
					break;
				}
			case 8108:
				{
					mapChar = 8100;
					break;
				}
			case 8109:
				{
					mapChar = 8101;
					break;
				}
			case 8110:
				{
					mapChar = 8102;
					break;
				}
			case 8111:
				{
					mapChar = 8103;
					break;
				}
			case 8124:
				{
					mapChar = 8115;
					break;
				}
			case 8140:
				{
					mapChar = 8131;
					break;
				}
			case 8188:
				{
					mapChar = 8179;
					break;
				}
			case 8486:
				{
					mapChar = 969;
					break;
				}
			case 8490:
				{
					mapChar = 107;
					break;
				}
			case 8491:
				{
					mapChar = 229;
					break;
				}
			case 11362:
				{
					mapChar = 619;
					break;
				}
			case 11363:
				{
					mapChar = 7549;
					break;
				}
			case 11364:
				{
					mapChar = 637;
					break;
				}
			case 11373:
				{
					mapChar = 593;
					break;
				}
			case 11374:
				{
					mapChar = 625;
					break;
				}
			case 11375:
				{
					mapChar = 592;
					break;
				}
			case 11376:
				{
					mapChar = 594;
					break;
				}
			case 11390:
				{
					mapChar = 575;
					break;
				}
			case 11391:
				{
					mapChar = 576;
					break;
				}
			case 0x0000A64A:
				{
					mapChar = 7304;
					break;
				}
			case 0x0000A77D:
				{
					mapChar = 7545;
					break;
				}
			case 0x0000A78D:
				{
					mapChar = 613;
					break;
				}
			case 0x0000A7AA:
				{
					mapChar = 614;
					break;
				}
			case 0x0000A7AB:
				{
					mapChar = 604;
					break;
				}
			case 0x0000A7AC:
				{
					mapChar = 609;
					break;
				}
			case 0x0000A7AD:
				{
					mapChar = 620;
					break;
				}
			case 0x0000A7AE:
				{
					mapChar = 618;
					break;
				}
			case 0x0000A7B0:
				{
					mapChar = 670;
					break;
				}
			case 0x0000A7B1:
				{
					mapChar = 647;
					break;
				}
			case 0x0000A7B2:
				{
					mapChar = 669;
					break;
				}
			case 0x0000A7B3:
				{
					mapChar = 0x0000AB53;
					break;
				}
			case 0x0000A7C5:
				{
					mapChar = 642;
					break;
				}
			case 0x0000A7C6:
				{
					mapChar = 7566;
					break;
				}
			}
		} else {
			int32_t offset = $sr(val << 5, 5 + 18);
			mapChar = ch + offset;
		}
	}
	return mapChar;
}

int32_t CharacterData00::toUpperCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)0x00010000)) != 0) {
		if (((int32_t)(val & (uint32_t)0x07FC0000)) == 0x07FC0000) {
			switch (ch) {
			case 383:
				{
					mapChar = 83;
					break;
				}
			case 575:
				{
					mapChar = 11390;
					break;
				}
			case 576:
				{
					mapChar = 11391;
					break;
				}
			case 592:
				{
					mapChar = 11375;
					break;
				}
			case 593:
				{
					mapChar = 11373;
					break;
				}
			case 594:
				{
					mapChar = 11376;
					break;
				}
			case 604:
				{
					mapChar = 0x0000A7AB;
					break;
				}
			case 609:
				{
					mapChar = 0x0000A7AC;
					break;
				}
			case 613:
				{
					mapChar = 0x0000A78D;
					break;
				}
			case 614:
				{
					mapChar = 0x0000A7AA;
					break;
				}
			case 618:
				{
					mapChar = 0x0000A7AE;
					break;
				}
			case 619:
				{
					mapChar = 11362;
					break;
				}
			case 620:
				{
					mapChar = 0x0000A7AD;
					break;
				}
			case 625:
				{
					mapChar = 11374;
					break;
				}
			case 637:
				{
					mapChar = 11364;
					break;
				}
			case 642:
				{
					mapChar = 0x0000A7C5;
					break;
				}
			case 647:
				{
					mapChar = 0x0000A7B1;
					break;
				}
			case 669:
				{
					mapChar = 0x0000A7B2;
					break;
				}
			case 670:
				{
					mapChar = 0x0000A7B0;
					break;
				}
			case 4304:
				{
					mapChar = 7312;
					break;
				}
			case 4305:
				{
					mapChar = 7313;
					break;
				}
			case 4306:
				{
					mapChar = 7314;
					break;
				}
			case 4307:
				{
					mapChar = 7315;
					break;
				}
			case 4308:
				{
					mapChar = 7316;
					break;
				}
			case 4309:
				{
					mapChar = 7317;
					break;
				}
			case 4310:
				{
					mapChar = 7318;
					break;
				}
			case 4311:
				{
					mapChar = 7319;
					break;
				}
			case 4312:
				{
					mapChar = 7320;
					break;
				}
			case 4313:
				{
					mapChar = 7321;
					break;
				}
			case 4314:
				{
					mapChar = 7322;
					break;
				}
			case 4315:
				{
					mapChar = 7323;
					break;
				}
			case 4316:
				{
					mapChar = 7324;
					break;
				}
			case 4317:
				{
					mapChar = 7325;
					break;
				}
			case 4318:
				{
					mapChar = 7326;
					break;
				}
			case 4319:
				{
					mapChar = 7327;
					break;
				}
			case 4320:
				{
					mapChar = 7328;
					break;
				}
			case 4321:
				{
					mapChar = 7329;
					break;
				}
			case 4322:
				{
					mapChar = 7330;
					break;
				}
			case 4323:
				{
					mapChar = 7331;
					break;
				}
			case 4324:
				{
					mapChar = 7332;
					break;
				}
			case 4325:
				{
					mapChar = 7333;
					break;
				}
			case 4326:
				{
					mapChar = 7334;
					break;
				}
			case 4327:
				{
					mapChar = 7335;
					break;
				}
			case 4328:
				{
					mapChar = 7336;
					break;
				}
			case 4329:
				{
					mapChar = 7337;
					break;
				}
			case 4330:
				{
					mapChar = 7338;
					break;
				}
			case 4331:
				{
					mapChar = 7339;
					break;
				}
			case 4332:
				{
					mapChar = 7340;
					break;
				}
			case 4333:
				{
					mapChar = 7341;
					break;
				}
			case 4334:
				{
					mapChar = 7342;
					break;
				}
			case 4335:
				{
					mapChar = 7343;
					break;
				}
			case 4336:
				{
					mapChar = 7344;
					break;
				}
			case 4337:
				{
					mapChar = 7345;
					break;
				}
			case 4338:
				{
					mapChar = 7346;
					break;
				}
			case 4339:
				{
					mapChar = 7347;
					break;
				}
			case 4340:
				{
					mapChar = 7348;
					break;
				}
			case 4341:
				{
					mapChar = 7349;
					break;
				}
			case 4342:
				{
					mapChar = 7350;
					break;
				}
			case 4343:
				{
					mapChar = 7351;
					break;
				}
			case 4344:
				{
					mapChar = 7352;
					break;
				}
			case 4345:
				{
					mapChar = 7353;
					break;
				}
			case 4346:
				{
					mapChar = 7354;
					break;
				}
			case 4349:
				{
					mapChar = 7357;
					break;
				}
			case 4350:
				{
					mapChar = 7358;
					break;
				}
			case 4351:
				{
					mapChar = 7359;
					break;
				}
			case 7296:
				{
					mapChar = 1042;
					break;
				}
			case 7297:
				{
					mapChar = 1044;
					break;
				}
			case 7298:
				{
					mapChar = 1054;
					break;
				}
			case 7299:
				{
					mapChar = 1057;
					break;
				}
			case 7300:
				{
					mapChar = 1058;
					break;
				}
			case 7301:
				{
					mapChar = 1058;
					break;
				}
			case 7302:
				{
					mapChar = 1066;
					break;
				}
			case 7303:
				{
					mapChar = 1122;
					break;
				}
			case 7304:
				{
					mapChar = 0x0000A64A;
					break;
				}
			case 7545:
				{
					mapChar = 0x0000A77D;
					break;
				}
			case 7549:
				{
					mapChar = 11363;
					break;
				}
			case 7566:
				{
					mapChar = 0x0000A7C6;
					break;
				}
			case 8064:
				{
					mapChar = 8072;
					break;
				}
			case 8065:
				{
					mapChar = 8073;
					break;
				}
			case 8066:
				{
					mapChar = 8074;
					break;
				}
			case 8067:
				{
					mapChar = 8075;
					break;
				}
			case 8068:
				{
					mapChar = 8076;
					break;
				}
			case 8069:
				{
					mapChar = 8077;
					break;
				}
			case 8070:
				{
					mapChar = 8078;
					break;
				}
			case 8071:
				{
					mapChar = 8079;
					break;
				}
			case 8080:
				{
					mapChar = 8088;
					break;
				}
			case 8081:
				{
					mapChar = 8089;
					break;
				}
			case 8082:
				{
					mapChar = 8090;
					break;
				}
			case 8083:
				{
					mapChar = 8091;
					break;
				}
			case 8084:
				{
					mapChar = 8092;
					break;
				}
			case 8085:
				{
					mapChar = 8093;
					break;
				}
			case 8086:
				{
					mapChar = 8094;
					break;
				}
			case 8087:
				{
					mapChar = 8095;
					break;
				}
			case 8096:
				{
					mapChar = 8104;
					break;
				}
			case 8097:
				{
					mapChar = 8105;
					break;
				}
			case 8098:
				{
					mapChar = 8106;
					break;
				}
			case 8099:
				{
					mapChar = 8107;
					break;
				}
			case 8100:
				{
					mapChar = 8108;
					break;
				}
			case 8101:
				{
					mapChar = 8109;
					break;
				}
			case 8102:
				{
					mapChar = 8110;
					break;
				}
			case 8103:
				{
					mapChar = 8111;
					break;
				}
			case 8115:
				{
					mapChar = 8124;
					break;
				}
			case 8126:
				{
					mapChar = 921;
					break;
				}
			case 8131:
				{
					mapChar = 8140;
					break;
				}
			case 8179:
				{
					mapChar = 8188;
					break;
				}
			case 11365:
				{
					mapChar = 570;
					break;
				}
			case 11366:
				{
					mapChar = 574;
					break;
				}
			case 11520:
				{
					mapChar = 4256;
					break;
				}
			case 11521:
				{
					mapChar = 4257;
					break;
				}
			case 11522:
				{
					mapChar = 4258;
					break;
				}
			case 11523:
				{
					mapChar = 4259;
					break;
				}
			case 11524:
				{
					mapChar = 4260;
					break;
				}
			case 11525:
				{
					mapChar = 4261;
					break;
				}
			case 11526:
				{
					mapChar = 4262;
					break;
				}
			case 11527:
				{
					mapChar = 4263;
					break;
				}
			case 11528:
				{
					mapChar = 4264;
					break;
				}
			case 11529:
				{
					mapChar = 4265;
					break;
				}
			case 11530:
				{
					mapChar = 4266;
					break;
				}
			case 11531:
				{
					mapChar = 4267;
					break;
				}
			case 11532:
				{
					mapChar = 4268;
					break;
				}
			case 11533:
				{
					mapChar = 4269;
					break;
				}
			case 11534:
				{
					mapChar = 4270;
					break;
				}
			case 11535:
				{
					mapChar = 4271;
					break;
				}
			case 11536:
				{
					mapChar = 4272;
					break;
				}
			case 11537:
				{
					mapChar = 4273;
					break;
				}
			case 11538:
				{
					mapChar = 4274;
					break;
				}
			case 11539:
				{
					mapChar = 4275;
					break;
				}
			case 11540:
				{
					mapChar = 4276;
					break;
				}
			case 11541:
				{
					mapChar = 4277;
					break;
				}
			case 11542:
				{
					mapChar = 4278;
					break;
				}
			case 11543:
				{
					mapChar = 4279;
					break;
				}
			case 11544:
				{
					mapChar = 4280;
					break;
				}
			case 11545:
				{
					mapChar = 4281;
					break;
				}
			case 11546:
				{
					mapChar = 4282;
					break;
				}
			case 11547:
				{
					mapChar = 4283;
					break;
				}
			case 11548:
				{
					mapChar = 4284;
					break;
				}
			case 11549:
				{
					mapChar = 4285;
					break;
				}
			case 11550:
				{
					mapChar = 4286;
					break;
				}
			case 11551:
				{
					mapChar = 4287;
					break;
				}
			case 11552:
				{
					mapChar = 4288;
					break;
				}
			case 11553:
				{
					mapChar = 4289;
					break;
				}
			case 11554:
				{
					mapChar = 4290;
					break;
				}
			case 11555:
				{
					mapChar = 4291;
					break;
				}
			case 11556:
				{
					mapChar = 4292;
					break;
				}
			case 11557:
				{
					mapChar = 4293;
					break;
				}
			case 11559:
				{
					mapChar = 4295;
					break;
				}
			case 11565:
				{
					mapChar = 4301;
					break;
				}
			case 0x0000AB53:
				{
					mapChar = 0x0000A7B3;
					break;
				}
			case 0x0000AB70:
				{
					mapChar = 5024;
					break;
				}
			case 0x0000AB71:
				{
					mapChar = 5025;
					break;
				}
			case 0x0000AB72:
				{
					mapChar = 5026;
					break;
				}
			case 0x0000AB73:
				{
					mapChar = 5027;
					break;
				}
			case 0x0000AB74:
				{
					mapChar = 5028;
					break;
				}
			case 0x0000AB75:
				{
					mapChar = 5029;
					break;
				}
			case 0x0000AB76:
				{
					mapChar = 5030;
					break;
				}
			case 0x0000AB77:
				{
					mapChar = 5031;
					break;
				}
			case 0x0000AB78:
				{
					mapChar = 5032;
					break;
				}
			case 0x0000AB79:
				{
					mapChar = 5033;
					break;
				}
			case 0x0000AB7A:
				{
					mapChar = 5034;
					break;
				}
			case 0x0000AB7B:
				{
					mapChar = 5035;
					break;
				}
			case 0x0000AB7C:
				{
					mapChar = 5036;
					break;
				}
			case 0x0000AB7D:
				{
					mapChar = 5037;
					break;
				}
			case 0x0000AB7E:
				{
					mapChar = 5038;
					break;
				}
			case 0x0000AB7F:
				{
					mapChar = 5039;
					break;
				}
			case 0x0000AB80:
				{
					mapChar = 5040;
					break;
				}
			case 0x0000AB81:
				{
					mapChar = 5041;
					break;
				}
			case 0x0000AB82:
				{
					mapChar = 5042;
					break;
				}
			case 0x0000AB83:
				{
					mapChar = 5043;
					break;
				}
			case 0x0000AB84:
				{
					mapChar = 5044;
					break;
				}
			case 0x0000AB85:
				{
					mapChar = 5045;
					break;
				}
			case 0x0000AB86:
				{
					mapChar = 5046;
					break;
				}
			case 0x0000AB87:
				{
					mapChar = 5047;
					break;
				}
			case 0x0000AB88:
				{
					mapChar = 5048;
					break;
				}
			case 0x0000AB89:
				{
					mapChar = 5049;
					break;
				}
			case 0x0000AB8A:
				{
					mapChar = 5050;
					break;
				}
			case 0x0000AB8B:
				{
					mapChar = 5051;
					break;
				}
			case 0x0000AB8C:
				{
					mapChar = 5052;
					break;
				}
			case 0x0000AB8D:
				{
					mapChar = 5053;
					break;
				}
			case 0x0000AB8E:
				{
					mapChar = 5054;
					break;
				}
			case 0x0000AB8F:
				{
					mapChar = 5055;
					break;
				}
			case 0x0000AB90:
				{
					mapChar = 5056;
					break;
				}
			case 0x0000AB91:
				{
					mapChar = 5057;
					break;
				}
			case 0x0000AB92:
				{
					mapChar = 5058;
					break;
				}
			case 0x0000AB93:
				{
					mapChar = 5059;
					break;
				}
			case 0x0000AB94:
				{
					mapChar = 5060;
					break;
				}
			case 0x0000AB95:
				{
					mapChar = 5061;
					break;
				}
			case 0x0000AB96:
				{
					mapChar = 5062;
					break;
				}
			case 0x0000AB97:
				{
					mapChar = 5063;
					break;
				}
			case 0x0000AB98:
				{
					mapChar = 5064;
					break;
				}
			case 0x0000AB99:
				{
					mapChar = 5065;
					break;
				}
			case 0x0000AB9A:
				{
					mapChar = 5066;
					break;
				}
			case 0x0000AB9B:
				{
					mapChar = 5067;
					break;
				}
			case 0x0000AB9C:
				{
					mapChar = 5068;
					break;
				}
			case 0x0000AB9D:
				{
					mapChar = 5069;
					break;
				}
			case 0x0000AB9E:
				{
					mapChar = 5070;
					break;
				}
			case 0x0000AB9F:
				{
					mapChar = 5071;
					break;
				}
			case 0x0000ABA0:
				{
					mapChar = 5072;
					break;
				}
			case 0x0000ABA1:
				{
					mapChar = 5073;
					break;
				}
			case 0x0000ABA2:
				{
					mapChar = 5074;
					break;
				}
			case 0x0000ABA3:
				{
					mapChar = 5075;
					break;
				}
			case 0x0000ABA4:
				{
					mapChar = 5076;
					break;
				}
			case 0x0000ABA5:
				{
					mapChar = 5077;
					break;
				}
			case 0x0000ABA6:
				{
					mapChar = 5078;
					break;
				}
			case 0x0000ABA7:
				{
					mapChar = 5079;
					break;
				}
			case 0x0000ABA8:
				{
					mapChar = 5080;
					break;
				}
			case 0x0000ABA9:
				{
					mapChar = 5081;
					break;
				}
			case 0x0000ABAA:
				{
					mapChar = 5082;
					break;
				}
			case 0x0000ABAB:
				{
					mapChar = 5083;
					break;
				}
			case 0x0000ABAC:
				{
					mapChar = 5084;
					break;
				}
			case 0x0000ABAD:
				{
					mapChar = 5085;
					break;
				}
			case 0x0000ABAE:
				{
					mapChar = 5086;
					break;
				}
			case 0x0000ABAF:
				{
					mapChar = 5087;
					break;
				}
			case 0x0000ABB0:
				{
					mapChar = 5088;
					break;
				}
			case 0x0000ABB1:
				{
					mapChar = 5089;
					break;
				}
			case 0x0000ABB2:
				{
					mapChar = 5090;
					break;
				}
			case 0x0000ABB3:
				{
					mapChar = 5091;
					break;
				}
			case 0x0000ABB4:
				{
					mapChar = 5092;
					break;
				}
			case 0x0000ABB5:
				{
					mapChar = 5093;
					break;
				}
			case 0x0000ABB6:
				{
					mapChar = 5094;
					break;
				}
			case 0x0000ABB7:
				{
					mapChar = 5095;
					break;
				}
			case 0x0000ABB8:
				{
					mapChar = 5096;
					break;
				}
			case 0x0000ABB9:
				{
					mapChar = 5097;
					break;
				}
			case 0x0000ABBA:
				{
					mapChar = 5098;
					break;
				}
			case 0x0000ABBB:
				{
					mapChar = 5099;
					break;
				}
			case 0x0000ABBC:
				{
					mapChar = 5100;
					break;
				}
			case 0x0000ABBD:
				{
					mapChar = 5101;
					break;
				}
			case 0x0000ABBE:
				{
					mapChar = 5102;
					break;
				}
			case 0x0000ABBF:
				{
					mapChar = 5103;
					break;
				}
			}
		} else {
			int32_t offset = $sr(val << 5, 5 + 18);
			mapChar = ch - offset;
		}
	}
	return mapChar;
}

int32_t CharacterData00::toTitleCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)32768)) != 0) {
		if (((int32_t)(val & (uint32_t)0x00010000)) == 0) {
			mapChar = ch + 1;
		} else if (((int32_t)(val & (uint32_t)0x00020000)) == 0) {
			if (ch >= 4304 && ch <= 4351) {
				mapChar = ch;
			} else {
				mapChar = ch - 1;
			}
		}
	} else if (((int32_t)(val & (uint32_t)0x00010000)) != 0) {
		mapChar = toUpperCase(ch);
	}
	return mapChar;
}

int32_t CharacterData00::digit(int32_t ch, int32_t radix) {
	int32_t value = -1;
	if (radix >= $Character::MIN_RADIX && radix <= $Character::MAX_RADIX) {
		int32_t val = getProperties(ch);
		int32_t kind = (int32_t)(val & (uint32_t)31);
		if (kind == $Character::DECIMAL_DIGIT_NUMBER) {
			value = (int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31);
		} else if (((int32_t)(val & (uint32_t)3072)) == 3072) {
			value = ((int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31)) + 10;
		}
	}
	return (value < radix) ? value : -1;
}

int32_t CharacterData00::getNumericValue(int32_t ch) {
	int32_t val = getProperties(ch);
	int32_t retval = -1;
	do {
		int32_t var$0 = (int32_t)(val & (uint32_t)3072);
		if (var$0 == (0)) {
			goto case$0;
		}
		if (var$0 == (1024)) {
			goto case$1;
		}
		if (var$0 == (2048)) {
			goto case$2;
		}
		if (var$0 == (3072)) {
			goto case$3;
		}
		goto case$4;
case$4:
		// default
		{
		}
case$0:
		// (0)
		{
			retval = -1;
			break;
		}
case$1:
		// (1024)
		{
			retval = (int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31);
			break;
		}
case$2:
		// (2048)
		{
			switch (ch) {
			case 3057:
				{
					retval = 100;
					break;
				}
			case 3058:
				{
					retval = 1000;
					break;
				}
			case 3441:
				{
					retval = 100;
					break;
				}
			case 3442:
				{
					retval = 1000;
					break;
				}
			case 4981:
				{
					retval = 40;
					break;
				}
			case 4982:
				{
					retval = 50;
					break;
				}
			case 4983:
				{
					retval = 60;
					break;
				}
			case 4984:
				{
					retval = 70;
					break;
				}
			case 4985:
				{
					retval = 80;
					break;
				}
			case 4986:
				{
					retval = 90;
					break;
				}
			case 4987:
				{
					retval = 100;
					break;
				}
			case 4988:
				{
					retval = 10000;
					break;
				}
			case 8543:
				{
					retval = 1;
					break;
				}
			case 8556:
				{
					retval = 50;
					break;
				}
			case 8557:
				{
					retval = 100;
					break;
				}
			case 8558:
				{
					retval = 500;
					break;
				}
			case 8559:
				{
					retval = 1000;
					break;
				}
			case 8572:
				{
					retval = 50;
					break;
				}
			case 8573:
				{
					retval = 100;
					break;
				}
			case 8574:
				{
					retval = 500;
					break;
				}
			case 8575:
				{
					retval = 1000;
					break;
				}
			case 8576:
				{
					retval = 1000;
					break;
				}
			case 8577:
				{
					retval = 5000;
					break;
				}
			case 8578:
				{
					retval = 10000;
					break;
				}
			case 8582:
				{
					retval = 50;
					break;
				}
			case 8583:
				{
					retval = 0x0000C350;
					break;
				}
			case 8584:
				{
					retval = 0x000186A0;
					break;
				}
			case 12875:
				{
					retval = 40;
					break;
				}
			case 12876:
				{
					retval = 50;
					break;
				}
			case 12877:
				{
					retval = 60;
					break;
				}
			case 12878:
				{
					retval = 70;
					break;
				}
			case 12879:
				{
					retval = 80;
					break;
				}
			case 12892:
				{
					retval = 32;
					break;
				}
			case 12893:
				{
					retval = 33;
					break;
				}
			case 12894:
				{
					retval = 34;
					break;
				}
			case 12895:
				{
					retval = 35;
					break;
				}
			case 12977:
				{
					retval = 36;
					break;
				}
			case 12978:
				{
					retval = 37;
					break;
				}
			case 12979:
				{
					retval = 38;
					break;
				}
			case 12980:
				{
					retval = 39;
					break;
				}
			case 12981:
				{
					retval = 40;
					break;
				}
			case 12982:
				{
					retval = 41;
					break;
				}
			case 12983:
				{
					retval = 42;
					break;
				}
			case 12984:
				{
					retval = 43;
					break;
				}
			case 12985:
				{
					retval = 44;
					break;
				}
			case 12986:
				{
					retval = 45;
					break;
				}
			case 12987:
				{
					retval = 46;
					break;
				}
			case 12988:
				{
					retval = 47;
					break;
				}
			case 12989:
				{
					retval = 48;
					break;
				}
			case 12990:
				{
					retval = 49;
					break;
				}
			case 12991:
				{
					retval = 50;
					break;
				}
			default:
				{
					retval = -2;
					break;
				}
			}
			break;
		}
case$3:
		// (3072)
		{
			retval = ((int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31)) + 10;
			break;
		}
	} while (false);
	return retval;
}

bool CharacterData00::isDigit(int32_t ch) {
	int32_t props = getProperties(ch);
	return ((int32_t)(props & (uint32_t)31)) == $Character::DECIMAL_DIGIT_NUMBER;
}

bool CharacterData00::isLowerCase(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)1)) != 0;
}

bool CharacterData00::isUpperCase(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)2)) != 0;
}

bool CharacterData00::isWhitespace(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) == 16384);
}

int8_t CharacterData00::getDirectionality(int32_t ch) {
	int32_t val = getProperties(ch);
	int8_t directionality = (int8_t)(((int32_t)(val & (uint32_t)0x78000000)) >> 27);
	if (directionality == 15) {
		switch (ch) {
		case 8234:
			{
				directionality = $Character::DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING;
				break;
			}
		case 8235:
			{
				directionality = $Character::DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING;
				break;
			}
		case 8236:
			{
				directionality = $Character::DIRECTIONALITY_POP_DIRECTIONAL_FORMAT;
				break;
			}
		case 8237:
			{
				directionality = $Character::DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE;
				break;
			}
		case 8238:
			{
				directionality = $Character::DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE;
				break;
			}
		case 8294:
			{
				directionality = $Character::DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE;
				break;
			}
		case 8295:
			{
				directionality = $Character::DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE;
				break;
			}
		case 8296:
			{
				directionality = $Character::DIRECTIONALITY_FIRST_STRONG_ISOLATE;
				break;
			}
		case 8297:
			{
				directionality = $Character::DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE;
				break;
			}
		default:
			{
				directionality = $Character::DIRECTIONALITY_UNDEFINED;
				break;
			}
		}
	}
	return directionality;
}

bool CharacterData00::isMirrored(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)(int32_t)0x80000000)) != 0);
}

int32_t CharacterData00::toUpperCaseEx(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)0x00010000)) != 0) {
		if (((int32_t)(val & (uint32_t)0x07FC0000)) != 0x07FC0000) {
			int32_t offset = $sr(val << 5, 5 + 18);
			mapChar = ch - offset;
		} else {
			switch (ch) {
			case 383:
				{
					mapChar = 83;
					break;
				}
			case 575:
				{
					mapChar = 11390;
					break;
				}
			case 576:
				{
					mapChar = 11391;
					break;
				}
			case 592:
				{
					mapChar = 11375;
					break;
				}
			case 593:
				{
					mapChar = 11373;
					break;
				}
			case 594:
				{
					mapChar = 11376;
					break;
				}
			case 604:
				{
					mapChar = 0x0000A7AB;
					break;
				}
			case 609:
				{
					mapChar = 0x0000A7AC;
					break;
				}
			case 613:
				{
					mapChar = 0x0000A78D;
					break;
				}
			case 614:
				{
					mapChar = 0x0000A7AA;
					break;
				}
			case 618:
				{
					mapChar = 0x0000A7AE;
					break;
				}
			case 619:
				{
					mapChar = 11362;
					break;
				}
			case 620:
				{
					mapChar = 0x0000A7AD;
					break;
				}
			case 625:
				{
					mapChar = 11374;
					break;
				}
			case 637:
				{
					mapChar = 11364;
					break;
				}
			case 642:
				{
					mapChar = 0x0000A7C5;
					break;
				}
			case 647:
				{
					mapChar = 0x0000A7B1;
					break;
				}
			case 669:
				{
					mapChar = 0x0000A7B2;
					break;
				}
			case 670:
				{
					mapChar = 0x0000A7B0;
					break;
				}
			case 4304:
				{
					mapChar = 7312;
					break;
				}
			case 4305:
				{
					mapChar = 7313;
					break;
				}
			case 4306:
				{
					mapChar = 7314;
					break;
				}
			case 4307:
				{
					mapChar = 7315;
					break;
				}
			case 4308:
				{
					mapChar = 7316;
					break;
				}
			case 4309:
				{
					mapChar = 7317;
					break;
				}
			case 4310:
				{
					mapChar = 7318;
					break;
				}
			case 4311:
				{
					mapChar = 7319;
					break;
				}
			case 4312:
				{
					mapChar = 7320;
					break;
				}
			case 4313:
				{
					mapChar = 7321;
					break;
				}
			case 4314:
				{
					mapChar = 7322;
					break;
				}
			case 4315:
				{
					mapChar = 7323;
					break;
				}
			case 4316:
				{
					mapChar = 7324;
					break;
				}
			case 4317:
				{
					mapChar = 7325;
					break;
				}
			case 4318:
				{
					mapChar = 7326;
					break;
				}
			case 4319:
				{
					mapChar = 7327;
					break;
				}
			case 4320:
				{
					mapChar = 7328;
					break;
				}
			case 4321:
				{
					mapChar = 7329;
					break;
				}
			case 4322:
				{
					mapChar = 7330;
					break;
				}
			case 4323:
				{
					mapChar = 7331;
					break;
				}
			case 4324:
				{
					mapChar = 7332;
					break;
				}
			case 4325:
				{
					mapChar = 7333;
					break;
				}
			case 4326:
				{
					mapChar = 7334;
					break;
				}
			case 4327:
				{
					mapChar = 7335;
					break;
				}
			case 4328:
				{
					mapChar = 7336;
					break;
				}
			case 4329:
				{
					mapChar = 7337;
					break;
				}
			case 4330:
				{
					mapChar = 7338;
					break;
				}
			case 4331:
				{
					mapChar = 7339;
					break;
				}
			case 4332:
				{
					mapChar = 7340;
					break;
				}
			case 4333:
				{
					mapChar = 7341;
					break;
				}
			case 4334:
				{
					mapChar = 7342;
					break;
				}
			case 4335:
				{
					mapChar = 7343;
					break;
				}
			case 4336:
				{
					mapChar = 7344;
					break;
				}
			case 4337:
				{
					mapChar = 7345;
					break;
				}
			case 4338:
				{
					mapChar = 7346;
					break;
				}
			case 4339:
				{
					mapChar = 7347;
					break;
				}
			case 4340:
				{
					mapChar = 7348;
					break;
				}
			case 4341:
				{
					mapChar = 7349;
					break;
				}
			case 4342:
				{
					mapChar = 7350;
					break;
				}
			case 4343:
				{
					mapChar = 7351;
					break;
				}
			case 4344:
				{
					mapChar = 7352;
					break;
				}
			case 4345:
				{
					mapChar = 7353;
					break;
				}
			case 4346:
				{
					mapChar = 7354;
					break;
				}
			case 4349:
				{
					mapChar = 7357;
					break;
				}
			case 4350:
				{
					mapChar = 7358;
					break;
				}
			case 4351:
				{
					mapChar = 7359;
					break;
				}
			case 7296:
				{
					mapChar = 1042;
					break;
				}
			case 7297:
				{
					mapChar = 1044;
					break;
				}
			case 7298:
				{
					mapChar = 1054;
					break;
				}
			case 7299:
				{
					mapChar = 1057;
					break;
				}
			case 7300:
				{
					mapChar = 1058;
					break;
				}
			case 7301:
				{
					mapChar = 1058;
					break;
				}
			case 7302:
				{
					mapChar = 1066;
					break;
				}
			case 7303:
				{
					mapChar = 1122;
					break;
				}
			case 7304:
				{
					mapChar = 0x0000A64A;
					break;
				}
			case 7545:
				{
					mapChar = 0x0000A77D;
					break;
				}
			case 7549:
				{
					mapChar = 11363;
					break;
				}
			case 7566:
				{
					mapChar = 0x0000A7C6;
					break;
				}
			case 8126:
				{
					mapChar = 921;
					break;
				}
			case 11365:
				{
					mapChar = 570;
					break;
				}
			case 11366:
				{
					mapChar = 574;
					break;
				}
			case 11520:
				{
					mapChar = 4256;
					break;
				}
			case 11521:
				{
					mapChar = 4257;
					break;
				}
			case 11522:
				{
					mapChar = 4258;
					break;
				}
			case 11523:
				{
					mapChar = 4259;
					break;
				}
			case 11524:
				{
					mapChar = 4260;
					break;
				}
			case 11525:
				{
					mapChar = 4261;
					break;
				}
			case 11526:
				{
					mapChar = 4262;
					break;
				}
			case 11527:
				{
					mapChar = 4263;
					break;
				}
			case 11528:
				{
					mapChar = 4264;
					break;
				}
			case 11529:
				{
					mapChar = 4265;
					break;
				}
			case 11530:
				{
					mapChar = 4266;
					break;
				}
			case 11531:
				{
					mapChar = 4267;
					break;
				}
			case 11532:
				{
					mapChar = 4268;
					break;
				}
			case 11533:
				{
					mapChar = 4269;
					break;
				}
			case 11534:
				{
					mapChar = 4270;
					break;
				}
			case 11535:
				{
					mapChar = 4271;
					break;
				}
			case 11536:
				{
					mapChar = 4272;
					break;
				}
			case 11537:
				{
					mapChar = 4273;
					break;
				}
			case 11538:
				{
					mapChar = 4274;
					break;
				}
			case 11539:
				{
					mapChar = 4275;
					break;
				}
			case 11540:
				{
					mapChar = 4276;
					break;
				}
			case 11541:
				{
					mapChar = 4277;
					break;
				}
			case 11542:
				{
					mapChar = 4278;
					break;
				}
			case 11543:
				{
					mapChar = 4279;
					break;
				}
			case 11544:
				{
					mapChar = 4280;
					break;
				}
			case 11545:
				{
					mapChar = 4281;
					break;
				}
			case 11546:
				{
					mapChar = 4282;
					break;
				}
			case 11547:
				{
					mapChar = 4283;
					break;
				}
			case 11548:
				{
					mapChar = 4284;
					break;
				}
			case 11549:
				{
					mapChar = 4285;
					break;
				}
			case 11550:
				{
					mapChar = 4286;
					break;
				}
			case 11551:
				{
					mapChar = 4287;
					break;
				}
			case 11552:
				{
					mapChar = 4288;
					break;
				}
			case 11553:
				{
					mapChar = 4289;
					break;
				}
			case 11554:
				{
					mapChar = 4290;
					break;
				}
			case 11555:
				{
					mapChar = 4291;
					break;
				}
			case 11556:
				{
					mapChar = 4292;
					break;
				}
			case 11557:
				{
					mapChar = 4293;
					break;
				}
			case 11559:
				{
					mapChar = 4295;
					break;
				}
			case 11565:
				{
					mapChar = 4301;
					break;
				}
			case 0x0000AB53:
				{
					mapChar = 0x0000A7B3;
					break;
				}
			case 0x0000AB70:
				{
					mapChar = 5024;
					break;
				}
			case 0x0000AB71:
				{
					mapChar = 5025;
					break;
				}
			case 0x0000AB72:
				{
					mapChar = 5026;
					break;
				}
			case 0x0000AB73:
				{
					mapChar = 5027;
					break;
				}
			case 0x0000AB74:
				{
					mapChar = 5028;
					break;
				}
			case 0x0000AB75:
				{
					mapChar = 5029;
					break;
				}
			case 0x0000AB76:
				{
					mapChar = 5030;
					break;
				}
			case 0x0000AB77:
				{
					mapChar = 5031;
					break;
				}
			case 0x0000AB78:
				{
					mapChar = 5032;
					break;
				}
			case 0x0000AB79:
				{
					mapChar = 5033;
					break;
				}
			case 0x0000AB7A:
				{
					mapChar = 5034;
					break;
				}
			case 0x0000AB7B:
				{
					mapChar = 5035;
					break;
				}
			case 0x0000AB7C:
				{
					mapChar = 5036;
					break;
				}
			case 0x0000AB7D:
				{
					mapChar = 5037;
					break;
				}
			case 0x0000AB7E:
				{
					mapChar = 5038;
					break;
				}
			case 0x0000AB7F:
				{
					mapChar = 5039;
					break;
				}
			case 0x0000AB80:
				{
					mapChar = 5040;
					break;
				}
			case 0x0000AB81:
				{
					mapChar = 5041;
					break;
				}
			case 0x0000AB82:
				{
					mapChar = 5042;
					break;
				}
			case 0x0000AB83:
				{
					mapChar = 5043;
					break;
				}
			case 0x0000AB84:
				{
					mapChar = 5044;
					break;
				}
			case 0x0000AB85:
				{
					mapChar = 5045;
					break;
				}
			case 0x0000AB86:
				{
					mapChar = 5046;
					break;
				}
			case 0x0000AB87:
				{
					mapChar = 5047;
					break;
				}
			case 0x0000AB88:
				{
					mapChar = 5048;
					break;
				}
			case 0x0000AB89:
				{
					mapChar = 5049;
					break;
				}
			case 0x0000AB8A:
				{
					mapChar = 5050;
					break;
				}
			case 0x0000AB8B:
				{
					mapChar = 5051;
					break;
				}
			case 0x0000AB8C:
				{
					mapChar = 5052;
					break;
				}
			case 0x0000AB8D:
				{
					mapChar = 5053;
					break;
				}
			case 0x0000AB8E:
				{
					mapChar = 5054;
					break;
				}
			case 0x0000AB8F:
				{
					mapChar = 5055;
					break;
				}
			case 0x0000AB90:
				{
					mapChar = 5056;
					break;
				}
			case 0x0000AB91:
				{
					mapChar = 5057;
					break;
				}
			case 0x0000AB92:
				{
					mapChar = 5058;
					break;
				}
			case 0x0000AB93:
				{
					mapChar = 5059;
					break;
				}
			case 0x0000AB94:
				{
					mapChar = 5060;
					break;
				}
			case 0x0000AB95:
				{
					mapChar = 5061;
					break;
				}
			case 0x0000AB96:
				{
					mapChar = 5062;
					break;
				}
			case 0x0000AB97:
				{
					mapChar = 5063;
					break;
				}
			case 0x0000AB98:
				{
					mapChar = 5064;
					break;
				}
			case 0x0000AB99:
				{
					mapChar = 5065;
					break;
				}
			case 0x0000AB9A:
				{
					mapChar = 5066;
					break;
				}
			case 0x0000AB9B:
				{
					mapChar = 5067;
					break;
				}
			case 0x0000AB9C:
				{
					mapChar = 5068;
					break;
				}
			case 0x0000AB9D:
				{
					mapChar = 5069;
					break;
				}
			case 0x0000AB9E:
				{
					mapChar = 5070;
					break;
				}
			case 0x0000AB9F:
				{
					mapChar = 5071;
					break;
				}
			case 0x0000ABA0:
				{
					mapChar = 5072;
					break;
				}
			case 0x0000ABA1:
				{
					mapChar = 5073;
					break;
				}
			case 0x0000ABA2:
				{
					mapChar = 5074;
					break;
				}
			case 0x0000ABA3:
				{
					mapChar = 5075;
					break;
				}
			case 0x0000ABA4:
				{
					mapChar = 5076;
					break;
				}
			case 0x0000ABA5:
				{
					mapChar = 5077;
					break;
				}
			case 0x0000ABA6:
				{
					mapChar = 5078;
					break;
				}
			case 0x0000ABA7:
				{
					mapChar = 5079;
					break;
				}
			case 0x0000ABA8:
				{
					mapChar = 5080;
					break;
				}
			case 0x0000ABA9:
				{
					mapChar = 5081;
					break;
				}
			case 0x0000ABAA:
				{
					mapChar = 5082;
					break;
				}
			case 0x0000ABAB:
				{
					mapChar = 5083;
					break;
				}
			case 0x0000ABAC:
				{
					mapChar = 5084;
					break;
				}
			case 0x0000ABAD:
				{
					mapChar = 5085;
					break;
				}
			case 0x0000ABAE:
				{
					mapChar = 5086;
					break;
				}
			case 0x0000ABAF:
				{
					mapChar = 5087;
					break;
				}
			case 0x0000ABB0:
				{
					mapChar = 5088;
					break;
				}
			case 0x0000ABB1:
				{
					mapChar = 5089;
					break;
				}
			case 0x0000ABB2:
				{
					mapChar = 5090;
					break;
				}
			case 0x0000ABB3:
				{
					mapChar = 5091;
					break;
				}
			case 0x0000ABB4:
				{
					mapChar = 5092;
					break;
				}
			case 0x0000ABB5:
				{
					mapChar = 5093;
					break;
				}
			case 0x0000ABB6:
				{
					mapChar = 5094;
					break;
				}
			case 0x0000ABB7:
				{
					mapChar = 5095;
					break;
				}
			case 0x0000ABB8:
				{
					mapChar = 5096;
					break;
				}
			case 0x0000ABB9:
				{
					mapChar = 5097;
					break;
				}
			case 0x0000ABBA:
				{
					mapChar = 5098;
					break;
				}
			case 0x0000ABBB:
				{
					mapChar = 5099;
					break;
				}
			case 0x0000ABBC:
				{
					mapChar = 5100;
					break;
				}
			case 0x0000ABBD:
				{
					mapChar = 5101;
					break;
				}
			case 0x0000ABBE:
				{
					mapChar = 5102;
					break;
				}
			case 0x0000ABBF:
				{
					mapChar = 5103;
					break;
				}
			default:
				{
					mapChar = $Character::ERROR;
					break;
				}
			}
		}
	}
	return mapChar;
}

$chars* CharacterData00::toUpperCaseCharArray(int32_t ch) {
	$var($chars, upperMap, $new($chars, {(char16_t)ch}));
	int32_t location = findInCharMap(ch);
	if (location != -1) {
		$assign(upperMap, $nc($nc(CharacterData00::charMap)->get(location))->get(1));
	}
	return upperMap;
}

int32_t CharacterData00::findInCharMap(int32_t ch) {
	if (CharacterData00::charMap == nullptr || $nc(CharacterData00::charMap)->length == 0) {
		return -1;
	}
	int32_t top = 0;
	int32_t bottom = 0;
	int32_t current = 0;
	bottom = 0;
	top = $nc(CharacterData00::charMap)->length;
	current = top / 2;
	while (top - bottom > 1) {
		if (ch >= $nc($nc($nc(CharacterData00::charMap)->get(current))->get(0))->get(0)) {
			bottom = current;
		} else {
			top = current;
		}
		current = (top + bottom) / 2;
	}
	if (ch == $nc($nc($nc(CharacterData00::charMap)->get(current))->get(0))->get(0)) {
		return current;
	} else {
		return -1;
	}
}

void CharacterData00::init$() {
	$CharacterData::init$();
}

void clinit$CharacterData00($Class* class$) {
	$useLocalCurrentObjectStackCache();
	$assignStatic(CharacterData00::A_DATA, $cstr({0x4800, 0x100F, 0x4800, 0x100F, 0x4800, 0x100F, 0x5800, 0x400F, 0x5000, 0x400F, 0x5800, 0x400F, 0x6000, 0x400F, 0x5000, 0x400F, 0x5000, 0x400F, 0x5000, 0x400F, 0x6000, 0x400C, 0x6800, 0x18, 0x6800, 0x18, 0x2800, 0x18, 0x2800, 0x601A, 0x2800, 0x18, 0x6800, 0x18, 0x6800, 0x18, 0xE800, 0x15, 0xE800, 0x16, 0x6800, 0x18, 0x2000, 0x19, 0x3800, 0x18, 0x2000, 0x14, 0x3800, 0x18, 0x3800, 0x18, 0x1800, 0x3609, 0x1800, 0x3609, 0x3800, 0x18, 0x6800, 0x18, 0xE800, 0x19, 0x6800, 0x19, 0xE800, 0x19, 0x6800, 0x18, 0x6800, 0x18, 0x82, 0x7FE1, 0x82, 0x7FE1, 0x82, 0x7FE1, 0x82, 0x7FE1, 0xE800, 0x15, 0x6800, 0x18, 0xE800, 0x16, 0x6800, 0x1B, 0x6800, 0x5017, 0x6800, 0x1B, 0x81, 0x7FE2, 0x81, 0x7FE2, 0x81, 0x7FE2, 0x81, 0x7FE2, 0xE800, 0x15, 0x6800, 0x19, 0xE800, 0x16, 0x6800, 0x19, 0x4800, 0x100F, 0x4800, 0x100F, 0x5000, 0x100F, 0x3800, '\f', 0x6800, 0x18, 0x2800, 0x601A, 0x2800, 0x601A, 0x6800, 0x1C, 0x6800, 0x18, 0x6800, 0x1B, 0x6800, 0x1C, '\0', 0x7005, 0xE800, 0x1D, 0x6800, 0x19, 0x4800, 0x1010, 0x6800, 0x1C, 0x6800, 0x1B, 0x2800, 0x1C, 0x2800, 0x19, 0x1800, 0x60B, 0x1800, 0x60B, 0x6800, 0x1B, 0x7FD, 0x7002, 0x6800, 0x18, 0x6800, 0x18, 0x6800, 0x1B, 0x1800, 0x50B, '\0', 0x7005, 0xE800, 0x1E, 0x6800, 0x80B, 0x6800, 0x80B, 0x6800, 0x80B, 0x6800, 0x18, 0x82, 0x7001, 0x82, 0x7001, 0x82, 0x7001, 0x6800, 0x19, 0x82, 0x7001, 0x7FD, 0x7002, 0x81, 0x7002, 0x81, 0x7002, 0x81, 0x7002, 0x6800, 0x19, 0x81, 0x7002, 0x61D, 0x7002, 0x6, 0x7001, 0x5, 0x7002, 0x7FF, 0xF001, 0x3A1, 0x7002, '\0', 0x7002, 0x6, 0x7001, 0x5, 0x7002, 0x6, 0x7001, 0x5, 0x7002, 0x7FD, 0x7002, 0x61E, 0x7001, 0x6, 0x7001, 0x4F5, 0x7002, 0x34A, 0x7001, 0x33A, 0x7001, 0x6, 0x7001, 0x5, 0x7002, 0x336, 0x7001, 0x336, 0x7001, 0x6, 0x7001, 0x5, 0x7002, '\0', 0x7002, 0x13E, 0x7001, 0x32A, 0x7001, 0x32E, 0x7001, 0x6, 0x7001, 0x33E, 0x7001, 0x67D, 0x7002, 0x34E, 0x7001, 0x346, 0x7001, 0x575, 0x7002, '\0', 0x7002, 0x34E, 0x7001, 0x356, 0x7001, 0x5F9, 0x7002, 0x35A, 0x7001, 0x36A, 0x7001, 0x6, 0x7001, 0x5, 0x7002, 0x36A, 0x7001, '\0', 0x7002, '\0', 0x7002, 0x5, 0x7002, 0x366, 0x7001, 0x366, 0x7001, 0x6, 0x7001, 0x5, 0x7002, 0x36E, 0x7001, '\0', 0x7002, '\0', 0x7005, '\0', 0x7002, 0x721, 0x7002, '\0', 0x7005, '\0', 0x7005, '\n', 0xF001, 0x7, 0xF003, '\t', 0xF002, '\n', 0xF001, 0x7, 0xF003, '\t', 0xF002, '\t', 0xF002, 0x6, 0x7001, 0x5, 0x7002, 0x13D, 0x7002, 0x7FD, 0x7002, '\n', 0xF001, 0x67E, 0x7001, 0x722, 0x7001, 0x5FA, 0x7001, '\0', 0x7002, 0x7FE, 0x7001, 0x6, 0x7001, 0x5, 0x7002, 0x576, 0x7001, 0x7FE, 0x7001, 0x7FD, 0x7002, 0x7FD, 0x7002, 0x6, 0x7001, 0x5, 0x7002, 0x4F6, 0x7001, 0x116, 0x7001, 0x11E, 0x7001, 0x7FD, 0x7002, 0x7FD, 0x7002, 0x7FD, 0x7002, 0x349, 0x7002, 0x339, 0x7002, '\0', 0x7002, 0x335, 0x7002, 0x335, 0x7002, '\0', 0x7002, 0x329, 0x7002, '\0', 0x7002, 0x32D, 0x7002, 0x7FD, 0x7002, '\0', 0x7002, 0x335, 0x7002, 0x7FD, 0x7002, '\0', 0x7002, 0x33D, 0x7002, '\0', 0x7002, 0x7FD, 0x7002, 0x345, 0x7002, 0x34D, 0x7002, '\0', 0x7002, 0x34D, 0x7002, 0x355, 0x7002, '\0', 0x7002, '\0', 0x7002, 0x359, 0x7002, 0x369, 0x7002, '\0', 0x7002, 0x7FD, 0x7002, 0x369, 0x7002, 0x369, 0x7002, 0x115, 0x7002, 0x365, 0x7002, 0x365, 0x7002, 0x11D, 0x7002, '\0', 0x7002, 0x36D, 0x7002, '\0', 0x7002, '\0', 0x7005, '\0', 0x7002, '\0', 0x7004, '\0', 0x7004, '\0', 0x7004, 0x6800, 0x7004, 0x6800, 0x7004, '\0', 0x7004, '\0', 0x7004, '\0', 0x7004, 0x6800, 0x1B, 0x6800, 0x1B, 0x6800, 0x7004, 0x6800, 0x7004, '\0', 0x7004, 0x6800, 0x1B, 0x6800, 0x7004, 0x6800, 0x1B, '\0', 0x7004, 0x6800, 0x1B, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x46B1, 0x3006, 0x7800, '\0', 0x7800, '\0', '\0', 0x7004, 0x5F9, 0x7002, 0x5F9, 0x7002, 0x5F9, 0x7002, 0x6800, 0x18, 0x1D2, 0x7001, 0x9A, 0x7001, 0x6800, 0x18, 0x96, 0x7001, 0x96, 0x7001, 0x96, 0x7001, 0x7800, '\0', 0x102, 0x7001, 0x7800, '\0', 0xFE, 0x7001, 0xFE, 0x7001, 0x7FD, 0x7002, 0x82, 0x7001, 0x7800, '\0', 0x82, 0x7001, 0x99, 0x7002, 0x95, 0x7002, 0x95, 0x7002, 0x95, 0x7002, 0x7FD, 0x7002, 0x81, 0x7002, '}', 0x7002, 0x81, 0x7002, 0x101, 0x7002, 0xFD, 0x7002, 0xFD, 0x7002, '\"', 0x7001, 0xF9, 0x7002, 0xE5, 0x7002, '\0', 0x7001, '\0', 0x7001, '\0', 0x7001, 0xBD, 0x7002, 0xD9, 0x7002, '!', 0x7002, 0x159, 0x7002, 0x141, 0x7002, 0x7E5, 0x7002, 0x1D1, 0x7002, 0x712, 0x7001, 0x181, 0x7002, 0x6800, 0x19, 0x6, 0x7001, 0x5, 0x7002, 0x7E6, 0x7001, '\0', 0x7002, 0x5FA, 0x7001, 0x5FA, 0x7001, 0x5FA, 0x7001, 0x142, 0x7001, 0x142, 0x7001, 0x141, 0x7002, 0x141, 0x7002, '\0', 0x1C, 0x4000, 0x3006, 0x4000, 0x7, 0x4000, 0x7, '>', 0x7001, 0x6, 0x7001, 0x5, 0x7002, '=', 0x7002, 0x7800, '\0', 0xC2, 0x7001, 0xC2, 0x7001, 0xC2, 0x7001, 0xC2, 0x7001, 0x7800, '\0', 0x7800, '\0', '\0', 0x7004, '\0', 0x18, '\0', 0x18, '\0', 0x7002, 0xC1, 0x7002, 0xC1, 0x7002, 0xC1, 0x7002, 0xC1, 0x7002, 0x7FD, 0x7002, '\0', 0x7002, '\0', 0x18, 0x6800, 0x14, 0x7800, '\0', 0x7800, '\0', 0x6800, 0x1C, 0x6800, 0x1C, 0x2800, 0x601A, 0x7800, '\0', 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x800, 0x14, 0x4000, 0x3006, 0x800, 0x18, 0x4000, 0x3006, 0x4000, 0x3006, 0x800, 0x18, 0x800, 0x7005, 0x800, 0x7005, 0x800, 0x7005, 0x7800, '\0', 0x7800, '\0', 0x800, 0x7005, 0x800, 0x7005, 0x800, 0x18, 0x800, 0x18, 0x7800, '\0', 0x3000, 0x1010, 0x3000, 0x1010, 0x6800, 0x19, 0x6800, 0x19, 0x1000, 0x19, 0x2800, 0x18, 0x2800, 0x18, 0x1000, 0x601A, 0x3800, 0x18, 0x1000, 0x18, 0x6800, 0x1C, 0x6800, 0x1C, 0x4000, 0x3006, 0x1000, 0x18, 0x1000, 0x1010, 0x7800, '\0', 0x1000, 0x18, 0x1000, 0x18, 0x1000, 0x7005, 0x1000, 0x7005, 0x1000, 0x7004, 0x1000, 0x7005, 0x1000, 0x7005, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x3000, 0x3409, 0x3000, 0x3409, 0x2800, 0x18, 0x3000, 0x18, 0x3000, 0x18, 0x1000, 0x18, 0x4000, 0x3006, 0x1000, 0x7005, 0x1000, 0x18, 0x1000, 0x7005, 0x4000, 0x3006, 0x3000, 0x1010, 0x6800, 0x1C, 0x4000, 0x3006, 0x4000, 0x3006, 0x1000, 0x7004, 0x1000, 0x7004, 0x4000, 0x3006, 0x4000, 0x3006, 0x6800, 0x1C, 0x1000, 0x7005, 0x1000, 0x1C, 0x1000, 0x1C, 0x1000, 0x7005, 0x7800, '\0', 0x1000, 0x1010, 0x4000, 0x3006, 0x7800, '\0', 0x7800, '\0', 0x1000, 0x7005, 0x800, 0x3409, 0x800, 0x3409, 0x800, 0x7005, 0x4000, 0x3006, 0x800, 0x7004, 0x800, 0x7004, 0x800, 0x7004, 0x7800, '\0', 0x800, 0x601A, 0x800, 0x601A, 0x800, 0x7004, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x800, 0x18, 0x800, 0x18, 0x1000, 0x7005, 0x7800, '\0', 0x3000, 0x1010, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x7005, '\0', 0x3008, '\0', 0x3008, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x7005, 0x4000, 0x3006, '\0', 0x3749, '\0', 0x3749, '\0', 0x18, '\0', 0x7004, '\0', 0x7005, 0x4000, 0x3006, 0x7800, '\0', '\0', 0x7005, '\0', 0x7005, 0x7800, '\0', 0x4000, 0x3006, 0x7800, '\0', 0x7800, '\0', '\0', 0x3008, '\0', 0x3008, 0x7800, '\0', '\0', 0x80B, '\0', 0x80B, '\0', 0x80B, '\0', 0x6EB, '\0', 0x1C, 0x2800, 0x601A, '\0', 0x7005, '\0', 0x18, 0x7800, '\0', 0x4000, 0x3006, '\0', 0x18, 0x7800, '\0', '\0', 0x18, 0x2800, 0x601A, '\0', 0x1C, '\0', 0x7005, 0x4000, 0x3006, '\0', 0x7005, '\0', 0x74B, '\0', 0x80B, '\0', 0x80B, 0x6800, 0x1C, 0x6800, 0x1C, 0x7800, '\0', 0x7800, '\0', '\0', 0x18, 0x6800, 0x50B, 0x6800, 0x50B, 0x6800, 0x4AB, 0x6800, 0x4AB, 0x6800, 0x4AB, '\0', 0x1C, '\0', 0x18, '\0', 0x7005, '\0', 0x3008, '\0', 0x3006, '\0', 0x3006, '\0', 0x3008, '\0', 0x7005, '\0', 0x1C, '\0', 0x7005, '\0', 0x3008, '\0', 0x80B, '\0', 0x7005, '\0', 0x80B, '\0', 0x1C, 0x7800, '\0', 0x2800, 0x601A, '\0', 0x7004, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x18, '\0', 0x3609, '\0', 0x3609, '\0', 0x7004, 0x7800, '\0', '\0', 0x1C, '\0', 0x1C, '\0', 0x18, '\0', 0x1C, '\0', 0x3409, '\0', 0x3409, '\0', 0x3008, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x1C, '\0', 0x1C, 0x7800, '\0', '\0', 0x1C, '\0', 0x18, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x3008, '\0', 0x7005, 0x7FE, 0x7001, 0x7FE, 0x7001, 0x7800, '\0', 0x7FE, 0x7001, 0x7FD, 0xF002, 0x7FD, 0xF002, 0x7FD, 0xF002, '\0', 0x18, '\0', 0x7004, 0x7FD, 0xF002, '\0', 0x18, '\0', 0x70B, '\0', 0x70B, '\0', 0x70B, '\0', 0x70B, '\0', 0x42B, '\0', 0x54B, '\0', 0x80B, '\0', 0x80B, 0x7800, '\0', '\"', 0x7001, '\"', 0x7001, '!', 0x7002, '!', 0x7002, 0x6800, 0x14, '\0', 0x7005, 0x6000, 0x400C, '\0', 0x7005, '\0', 0x7005, 0xE800, 0x15, 0xE800, 0x16, 0x7800, '\0', '\0', 0x746A, '\0', 0x746A, '\0', 0x746A, '\0', 0x7005, 0x6800, 0x60B, 0x6800, 0x60B, 0x6800, 0x14, 0x6800, 0x18, 0x6800, 0x18, 0x4000, 0x3006, 0x4800, 0x1010, 0x7800, '\0', '\0', 0x7005, '\0', 0x7004, '\0', 0x7005, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x7005, '\0', 0x4EB, 0x7800, '\0', 0x4000, 0x7, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x7005, '\0', 0x3008, 0x4000, 0x3006, 0x7FD, 0x7002, 0x7800, '\0', 0x7FE, 0x7001, 0x7800, '\0', 0x4000, 0x3006, '\0', 0x3008, '\0', 0x7005, '\0', 0x3008, '\0', 0x7004, '\0', 0x7002, '\0', 0x7004, 0x7FD, 0x7002, '\0', 0x7002, '\0', 0x7004, 0x7FD, 0x7002, 0xED, 0x7002, 0x7FE, 0x7001, '\0', 0x7002, 0x7E1, 0x7002, 0x7E1, 0x7002, 0x7E2, 0x7001, 0x7E2, 0x7001, 0x7FD, 0x7002, 0x7E1, 0x7002, 0x7800, '\0', 0x7E2, 0x7001, 0x6D9, 0x7002, 0x6D9, 0x7002, 0x6A9, 0x7002, 0x6A9, 0x7002, 0x671, 0x7002, 0x671, 0x7002, 0x601, 0x7002, 0x601, 0x7002, 0x641, 0x7002, 0x641, 0x7002, 0x609, 0x7002, 0x609, 0x7002, 0x7FF, 0xF003, 0x7FF, 0xF003, 0x6DA, 0x7001, 0x6DA, 0x7001, 0x7FF, 0xF003, 0x6800, 0x1B, 0x7FD, 0x7002, 0x6800, 0x1B, 0x6AA, 0x7001, 0x6AA, 0x7001, 0x672, 0x7001, 0x672, 0x7001, 0x7800, '\0', 0x6800, 0x1B, 0x7FD, 0x7002, 0x7E5, 0x7002, 0x642, 0x7001, 0x642, 0x7001, 0x7E6, 0x7001, 0x6800, 0x1B, 0x602, 0x7001, 0x602, 0x7001, 0x60A, 0x7001, 0x60A, 0x7001, 0x6800, 0x1B, 0x7800, '\0', 0x6000, 0x400C, 0x6000, 0x400C, 0x6000, 0x400C, 0x6000, '\f', 0x6000, 0x400C, 0x4800, 0x1010, 0x4800, 0x1010, 0x4800, 0x1010, '\0', 0x1010, 0x800, 0x1010, 0x6800, 0x14, 0x6800, 0x14, 0x6800, 0x1D, 0x6800, 0x1E, 0x6800, 0x15, 0x6800, 0x1D, 0x6000, 0x400D, 0x5000, 0x400E, 0x7800, 0x1010, 0x7800, 0x1010, 0x7800, 0x1010, 0x3800, '\f', 0x2800, 0x18, 0x2800, 0x18, 0x2800, 0x18, 0x6800, 0x18, 0x6800, 0x18, 0xE800, 0x1D, 0xE800, 0x1E, 0x6800, 0x18, 0x6800, 0x18, 0x6800, 0x5017, 0x6800, 0x5017, 0x6800, 0x18, 0x3800, 0x19, 0xE800, 0x15, 0xE800, 0x16, 0x6800, 0x18, 0x6800, 0x19, 0x6800, 0x18, 0x6800, 0x18, 0x6000, 0x400C, 0x1800, 0x60B, '\0', 0x7004, 0x2000, 0x19, 0x2000, 0x19, 0x6800, 0x19, 0xE800, 0x15, 0xE800, 0x16, '\0', 0x7004, 0x1800, 0x40B, 0x1800, 0x40B, '\0', 0x7004, 0x7800, '\0', 0x4000, 0x3006, 0x4000, 0x7, 0x4000, 0x7, 0x4000, 0x3006, '\0', 0x7001, 0x6800, 0x1C, 0x6800, 0x1C, '\0', 0x7001, '\0', 0x7002, '\0', 0x7001, '\0', 0x7001, '\0', 0x7002, 0x6800, 0x19, '\0', 0x7001, 0x7FE, 0x7001, 0x6800, 0x1C, 0x2800, 0x1C, '\0', 0x7002, 'r', 0x7001, '\0', 0x7001, 0x6800, 0x19, '\0', 0x7001, 0x6800, 0x1C, 0x6800, 0x19, 'q', 0x7002, '\0', 0x1C, 'B', 0x742A, 'B', 0x742A, 'B', 0x780A, 'B', 0x780A, 'A', 0x762A, 'A', 0x762A, 'A', 0x780A, 'A', 0x780A, '\0', 0x780A, '\0', 0x780A, '\0', 0x780A, 0x6, 0x7001, 0x5, 0x7002, '\0', 0x742A, '\0', 0x780A, 0x6800, 0x6EB, 0x6800, 0x19, 0x6800, 0x1C, 0x6800, 0x19, 0xE800, 0x19, 0xE800, 0x19, 0xE800, 0x19, 0x2000, 0x19, 0x2800, 0x19, 0x6800, 0x1C, 0xE800, 0x15, 0xE800, 0x16, 0x6800, 0x1C, '\0', 0x1C, 0x6800, 0x1C, 0x6800, 0x1C, '\0', 0x1C, 0x6800, 0x42B, 0x6800, 0x42B, 0x6800, 0x5AB, 0x6800, 0x5AB, 0x1800, 0x72B, 0x1800, 0x72B, 'j', 0x1C, 'j', 0x1C, 'i', 0x1C, 'i', 0x1C, 0x6800, 0x6CB, 0x6800, 0x40B, 0x6800, 0x40B, 0x6800, 0x40B, 0x6800, 0x40B, 0x6800, 0x58B, 0x6800, 0x58B, 0x6800, 0x58B, 0x6800, 0x58B, 0x6800, 0x42B, 0x6800, 0x56B, 0x6800, 0x56B, 0x6800, 0x6EB, 0x6800, 0x6EB, 0xE800, 0x19, 0xE800, 0x15, 0xE800, 0x16, 0x6800, 0x19, 0xE800, 0x16, 0xE800, 0x15, 0xE800, 0x1C, 0x6800, 0x1C, 0xC1, 0x7002, 0x7800, '\0', 0x5, 0x7002, 0x7FE, 0x7001, '\0', 0x7002, 0x6800, 0x1C, 0x6800, 0x1C, 0x6, 0x7001, 0x5, 0x7002, 0x4000, 0x3006, 0x7800, '\0', 0x6800, 0x18, 0x6800, 0x18, 0x6800, 0x80B, 0x7800, '\0', 0x7FD, 0x7002, 0xE800, 0x1D, 0xE800, 0x1E, 0x6800, 0x18, 0x6800, 0x14, 0x6800, 0x18, 0x6800, 0x7004, 0x6800, 0x15, 0x6800, 0x18, 0x6800, 0x18, 0x7800, '\0', 0x6800, 0x1C, '\0', 0x7004, '\0', 0x7005, '\0', 0x772A, 0x6800, 0x14, 0x6800, 0x15, 0x6800, 0x16, 0x6800, 0x16, 0x6800, 0x1C, '\0', 0x740A, '\0', 0x740A, '\0', 0x740A, 0x6800, 0x14, '\0', 0x7004, '\0', 0x764A, '\0', 0x776A, '\0', 0x748A, '\0', 0x7004, '\0', 0x7005, 0x6800, 0x18, 0x4000, 0x3006, 0x6800, 0x1B, 0x6800, 0x1B, '\0', 0x7004, '\0', 0x7004, '\0', 0x7005, '\0', 0x5EB, '\0', 0x5EB, '\0', 0x42B, '\0', 0x42B, '\0', 0x44B, '\0', 0x56B, '\0', 0x68B, '\0', 0x80B, 0x6800, 0x1C, 0x6800, 0x48B, 0x6800, 0x48B, 0x6800, 0x48B, '\0', 0x1C, 0x6800, 0x80B, '\0', 0x7005, '\0', 0x7005, '\0', 0x7005, 0x7800, '\0', '\0', 0x7004, 0x6800, 0x18, 0x4000, 0x7, 0x6800, 0x18, 0x6800, 0x18, 0x6800, 0x7004, '\0', 0x776A, '\0', 0x776A, '\0', 0x776A, '\0', 0x762A, 0x6800, 0x1B, 0x6800, 0x7004, 0x6800, 0x7004, '\0', 0x1B, '\0', 0x1B, 0x6, 0x7001, 0x741, 0x7002, '\0', 0x7002, 0x742, 0x7001, 0x7FE, 0x7001, 0x5, 0x7002, 0x7800, '\0', 0x7800, '\0', 0x6, 0x7001, 0x5, 0x7002, '\0', 0x7005, 0x2800, 0x601A, 0x2800, 0x1C, '\0', 0x3008, '\0', 0x3008, '\0', 0x3008, '\0', 0x18, '\0', 0x7004, '\0', 0x3008, '\0', 0x7002, '\0', 0x1B, '\0', 0x7002, '\0', 0x7004, '\0', 0x3008, '\0', 0x18, '\0', 0x13, '\0', 0x13, '\0', 0x12, '\0', 0x12, '\0', 0x7005, '\0', 0x7705, '\0', 0x7005, '\0', 0x76E5, '\0', 0x7545, '\0', 0x7005, '\0', 0x75C5, '\0', 0x7005, '\0', 0x7005, '\0', 0x76A5, '\0', 0x7005, '\0', 0x7665, '\0', 0x7005, '\0', 0x75A5, 0x4000, 0x3006, 0x800, 0x7005, 0x800, 0x7005, 0x2000, 0x19, 0x1000, 0x1B, 0x1000, 0x1B, 0x6800, 0x16, 0x6800, 0x15, 0x1000, 0x601A, 0x6800, 0x1C, 0x6800, 0x18, 0x6800, 0x15, 0x6800, 0x16, 0x6800, 0x18, 0x6800, 0x14, 0x6800, 0x5017, 0x6800, 0x5017, 0x6800, 0x15, 0x6800, 0x5017, 0x6800, 0x5017, 0x3800, 0x18, 0x7800, '\0', 0x6800, 0x18, 0x3800, 0x18, 0x6800, 0x14, 0xE800, 0x15, 0xE800, 0x16, 0x2800, 0x18, 0x2000, 0x19, 0x2000, 0x14, 0x6800, 0x19, 0x7800, '\0', 0x6800, 0x18, 0x2800, 0x601A, 0x7800, '\0', 0x4800, 0x1010, 0x6800, 0x19, 0x6800, 0x1B, 0x2800, 0x601A, 0x7800, '\0', 0x7800, '\0', 0x6800, 0x1010, 0x6800, 0x1010, 0x6800, 0x1010}));
	CharacterData00::$assertionsDisabled = !CharacterData00::class$->desiredAssertionStatus();
	$assignStatic(CharacterData00::instance, $new(CharacterData00));
	$assignStatic(CharacterData00::X, ($cstr({'\0', 0x10, ' ', '0', '@', 'P', '`', 'p', 0x80, 0x90, 0xA0, 0xB0, 0xC0, 0xD0, 0xE0, 0xF0, 0x80, 0x100, 0x110, 0x120, 0x130, 0x140, 0x150, 0x160, 0x170, 0x170, 0x180, 0x190, 0x1A0, 0x1B0, 0x1C0, 0x1D0, 0x1E0, 0x1F0, 0x200, 0x80, 0x210, 0x80, 0x220, 0x80, 0x80, 0x230, 0x240, 0x250, 0x260, 0x270, 0x280, 0x290, 0x2A0, 0x2B0, 0x2C0, 0x2D0, 0x2B0, 0x2B0, 0x2E0, 0x2F0, 0x300, 0x310, 0x320, 0x2B0, 0x2B0, 0x330, 0x340, 0x350, 0x360, 0x370, 0x380, 0x390, 0x3A0, 0x3B0, 0x3C0, 0x3D0, 0x3E0, 0x3F0, 0x400, 0x410, 0x420, 0x430, 0x440, 0x450, 0x460, 0x470, 0x480, 0x490, 0x4A0, 0x4B0, 0x4C0, 0x4D0, 0x4E0, 0x4F0, 0x500, 0x510, 0x520, 0x530, 0x540, 0x550, 0x560, 0x570, 0x580, 0x590, 0x5A0, 0x5B0, 0x5C0, 0x5D0, 0x5E0, 0x5F0, 0x600, 0x610, 0x620, 0x630, 0x640, 0x650, 0x660, 0x670, 0x680, 0x3A0, 0x690, 0x6A0, 0x6B0, 0x3A0, 0x6C0, 0x6D0, 0x6E0, 0x6F0, 0x700, 0x710, 0x720, 0x3A0, 0x730, 0x740, 0x750, 0x760, 0x770, 0x780, 0x790, 0x7A0, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x7B0, 0x730, 0x7C0, 0x7D0, 0x7E0, 0x730, 0x7F0, 0x730, 0x800, 0x810, 0x820, 0x780, 0x780, 0x830, 0x840, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x850, 0x860, 0x730, 0x730, 0x870, 0x880, 0x890, 0x8A0, 0x8B0, 0x730, 0x8C0, 0x8D0, 0x8E0, 0x8F0, 0x730, 0x900, 0x910, 0x920, 0x930, 0x730, 0x940, 0x950, 0x960, 0x970, 0x980, 0x730, 0x990, 0x9A0, 0x9B0, 0x9C0, 0x730, 0x9D0, 0x9E0, 0x9F0, 0xA00, 0xA10, 0x3A0, 0xA20, 0xA30, 0xA40, 0xA50, 0xA60, 0xA70, 0x730, 0xA80, 0x730, 0xA90, 0xAA0, 0xAB0, 0xAC0, 0xAD0, 0xAE0, 0xAF0, 0xB00, 0xB10, 0xB20, 0xB30, 0xB40, 0xB20, 0x170, 0xB50, 0x80, 0x80, 0x80, 0x80, 0xB60, 0x80, 0x80, 0x80, 0xB70, 0xB80, 0xB90, 0xBA0, 0xBB0, 0xBC0, 0xBD0, 0xBE0, 0xBF0, 0xC00, 0xC10, 0xC20, 0xC30, 0xC40, 0xC50, 0xC60, 0xC70, 0xC80, 0xC90, 0xCA0, 0xCB0, 0xCC0, 0xCD0, 0xCE0, 0xCF0, 0xD00, 0xD10, 0xD20, 0xD30, 0xD40, 0xD50, 0xD60, 0xD70, 0xD80, 0xD90, 0xDA0, 0xDB0, 0xDC0, 0xDD0, 0xDE0, 0x9B0, 0xDF0, 0xE00, 0xE10, 0xE20, 0xE30, 0xE40, 0xE50, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0xE60, 0xE70, 0xE80, 0x9B0, 0x9B0, 0x9B0, 0xE90, 0x9B0, 0xEA0, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0xEB0, 0xEC0, 0x9B0, 0xED0, 0xEE0, 0xD90, 0xD90, 0xD90, 0xD90, 0xD90, 0xD90, 0xD90, 0xD90, 0xEF0, 0xEF0, 0xEF0, 0xEF0, 0xF00, 0xF10, 0xF20, 0xF30, 0xF40, 0xF50, 0xF60, 0xF70, 0xF80, 0xF90, 0xFA0, 0xFB0, 0x9B0, 0xFC0, 0xFD0, 0xFE0, 0xFF0, 0x9B0, 0x9B0, 0x1000, 0x1010, 0x1020, 0x1030, 0x1040, 0x80, 0x80, 0x80, 0x1050, 0x1060, 0x1070, 0x730, 0x1080, 0x1090, 0x10A0, 0x10A0, 0x10B0, 0x10C0, 0x10D0, 0x10E0, 0x3A0, 0x10F0, 0x9B0, 0x9B0, 0x1100, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0x9B0, 0x1110, 0x1120, 0x1130, 0x1140, 0x660, 0x730, 0x1150, 0x840, 0x730, 0x1160, 0x1170, 0x1180, 0x730, 0x730, 0x1190, 0x730, 0x9B0, 0x11A0, 0x11B0, 0x11C0, 0x11D0, 0x11E0, 0x11C0, 0x11F0, 0x1200, 0xD90, 0xD90, 0xD90, 0xD90, 0x1210, 0xD90, 0xD90, 0x1220, 0x1230, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x9B0, 0x9B0, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1240, 0x1250, 0x1260, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x1270, 0x9B0, 0x1280, 0xAB0, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x1290, 0x12A0, 0x80, 0x12B0, 0x12C0, 0x730, 0x730, 0x12D0, 0x12E0, 0x12F0, 0x80, 0x1300, 0x1310, 0x1320, 0x1330, 0x1340, 0x1350, 0x1360, 0x730, 0x1370, 0x1380, 0x1390, 0x13A0, 0x13B0, 0x13C0, 0x13D0, 0x13E0, 0x13F0, 0x3E0, 0x1400, 0x1410, 0x1420, 0x730, 0x1430, 0x1440, 0x1450, 0x730, 0x1460, 0x1470, 0x1480, 0x1490, 0x14A0, 0x14B0, 0x14C0, 0x1060, 0x1060, 0x730, 0x14D0, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x730, 0x14E0, 0x14F0, 0x1500, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1510, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1520, 0x1240, 0x1240, 0x1240, 0x1530, 0x1240, 0x1540, 0x1550, 0x1560, 0x1240, 0x1240, 0x1240, 0x1570, 0x1240, 0x1240, 0x1580, 0x3A0, 0x1590, 0x15A0, 0x15B0, 0x2B0, 0x2B0, 0x15C0, 0x15D0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x15E0, 0x15F0, 0x2B0, 0x1600, 0x2B0, 0x1610, 0x1620, 0x1630, 0x1640, 0x1650, 0x1660, 0x2B0, 0x2B0, 0x2B0, 0x1670, 0x1680, ' ', 0x1690, 0x16A0, 0x16B0, 0x950, 0x16C0, 0x16D0}))->toCharArray());
	$assignStatic(CharacterData00::Y, ($cstr({'\0', '\0', '\0', '\0', 0x2, 0x4, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\b', 0x4, '\n', '\f', 0xE, 0x10, 0x12, 0x14, 0x16, 0x18, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1C, 0x`', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'd', 'b', 'b', 'b', 'f', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'j', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'l', 'h', 'h', 'j', 'n', 'b', 'b', 'p', 'r', 't', 'v', 'x', 'z', 'r', '|', '~', 'b', 0x80, 0x82, 0x84, 'b', 'b', 'b', 0x86, 0x88, 0x8A, 'b', 0x86, 0x8C, 0x8E, 'h', 0x90, 'b', 0x92, 'b', 0x94, 0x96, 0x96, 0x98, 0x9A, 0x9C, 0x98, 0x9E, 'h', 'h', 'h', 'h', 'h', 'h', 'h', 0xA0, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0xA2, 0x9C, 'b', 0xA4, 'b', 'b', 'b', 'b', 0xA6, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x8A, 0x8A, 0x8A, 0xA8, 0xAA, 0xAC, 0xAE, 0xB0, 0xB2, 'b', 'b', 'b', 'b', 'b', 0xB4, 0xB6, 0xB8, 0xBA, 0xBC, 0xBE, 0xC0, 0x8A, 0xC2, 0xC4, 0xC6, 0xC0, 0xC8, 0xB4, 0xC0, 0xCA, 0xC6, 0xCC, 0xCE, 0x8A, 0x8A, 0x8A, 0xC6, 0x8A, 0xD0, 0xD2, 0x8A, 0xC6, 0xD4, 0xD6, 0xD8, 0x8A, 0x8A, 0xDA, 0xDC, 0x8A, 0x8A, 0x8A, 0xC6, 0xC0, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0xDE, 0xDE, 0xDE, 0xDE, 0xE0, 0xE2, 0xE4, 0xE4, 0xDE, 0xE6, 0xE6, 0xE8, 0xE8, 0xE8, 0xE8, 0xE8, 0xE4, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xDE, 0xDE, 0xEA, 0xE6, 0xE6, 0xE6, 0xEC, 0xEE, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF2, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 'b', 'b', 0xEC, 'b', 0xF4, 0xF6, 0xF8, 0xFA, 0xF4, 0xF4, 0xE6, 0xFC, 0xFE, 0x100, 0x102, 0x104, 0x106, 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 0x108, 'V', 'V', 'V', 'V', 0x10A, 0x10C, 0x10E, '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', 0x110, '\\', '\\', '\\', '\\', 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x11E, 0x120, 0x122, 0x124, 0x126, 'b', 0x128, 0x12A, 0x12C, 0x12C, 0x12C, 0x12C, 0x12C, 0x12C, 0x12C, 0x12C, 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', 0x12E, 0x12E, 0x12E, 0x12E, 0x12E, 0x12E, 0x12E, 0x12E, 'b', 0x130, 0xF0, 0xF0, 0x132, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x134, 'h', 'h', 'h', 'h', 'h', 'h', 0x136, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x138, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13C, 0x13E, 0x140, 0x140, 0x140, 0x142, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x146, 0x148, 0x14A, 0x14C, 0x14E, 0x150, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x154, 0x156, 0x158, 0x152, 0x156, 0xF4, 0xF4, 0xF4, 0xF4, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15C, 0xF4, 0x15E, 0x15A, 0x160, 0x162, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x164, 0x164, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x152, 0x152, 0x152, 0x152, 0x152, 0x170, 0x172, 0x174, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x178, 0x176, 0x176, 0x176, 0x176, 0x17A, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x17C, 0x152, 0x152, 0x152, 0x17E, 0x17E, 0x17E, 0x17E, 0x17E, 0x180, 0x182, 0x176, 0x184, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x186, 0x152, 0x152, 0x152, 0x188, 0x18A, 0x17C, 0x152, 0x18C, 0x18E, 0x190, 0xF0, 0x17C, 0x176, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x176, 0x192, 0x194, 0x174, 0x174, 0x174, 0x174, 0x174, 0x174, 0x174, 0x196, 0x17A, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x198, 0x19A, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x152, 0x152, 0x152, 0x152, 0x152, 0x184, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x19C, 0x19C, 0x19C, 0x19C, 0x19C, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x19E, 0xF0, 0xF0, 0xF0, 0xF0, 0x1A0, '<', 0x10, 0x1A2, 0x150, 0x1A4, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x152, 0xF0, 0x1A6, 0x152, 0x152, 0x152, 0x152, 0x1A6, 0x152, 0x1A6, 0x152, 0x1A8, 0xF4, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x162, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x19E, 0xF0, 0xF4, 0x162, 0x176, 0x176, 0x176, 0x176, 0x176, 0x1AC, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x1AC, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x150, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0xF0, 0x1AE, 0x152, 0x152, 0x152, 0xF0, 0xF0, 0xF0, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x1B0, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1B0, 0x1B2, 0x1B4, 0x1B6, 0x152, 0x152, 0x152, 0x1B0, 0x1B4, 0x1B8, 0x1B4, 0x1BA, 0xF0, 0x17C, 0x152, 0x96, 0x96, 0x96, 0x96, 0x96, 0x152, 0x140, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BE, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x1B4, 0x1C2, 0x96, 0x96, 0x96, 0x1C4, 0x1C2, 0x1C4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x1C4, 0xF4, 0x96, 0x96, 0xF4, 0x1B2, 0x1B4, 0x1B6, 0x152, 0x1C6, 0x1C8, 0x1CA, 0x1C8, 0x1B8, 0x1C4, 0xF4, 0xF4, 0xF4, 0x1C8, 0xF4, 0xF4, 0x96, 0x1C2, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x96, ':', 0x1CC, 0x1CC, 0x1CE, 0x1D0, 0x1D2, 0x198, 0x1D4, 0x1B0, 0x1C2, 0x96, 0x96, 0x1C4, 0xF4, 0x1C2, 0x1C4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C2, 0x1C4, 0x96, 0xF4, 0x198, 0x1B4, 0x1B6, 0x1C6, 0xF4, 0x1D4, 0x1C6, 0x1D4, 0x1A8, 0xF4, 0x1D4, 0xF4, 0xF4, 0xF4, 0x1C2, 0x96, 0x1C4, 0x1C4, 0xF4, 0xF4, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x152, 0x96, 0x1C0, 0x1D6, 0xF4, 0xF4, 0xF4, 0xF4, 0x1D4, 0x1B0, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x96, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C2, 0x96, 0x96, 0xF4, 0x1B2, 0x1B4, 0x1B6, 0x152, 0x152, 0x1D4, 0x1B0, 0x1C8, 0x1B8, 0xF4, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1D8, 0xF4, 0xF4, 0xF4, 0x1C2, 0x152, 0x1A8, 0xF0, 0x1D4, 0x1B4, 0x1C2, 0x96, 0x96, 0x96, 0x1C4, 0x1C2, 0x1C4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C2, 0x96, 0x96, 0xF4, 0x1B2, 0x1B6, 0x1B6, 0x152, 0x1C6, 0x1C8, 0x1CA, 0x1C8, 0x1B8, 0xF4, 0xF4, 0xF4, 0x150, 0x1B0, 0xF4, 0xF4, 0x96, 0x1C2, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1DA, 0x1CC, 0x1CC, 0x1CC, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x1DC, 0x1C2, 0x96, 0x96, 0x1C4, 0xF4, 0x96, 0x1C4, 0x96, 0x96, 0xF4, 0x1C2, 0x1C4, 0x1C4, 0x96, 0xF4, 0x1C2, 0x1C4, 0xF4, 0x96, 0x1C4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0x1B4, 0x1B0, 0x1CA, 0xF4, 0x1B4, 0x1CA, 0x1B4, 0x1B8, 0xF4, 0x1C4, 0xF4, 0xF4, 0x1C8, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1DE, 0x1E0, 0x16E, 0x16E, 0x14E, 0x1E2, 0xF4, 0xF4, 0x1B0, 0x1B4, 0x1B2, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0x1C2, 0x152, 0x1B0, 0x1B4, 0x1CA, 0x152, 0x1C6, 0x152, 0x1A8, 0xF4, 0xF4, 0xF4, 0x1D4, 0x1C6, 0x96, 0x1C4, 0xF4, 0xF4, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0xF4, 0xF4, 0xF4, 0x1E4, 0x1E6, 0x1E6, 0x1E8, 0x1EA, 0x1C0, 0x1B4, 0x1EC, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x96, 0x96, 0xF4, 0x1B2, 0x1EE, 0x1B4, 0x1B4, 0x1CA, 0x1F0, 0x1CA, 0x1B4, 0x1A8, 0xF4, 0xF4, 0xF4, 0x1C8, 0x1CA, 0xF4, 0xF4, 0xF4, 0x1C4, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1C2, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x152, 0x1B4, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1BA, 0x1B2, 0x1B4, 0x1B6, 0x152, 0x1C6, 0x1B4, 0x1CA, 0x1B4, 0x1B8, 0x1F2, 0xF4, 0xF4, 0x96, 0x1F4, 0x1CC, 0x1CC, 0x1CC, 0x1F6, 0x96, 0x152, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1DE, 0x1CC, 0x1CC, 0x1CC, 0x1F8, 0x96, 0x96, 0x96, 0x1D4, 0x1B4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0xF4, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x198, 0xF4, 0x1C8, 0x1B4, 0x152, 0x1C6, 0x1C6, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0xF4, 0xF4, 0xF4, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0xF4, 0x1B4, 0x1D6, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x96, 0x152, 0x152, 0x152, 0x1C6, 0xF4, 0x1FA, 0x96, 0x96, 0x96, 0x1FC, 0xF0, 0xF0, 0x17C, 0x1FE, 0x200, 0x200, 0x200, 0x200, 0x200, 0x140, 0xF4, 0xF4, 0x1C2, 0x1C4, 0x1C4, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x96, 0x152, 0x152, 0x152, 0x17C, 0x1DC, 0xF4, 0x96, 0x96, 0x1C4, 0x202, 0xF0, 0xF0, 0x17C, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0x96, 0x96, 0x1F2, 0x204, 0x140, 0x140, 0x140, 0x140, 0x140, 0x140, 0x140, 0x206, 0x206, 0x204, 0xF0, 0x204, 0x204, 0x204, 0x208, 0x208, 0x208, 0x208, 0x208, 0x1CC, 0x1CC, 0x1CC, 0x1CC, 0x1CC, 0x130, 0x130, 0x130, 0x12, 0x12, 0x20A, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x1D4, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x1B0, 0x152, 0xF0, 0x1FE, 0xF0, 0x96, 0x96, 0x1C0, 0x152, 0x152, 0x152, 0x152, 0x152, 0x1D4, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x1C6, 0x204, 0x204, 0x204, 0x204, 0x20C, 0x204, 0x204, 0x20E, 0x204, 0x140, 0x140, 0x206, 0x204, 0x210, 0x1D6, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F4, 0x1B6, 0x152, 0x1B0, 0x152, 0x152, 0x1A8, 0x1B8, 0x212, 0x1B6, 0x1DC, 0x208, 0x208, 0x208, 0x208, 0x208, 0x140, 0x140, 0x140, 0x96, 0x96, 0x96, 0x1B4, 0x152, 0x96, 0x96, 0x152, 0x1DC, 0x1B4, 0x214, 0x1F4, 0x1B4, 0x1B4, 0x1B4, 0x96, 0x1C0, 0x152, 0x1DC, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1B0, 0x1B6, 0x1B0, 0x1B4, 0x1B4, 0x1B6, 0x1F4, 0x200, 0x200, 0x200, 0x200, 0x200, 0x1B4, 0x1B6, 0x204, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x218, 0xF4, 0xF4, 0x218, 0xF4, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21A, 0x21C, 0x21E, 0x21A, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x1C4, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x1C4, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x150, 0xF0, 0x140, 0x140, 0x140, 0x140, 0x220, 0x222, 0x222, 0x222, 0x222, 0x224, 0x226, 0x1CC, 0x1CC, 0x1CC, 0x228, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0xF4, 0xF4, 0xF4, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x22A, 0x22A, 0x22A, 0xF4, 0x22C, 0x22C, 0x22C, 0xF4, 0x22E, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F2, 0x1EC, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x230, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x232, 0x234, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1D2, 0x140, 0x236, 0x238, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x152, 0x198, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x152, 0x1FE, 0x1D6, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x152, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x1C4, 0x152, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF0, 0x1B6, 0x152, 0x152, 0x152, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x1B0, 0x1B8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x140, 0x1BE, 0x140, 0x1D8, 0x1BA, 0xF4, 0x208, 0x208, 0x208, 0x208, 0x208, 0xF4, 0xF4, 0xF4, 0x23A, 0x23A, 0x23A, 0x23A, 0x23A, 0xF4, 0xF4, 0xF4, 0x10, 0x10, 0x10, 0x23C, 0x10, 0x23E, 0xF0, 0x240, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0xF4, 0xF4, 0x96, 0x242, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x244, 0x246, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x1C4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x152, 0x1B0, 0x1B4, 0x1B6, 0x1B0, 0x1B4, 0xF4, 0xF4, 0x1B4, 0x1B0, 0x1B4, 0x1B4, 0x1B8, 0xF0, 0xF4, 0xF4, 0x1E2, 0xF4, 0x10, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0x248, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x1B0, 0x1B6, 0xF4, 0x140, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F4, 0x1B0, 0x152, 0x152, 0x152, 0x1C6, 0x212, 0x1B0, 0x1B6, 0x152, 0x152, 0x152, 0x1B0, 0x1B4, 0x1B4, 0x1B6, 0x1A8, 0xF0, 0xF0, 0xF0, 0x198, 0x150, 0x208, 0x208, 0x208, 0x208, 0x208, 0xF4, 0xF4, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0xF4, 0xF4, 0x140, 0x140, 0x140, 0x1BE, 0x140, 0x140, 0x140, 0xF4, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x24A, 0x1C6, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x152, 0x152, 0x214, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x212, 0x152, 0x152, 0x1B0, 0x1B0, 0x1B4, 0x1B4, 0x1B0, 0x24C, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0x140, 0x140, 0x140, 0x206, 0x204, 0x204, 0x204, 0x204, 0x130, 0xF0, 0xF0, 0xF0, 0xF0, 0x204, 0x204, 0x204, 0x204, 0x20E, 0xF4, 0x152, 0x214, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F4, 0x152, 0x152, 0x1B4, 0x152, 0x24E, 0x152, 0x96, 0x200, 0x200, 0x200, 0x200, 0x200, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x212, 0x152, 0x1B4, 0x1B6, 0x1B6, 0x152, 0x20A, 0xF4, 0xF4, 0xF4, 0xF4, 0x140, 0x140, 0x96, 0x96, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x152, 0x152, 0x152, 0x152, 0x1B4, 0x1A8, 0xF4, 0x1E4, 0x140, 0x140, 0x208, 0x208, 0x208, 0x208, 0x208, 0xF4, 0x1C2, 0x96, 0x200, 0x200, 0x200, 0x200, 0x200, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xE4, 0xE4, 0xE4, 0x140, 0xB4, 0xB4, 0xB4, 0xB4, 0x250, 0xF4, 0xF4, 0xF4, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x216, 0x252, 0x218, 0x216, 0x140, 0x140, 0x140, 0x140, 0xF4, 0xF4, 0xF4, 0xF4, 0xF0, 0x1FE, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x254, 0xF0, 0xF0, 0xF0, 0x1B2, 0x96, 0x1BA, 0x96, 0x96, 0x96, 0x1B2, 0x256, 0xF0, 0x1C4, 0xF4, 0xF4, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0x258, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x25A, 0x8A, 0xC6, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0xC0, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x25C, 0xDE, 0xDE, 0xF0, 0xF0, 0xF0, 0x17C, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x1A8, 0xF0, 0xF0, 0x150, 0xF0, 0xF0, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0xB4, 0xB4, 0x25E, 0x8A, 0x260, 0x262, 0x262, 0x262, 0x262, 0x264, 0x264, 0x264, 0x264, 0x262, 0x262, 0x262, 0xF4, 0x264, 0x264, 0x264, 0xF4, 0x262, 0x262, 0x262, 0x262, 0x264, 0x264, 0x264, 0x264, 0x262, 0x262, 0x262, 0x262, 0x264, 0x264, 0x264, 0x264, 0x262, 0x262, 0x262, 0xF4, 0x264, 0x264, 0x264, 0xF4, 0x266, 0x266, 0x266, 0x266, 0x268, 0x268, 0x268, 0x268, 0x262, 0x262, 0x262, 0x262, 0x264, 0x264, 0x264, 0x264, 0x26A, 0x26C, 0x26C, 0x26E, 0x270, 0x272, 0x274, 0xF4, 0xB4, 0xB4, 0xB4, 0xB4, 0x276, 0x276, 0x276, 0x276, 0xB4, 0xB4, 0xB4, 0xB4, 0x276, 0x276, 0x276, 0x276, 0xB4, 0xB4, 0xB4, 0xB4, 0x276, 0x276, 0x276, 0x276, 0x262, 0xB4, 0x250, 0xB4, 0x264, 0x278, 0x27A, 0x27C, 0xE6, 0xB4, 0x250, 0xB4, 0x27E, 0x27E, 0x27A, 0xE6, 0x262, 0xB4, 0xF4, 0xB4, 0x264, 0x280, 0x282, 0xE6, 0x262, 0xB4, 0x284, 0xB4, 0x264, 0x286, 0x288, 0xE6, 0xF4, 0xB4, 0x250, 0xB4, 0x28A, 0x28C, 0x27A, 0x28E, 0x290, 0x290, 0x290, 0x292, 0x290, 0x294, 0x296, 0x298, 0x29A, 0x29A, 0x29A, 0x10, 0x29C, 0x29E, 0x29C, 0x29E, 0x10, 0x10, 0x10, 0x10, 0x2A0, 0x2A2, 0x2A2, 0x2A4, 0x2A6, 0x2A6, 0x2A8, 0x10, 0x2AA, 0x2AC, 0x10, 0x2AE, 0x2B0, 0x10, 0x2B2, 0x2B4, 0x10, 0x10, 0x10, 0x10, 0x10, 0x2B6, 0x2B0, 0x10, 0x10, 0x10, 0x10, 0x2B8, 0x296, 0x296, 0x240, 0x2A2, 0x2A2, 0x296, 0x296, 0x296, 0x2BA, 0xF4, 'H', 'H', 'H', 0x2BC, 0x2BE, 0x2C0, 0x2C2, 0x2C2, 0x2C2, 0x2C2, 0x2C2, 0x2BC, 0x2BE, 0x234, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0xDE, 0x2C4, 0xF4, ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', ':', 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x2C6, 0x132, 0x2C8, 0x132, 0x2C8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x198, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x16E, 0x2CA, 0x16E, 0x2CC, 0x16E, 0x2CE, 0x118, 0x8A, 0x118, 0x2D0, 0x2CC, 0x16E, 0x2D2, 0x118, 0x118, 0x16E, 0x16E, 0x16E, 0x2CA, 0x2D4, 0x2CA, 0x216, 0x118, 0x2D6, 0x118, 0x2D8, 0x92, 0x96, 0xDC, 0x16E, 0x8A, 0x118, 0x1E, 0x166, 0x2DA, 0x8A, 0x8A, 0x2DC, 0x16E, 0x2DE, 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 0x2E0, 0x2E0, 0x2E0, 0x2E0, 0x2E0, 0x2E0, 0x2E2, 0x2E2, 0x2E4, 0x2E4, 0x2E4, 0x2E4, 0x2E4, 0x2E4, 0x2E6, 0x2E6, 0x2E8, 0x2EA, 0x2EC, 0x2E8, 0x2EE, 0x16E, 0xF4, 0xF4, 0x166, 0x166, 0x2F0, 0x16E, 0x16E, 0x166, 0x16E, 0x16E, 0x2F0, 0x2DC, 0x16E, 0x2F0, 0x16E, 0x16E, 0x16E, 0x2F0, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x166, 0x16E, 0x2F0, 0x2F0, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F2, 0x2F4, 0x1E, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x2F2, 0x2F6, 0x2F2, 0x1E, 0x166, 0x2F4, 0x2F4, 0x2F2, 0x2F4, 0x1E, 0x1E, 0x1E, 0x166, 0x2F2, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x166, 0x2F2, 0x2F2, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x1E, 0x166, 0x166, 0x2F4, 0x2F4, 0x166, 0x166, 0x166, 0x166, 0x2F2, 0x1E, 0x1E, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x1E, 0x2F2, 0x2F4, 0x1E, 0x166, 0x166, 0x1E, 0x166, 0x166, 0x166, 0x166, 0x2F4, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x1E, 0x166, 0x166, 0x2F4, 0x166, 0x166, 0x166, 0x166, 0x2F2, 0x2F4, 0x2F4, 0x166, 0x2F4, 0x166, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x16E, 0x16E, 0x16E, 0x16E, 0x12, 0x12, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x2F4, 0x16E, 0x16E, 0x16E, 0x2F8, 0x2FA, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x2FC, 0x2F0, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x2FE, 0x16E, 0x16E, 0x2DC, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x166, 0x166, 0x166, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x1E2, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x1E2, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x300, 0x300, 0x300, 0x300, 0x300, 0x300, 0x300, 0x300, 0x300, 0x300, 0x302, 0x302, 0x302, 0x302, 0x302, 0x302, 0x302, 0x302, 0x302, 0x302, 0x304, 0x304, 0x304, 0x304, 0x304, 0x304, 0x304, 0x304, 0x304, 0x304, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x306, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x308, 0x30A, 0x30C, 0x30C, 0x30C, 0x30C, 0x30E, 0x310, 0x310, 0x310, 0x310, 0x312, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x2DC, 0x16E, 0x16E, 0x16E, 0x16E, 0x2DC, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x166, 0x166, 0x166, 0x166, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x2DC, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x2FC, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x314, 0x314, 0x314, 0x314, 0x314, 0x300, 0x300, 0x300, 0x300, 0x300, 0x316, 0x316, 0x316, 0x316, 0x316, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x1E, 0x2F2, 0x318, 0x31A, 0x2F4, 0x2F2, 0x2F4, 0x166, 0x166, 0x2F2, 0x2F4, 0x1E, 0x166, 0x166, 0x2F4, 0x1E, 0x166, 0x2F4, 0x2F4, 0x12, 0x12, 0x12, 0x12, 0x12, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2BE, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31C, 0x31A, 0x2F2, 0x2F4, 0x2F4, 0x1E, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x166, 0x166, 0x166, 0x1E, 0x166, 0x166, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x2F2, 0x166, 0x166, 0x2F4, 0x2F4, 0x1E, 0x2F4, 0x166, 0x12, 0x12, 0x1E, 0x166, 0x2F2, 0x2F2, 0x2F4, 0x166, 0x2F4, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x12, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x1E, 0x2F4, 0x2F4, 0x166, 0x1E, 0x1E, 0x2F2, 0x2F2, 0x2F4, 0x1E, 0x166, 0x166, 0x2F4, 0x166, 0x166, 0x166, 0x2F4, 0x1E, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F2, 0x1E, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F4, 0x166, 0x166, 0x2F4, 0x2F4, 0x2F2, 0x1E, 0x2F2, 0x1E, 0x166, 0x2F2, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x166, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F2, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x2F4, 0x1E, 0x166, 0x166, 0x1E, 0x1E, 0x166, 0x2F4, 0x2F4, 0x1E, 0x166, 0x166, 0x2F4, 0x1E, 0x166, 0x2F2, 0x166, 0x2F2, 0x2F4, 0x2F4, 0x2F2, 0x166, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x166, 0x2F0, 0x2DC, 0x166, 0x166, 0x2F0, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x14C, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x31E, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13A, 0x13C, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x320, 'b', 0x216, 0xAC, 0xAE, 'h', 'h', 0x322, 0x216, 0x260, 'b', 'f', 'v', 0x8A, 0x8A, 0xDE, 0x216, 'b', 'b', 0x324, 0x16E, 0x16E, 0x326, 'h', 0x328, 0xF0, 'b', 0xF4, 0xF4, 0x32A, 0x10, 0x32C, 0x10, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0x32E, 0xF4, 0xF4, 0x32E, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0xF4, 0x13E, 0x1D6, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x150, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x152, 0x10, 0x330, 0x330, 0x10, 0x2AA, 0x2AC, 0x330, 0x10, 0x10, 0x10, 0x10, 0x332, 0x10, 0x23C, 0x330, 0x10, 0x330, 0x12, 0x12, 0x12, 0x12, 0x10, 0x10, 0x334, 0x10, 0x10, 0x10, 0x10, 0x10, 0x29A, 0x10, 0x10, 0x23C, 0x336, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x16E, 0x338, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x14C, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0xF4, 0xF4, '\n', 0x10, 0x33A, 0x33C, 0x12, 0x12, 0x12, 0x12, 0x12, 0x16E, 0x12, 0x12, 0x12, 0x12, 0x33E, 0x340, 0x342, 0x344, 0x344, 0x344, 0x344, 0xF0, 0xF0, 0x20A, 0x346, 0xE4, 0xE4, 0x16E, 0x348, 0x34A, 0x34C, 0x16E, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x150, 0x34E, 0x350, 0x352, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x34C, 0xE4, 0x352, 0xF4, 0xF4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0x204, 0x354, 0x354, 0x204, 0x204, 0x204, 0x204, 0x204, 0x16E, 0x16E, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x2FC, 0x1E2, 0x356, 0x356, 0x356, 0x356, 0x356, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x358, 0x35A, 0x1CC, 0x1CC, 0x35C, 0x35E, 0x35E, 0x35E, 0x35E, 0x35E, 'R', 'R', 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x16E, 0x2FE, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x360, 'R', 'R', 'R', 'R', 'R', 'R', 'R', 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x16E, 0x16E, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x2FC, 0x16E, 0x2FE, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x16E, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x204, 0x2FC, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x364, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x242, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x16E, 0x1E2, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x366, 0x10, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x208, 0x208, 0x208, 0x208, 0x208, 0x96, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x1BA, 0x132, 0x368, 0x152, 0x152, 0x152, 0x152, 0xF0, 0x36A, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0xDE, 0x152, 0x96, 0x96, 0x96, 0x36C, 0x36C, 0x36C, 0x36C, 0x36E, 0xF0, 0x140, 0x140, 0x140, 0xF4, 0xF4, 0xF4, 0xF4, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0x370, 0xE8, 0xE8, 0xE8, 0xE8, 0xE6, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x8A, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x258, 0x8A, 0x8A, 0x8A, 'f', 'h', 0x322, 'b', 'b', 'b', 'b', 'b', 0x372, 0x374, 0x322, 0x92, 'b', 'b', 0x376, 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 0x216, 0x216, 0x260, 0x216, 0x216, 'b', 'b', 'b', 'b', 'b', 'b', 0xF4, 'b', 0x378, 0xA8, 'h', 0x37A, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x37C, 0x37E, 0xDE, 0x92, 0x96, 0x96, 0x96, 0x1DC, 0x96, 0x1B2, 0x96, 0x1C0, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F4, 0x1B6, 0x1B0, 0x16E, 0x16E, 0x198, 0xF4, 0x1CC, 0x1CC, 0x1CC, 0x204, 0x380, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x10, 0x10, 0xF4, 0xF4, 0xF4, 0xF4, 0x1B4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x1B4, 0x17C, 0xF4, 0xF4, 0xF4, 0xF4, 0x140, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0xF4, 0xF4, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x96, 0x96, 0x96, 0x140, 0x1EC, 0x1EC, 0x1C0, 0x208, 0x208, 0x208, 0x208, 0x208, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x152, 0x152, 0x1A8, 0xF0, 0x140, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x152, 0x152, 0x152, 0x152, 0x152, 0x382, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x1E4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1BA, 0x1B4, 0x152, 0x152, 0x1B4, 0x152, 0x1B4, 0x384, 0x140, 0x140, 0x140, 0x140, 0x140, 0x140, 0x13E, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0xF4, 0x140, 0x96, 0x96, 0x1C0, 0x352, 0x96, 0x96, 0x96, 0x96, 0x200, 0x200, 0x200, 0x200, 0x200, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x96, 0x1C0, 0x152, 0x152, 0x1B0, 0x1B6, 0x1B0, 0x1B6, 0x1C6, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x1C0, 0x96, 0x96, 0x96, 0x96, 0x1B0, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0x140, 0x140, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x352, 0x96, 0x96, 0x1F2, 0x204, 0x1F4, 0x1B0, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1DC, 0x152, 0x1DC, 0x1C0, 0x1DC, 0x96, 0x96, 0x1A8, 0x1BA, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x1C2, 0x242, 0x140, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1F4, 0x152, 0x1B4, 0x140, 0x242, 0x386, 0x198, 0xF4, 0xF4, 0xF4, 0xF4, 0x1C2, 0x96, 0x96, 0x1C4, 0x1C2, 0x96, 0x96, 0x1C4, 0x1C2, 0x96, 0x96, 0x1C4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x1C4, 0x96, 0x96, 0x96, 0x1C4, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0x8A, 0xC6, 0x8A, 0x8A, 0x8A, 0x388, 0xDE, 0xDE, 0x8A, 0x8A, 0x8A, 0x8A, 0x38A, 0xE6, 0xF4, 0xF4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0x96, 0x1F4, 0x1B6, 0x1B4, 0x1B0, 0x38C, 0x24E, 0xF4, 0x200, 0x200, 0x200, 0x200, 0x200, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x1C4, 0xF4, 0x1C2, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xF4, 0xF4, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x38E, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x390, 0x362, 0x362, 0x362, 0x362, 0x362, 0x392, 0x362, 0x362, 0x362, 0x394, 0x362, 0x362, 0x396, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x398, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x39A, 0x39C, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x39E, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0xF4, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0x362, 0xF4, 0xF4, 0xF4, 0xB4, 0xB4, 0xB4, 0x250, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x32E, 0xB4, 0xB4, 0xF4, 0xF4, 0x15E, 0x3A0, 0x15A, 0x15A, 0x15A, 0x15A, 0x3A2, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x15C, 0x15A, 0x15A, 0x15C, 0x15C, 0x15A, 0x15E, 0x15C, 0x15A, 0x15A, 0x15A, 0x15A, 0x15A, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x3A4, 0x3A4, 0x3A4, 0x3A4, 0x3A4, 0x3A4, 0x3A4, 0x3A4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x19A, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x3A6, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0xF4, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x3A8, 0xF4, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x10, 0x10, 0x10, 0x3AA, 0x3AC, 0xF4, 0xF4, 0xF4, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x332, 0x3AE, 0x3B0, 0x3A6, 0x3A6, 0x3A6, 0x3A6, 0x3A6, 0x3A6, 0x3A6, 0x3AC, 0x3AA, 0x3AC, 0x10, 0x2AE, 0x3B2, 0x1C, 0x3B4, 0x3B6, 0x10, 0x3B8, 0x31C, 0x31C, 0x3BA, 0x10, 0x3BC, 0x2F4, 0x3BE, 0x3C0, 0x2A8, 0xF4, 0xF4, 0x176, 0x176, 0x1AC, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x176, 0x1AC, 0x3C2, 0x32A, '\f', 0xE, 0x10, 0x12, 0x14, 0x16, 0x18, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1C, 0x1E, ' ', ',', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '0', '2', 0x2BE, 0x2B4, 0x12, 0x10, 0x96, 0x96, 0x96, 0x96, 0x96, 0x352, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xE4, 0xF4, 0x96, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0xF4, 0x96, 0x96, 0x96, 0xF4, 0x96, 0x1C4, 0xF4, ':', 0x3C4, 0x14E, 0x3C6, 0x2DC, 0x166, 0x2F0, 0x1E2, 0xF4, 0xF4, 0xF4, 0xF4, 0x3C8, 0x3CA, 0x16E, 0xF4}))->toCharArray());
	$assignStatic(CharacterData00::A, $new($ints, 972));
	$assignStatic(CharacterData00::B, ($cstr({x6, 0x6, 0x5, 0x}))->toCharArray());
	{
		$assignStatic(CharacterData00::charMap, $new($charArray3, {
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xDF}),
				$$new($chars, {
					u'S',
					u'S'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x130}),
				$$new($chars, {(char16_t)0x130})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x149}),
				$$new($chars, {
					(char16_t)0x2BC,
					u'N'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F0}),
				$$new($chars, {
					u'J',
					(char16_t)0x30C
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x390}),
				$$new($chars, {
					(char16_t)0x399,
					(char16_t)0x308,
					(char16_t)0x301
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x3B0}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x308,
					(char16_t)0x301
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x587}),
				$$new($chars, {
					(char16_t)0x535,
					(char16_t)0x552
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1E96}),
				$$new($chars, {
					u'H',
					(char16_t)0x331
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1E97}),
				$$new($chars, {
					u'T',
					(char16_t)0x308
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1E98}),
				$$new($chars, {
					u'W',
					(char16_t)0x30A
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1E99}),
				$$new($chars, {
					u'Y',
					(char16_t)0x30A
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1E9A}),
				$$new($chars, {
					u'A',
					(char16_t)0x2BE
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F50}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x313
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F52}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x313,
					(char16_t)0x300
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F54}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x313,
					(char16_t)0x301
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F56}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x313,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F80}),
				$$new($chars, {
					(char16_t)0x1F08,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F81}),
				$$new($chars, {
					(char16_t)0x1F09,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F82}),
				$$new($chars, {
					(char16_t)0x1F0A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F83}),
				$$new($chars, {
					(char16_t)0x1F0B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F84}),
				$$new($chars, {
					(char16_t)0x1F0C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F85}),
				$$new($chars, {
					(char16_t)0x1F0D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F86}),
				$$new($chars, {
					(char16_t)0x1F0E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F87}),
				$$new($chars, {
					(char16_t)0x1F0F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F88}),
				$$new($chars, {
					(char16_t)0x1F08,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F89}),
				$$new($chars, {
					(char16_t)0x1F09,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8A}),
				$$new($chars, {
					(char16_t)0x1F0A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8B}),
				$$new($chars, {
					(char16_t)0x1F0B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8C}),
				$$new($chars, {
					(char16_t)0x1F0C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8D}),
				$$new($chars, {
					(char16_t)0x1F0D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8E}),
				$$new($chars, {
					(char16_t)0x1F0E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F8F}),
				$$new($chars, {
					(char16_t)0x1F0F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F90}),
				$$new($chars, {
					(char16_t)0x1F28,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F91}),
				$$new($chars, {
					(char16_t)0x1F29,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F92}),
				$$new($chars, {
					(char16_t)0x1F2A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F93}),
				$$new($chars, {
					(char16_t)0x1F2B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F94}),
				$$new($chars, {
					(char16_t)0x1F2C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F95}),
				$$new($chars, {
					(char16_t)0x1F2D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F96}),
				$$new($chars, {
					(char16_t)0x1F2E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F97}),
				$$new($chars, {
					(char16_t)0x1F2F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F98}),
				$$new($chars, {
					(char16_t)0x1F28,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F99}),
				$$new($chars, {
					(char16_t)0x1F29,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9A}),
				$$new($chars, {
					(char16_t)0x1F2A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9B}),
				$$new($chars, {
					(char16_t)0x1F2B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9C}),
				$$new($chars, {
					(char16_t)0x1F2C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9D}),
				$$new($chars, {
					(char16_t)0x1F2D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9E}),
				$$new($chars, {
					(char16_t)0x1F2E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1F9F}),
				$$new($chars, {
					(char16_t)0x1F2F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA0}),
				$$new($chars, {
					(char16_t)0x1F68,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA1}),
				$$new($chars, {
					(char16_t)0x1F69,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA2}),
				$$new($chars, {
					(char16_t)0x1F6A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA3}),
				$$new($chars, {
					(char16_t)0x1F6B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA4}),
				$$new($chars, {
					(char16_t)0x1F6C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA5}),
				$$new($chars, {
					(char16_t)0x1F6D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA6}),
				$$new($chars, {
					(char16_t)0x1F6E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA7}),
				$$new($chars, {
					(char16_t)0x1F6F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA8}),
				$$new($chars, {
					(char16_t)0x1F68,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FA9}),
				$$new($chars, {
					(char16_t)0x1F69,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAA}),
				$$new($chars, {
					(char16_t)0x1F6A,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAB}),
				$$new($chars, {
					(char16_t)0x1F6B,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAC}),
				$$new($chars, {
					(char16_t)0x1F6C,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAD}),
				$$new($chars, {
					(char16_t)0x1F6D,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAE}),
				$$new($chars, {
					(char16_t)0x1F6E,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FAF}),
				$$new($chars, {
					(char16_t)0x1F6F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FB2}),
				$$new($chars, {
					(char16_t)0x1FBA,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FB3}),
				$$new($chars, {
					(char16_t)0x391,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FB4}),
				$$new($chars, {
					(char16_t)0x386,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FB6}),
				$$new($chars, {
					(char16_t)0x391,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FB7}),
				$$new($chars, {
					(char16_t)0x391,
					(char16_t)0x342,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FBC}),
				$$new($chars, {
					(char16_t)0x391,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FC2}),
				$$new($chars, {
					(char16_t)0x1FCA,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FC3}),
				$$new($chars, {
					(char16_t)0x397,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FC4}),
				$$new($chars, {
					(char16_t)0x389,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FC6}),
				$$new($chars, {
					(char16_t)0x397,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FC7}),
				$$new($chars, {
					(char16_t)0x397,
					(char16_t)0x342,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FCC}),
				$$new($chars, {
					(char16_t)0x397,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FD2}),
				$$new($chars, {
					(char16_t)0x399,
					(char16_t)0x308,
					(char16_t)0x300
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FD3}),
				$$new($chars, {
					(char16_t)0x399,
					(char16_t)0x308,
					(char16_t)0x301
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FD6}),
				$$new($chars, {
					(char16_t)0x399,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FD7}),
				$$new($chars, {
					(char16_t)0x399,
					(char16_t)0x308,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FE2}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x308,
					(char16_t)0x300
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FE3}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x308,
					(char16_t)0x301
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FE4}),
				$$new($chars, {
					(char16_t)0x3A1,
					(char16_t)0x313
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FE6}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FE7}),
				$$new($chars, {
					(char16_t)0x3A5,
					(char16_t)0x308,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FF2}),
				$$new($chars, {
					(char16_t)0x1FFA,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FF3}),
				$$new($chars, {
					(char16_t)0x3A9,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FF4}),
				$$new($chars, {
					(char16_t)0x38F,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FF6}),
				$$new($chars, {
					(char16_t)0x3A9,
					(char16_t)0x342
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FF7}),
				$$new($chars, {
					(char16_t)0x3A9,
					(char16_t)0x342,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0x1FFC}),
				$$new($chars, {
					(char16_t)0x3A9,
					(char16_t)0x399
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB00}),
				$$new($chars, {
					u'F',
					u'F'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB01}),
				$$new($chars, {
					u'F',
					u'I'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB02}),
				$$new($chars, {
					u'F',
					u'L'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB03}),
				$$new($chars, {
					u'F',
					u'F',
					u'I'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB04}),
				$$new($chars, {
					u'F',
					u'F',
					u'L'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB05}),
				$$new($chars, {
					u'S',
					u'T'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB06}),
				$$new($chars, {
					u'S',
					u'T'
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB13}),
				$$new($chars, {
					(char16_t)0x544,
					(char16_t)0x546
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB14}),
				$$new($chars, {
					(char16_t)0x544,
					(char16_t)0x535
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB15}),
				$$new($chars, {
					(char16_t)0x544,
					(char16_t)0x53B
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB16}),
				$$new($chars, {
					(char16_t)0x54E,
					(char16_t)0x546
				})
			}),
			$$new($charArray2, {
				$$new($chars, {(char16_t)0xFB17}),
				$$new($chars, {
					(char16_t)0x544,
					(char16_t)0x53D
				})
			})
		}));
		{
			$var($chars, data, $nc(CharacterData00::A_DATA)->toCharArray());
			if (!CharacterData00::$assertionsDisabled && !(data->length == (972 * 2))) {
				$throwNew($AssertionError);
			}
			int32_t i = 0;
			int32_t j = 0;
			while (i < (972 * 2)) {
				int32_t entry = data->get(i++) << 16;
				$nc(CharacterData00::A)->set(j++, entry | data->get(i++));
			}
		}
	}
}

CharacterData00::CharacterData00() {
}

$Class* CharacterData00::load$($String* name, bool initialize) {
	$loadClass(CharacterData00, name, initialize, &_CharacterData00_ClassInfo_, clinit$CharacterData00, allocate$CharacterData00);
	return class$;
}

$Class* CharacterData00::class$ = nullptr;

	} // lang
} // java