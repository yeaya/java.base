#include <java/lang/CharacterData01.h>

#include <java/lang/AssertionError.h>
#include <java/lang/CharacterData.h>
#include <jcpp.h>

#undef A
#undef A_DATA
#undef B
#undef DECIMAL_DIGIT_NUMBER
#undef DIRECTIONALITY_UNDEFINED
#undef MAX_RADIX
#undef MIN_RADIX
#undef X
#undef Y

using $AssertionError = ::java::lang::AssertionError;
using $Character = ::java::lang::Character;
using $CharacterData = ::java::lang::CharacterData;
using $ClassInfo = ::java::lang::ClassInfo;
using $FieldInfo = ::java::lang::FieldInfo;
using $MethodInfo = ::java::lang::MethodInfo;

namespace java {
	namespace lang {

$FieldInfo _CharacterData01_FieldInfo_[] = {
	{"$assertionsDisabled", "Z", nullptr, $STATIC | $FINAL | $SYNTHETIC, $staticField(CharacterData01, $assertionsDisabled)},
	{"instance", "Ljava/lang/CharacterData;", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, instance)},
	{"X", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, X)},
	{"Y", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, Y)},
	{"A", "[I", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, A)},
	{"A_DATA", "Ljava/lang/String;", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, A_DATA)},
	{"B", "[C", nullptr, $STATIC | $FINAL, $staticField(CharacterData01, B)},
	{}
};

$MethodInfo _CharacterData01_MethodInfo_[] = {
	{"<init>", "()V", nullptr, $PRIVATE, $method(static_cast<void(CharacterData01::*)()>(&CharacterData01::init$))},
	{"digit", "(II)I", nullptr, 0},
	{"getDirectionality", "(I)B", nullptr, 0},
	{"getNumericValue", "(I)I", nullptr, 0},
	{"getProperties", "(I)I", nullptr, 0},
	{"getPropertiesEx", "(I)I", nullptr, 0},
	{"getType", "(I)I", nullptr, 0},
	{"isDigit", "(I)Z", nullptr, 0},
	{"isIdentifierIgnorable", "(I)Z", nullptr, 0},
	{"isIdeographic", "(I)Z", nullptr, 0},
	{"isJavaIdentifierPart", "(I)Z", nullptr, 0},
	{"isJavaIdentifierStart", "(I)Z", nullptr, 0},
	{"isLowerCase", "(I)Z", nullptr, 0},
	{"isMirrored", "(I)Z", nullptr, 0},
	{"isOtherAlphabetic", "(I)Z", nullptr, 0},
	{"isUnicodeIdentifierPart", "(I)Z", nullptr, 0},
	{"isUnicodeIdentifierStart", "(I)Z", nullptr, 0},
	{"isUpperCase", "(I)Z", nullptr, 0},
	{"isWhitespace", "(I)Z", nullptr, 0},
	{"toLowerCase", "(I)I", nullptr, 0},
	{"toTitleCase", "(I)I", nullptr, 0},
	{"toUpperCase", "(I)I", nullptr, 0},
	{}
};

$ClassInfo _CharacterData01_ClassInfo_ = {
	$ACC_SUPER,
	"java.lang.CharacterData01",
	"java.lang.CharacterData",
	nullptr,
	_CharacterData01_FieldInfo_,
	_CharacterData01_MethodInfo_
};

$Object* allocate$CharacterData01($Class* clazz) {
	return $of($alloc(CharacterData01));
}

bool CharacterData01::$assertionsDisabled = false;
$CharacterData* CharacterData01::instance = nullptr;
$chars* CharacterData01::X = nullptr;
$chars* CharacterData01::Y = nullptr;
$ints* CharacterData01::A = nullptr;
$String* CharacterData01::A_DATA = nullptr;
$chars* CharacterData01::B = nullptr;

int32_t CharacterData01::getProperties(int32_t ch) {
	char16_t offset = (char16_t)ch;
	int32_t props = $nc(CharacterData01::A)->get($nc(CharacterData01::Y)->get($nc(CharacterData01::X)->get(offset >> 5) | ((int32_t)((offset >> 1) & (uint32_t)15))) | ((int32_t)(offset & (uint32_t)1)));
	return props;
}

int32_t CharacterData01::getPropertiesEx(int32_t ch) {
	char16_t offset = (char16_t)ch;
	int32_t props = $nc(CharacterData01::B)->get($nc(CharacterData01::Y)->get($nc(CharacterData01::X)->get(offset >> 5) | ((int32_t)((offset >> 1) & (uint32_t)15))) | ((int32_t)(offset & (uint32_t)1)));
	return props;
}

int32_t CharacterData01::getType(int32_t ch) {
	int32_t props = getProperties(ch);
	return ((int32_t)(props & (uint32_t)31));
}

bool CharacterData01::isOtherAlphabetic(int32_t ch) {
	int32_t props = getPropertiesEx(ch);
	return ((int32_t)(props & (uint32_t)4)) != 0;
}

bool CharacterData01::isIdeographic(int32_t ch) {
	int32_t props = getPropertiesEx(ch);
	return ((int32_t)(props & (uint32_t)8)) != 0;
}

bool CharacterData01::isJavaIdentifierStart(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) >= 20480);
}

bool CharacterData01::isJavaIdentifierPart(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)12288)) != 0);
}

bool CharacterData01::isUnicodeIdentifierStart(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)16)) != 0;
}

bool CharacterData01::isUnicodeIdentifierPart(int32_t ch) {
	bool var$0 = ((int32_t)(getPropertiesEx(ch) & (uint32_t)32)) != 0;
	return var$0 || isIdentifierIgnorable(ch);
}

bool CharacterData01::isIdentifierIgnorable(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) == 4096);
}

int32_t CharacterData01::toLowerCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)0x00020000)) != 0) {
		int32_t offset = $sr(val << 5, 5 + 18);
		mapChar = ch + offset;
	}
	return mapChar;
}

int32_t CharacterData01::toUpperCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)0x00010000)) != 0) {
		int32_t offset = $sr(val << 5, 5 + 18);
		mapChar = ch - offset;
	}
	return mapChar;
}

int32_t CharacterData01::toTitleCase(int32_t ch) {
	int32_t mapChar = ch;
	int32_t val = getProperties(ch);
	if (((int32_t)(val & (uint32_t)32768)) != 0) {
		if (((int32_t)(val & (uint32_t)0x00010000)) == 0) {
			mapChar = ch + 1;
		} else if (((int32_t)(val & (uint32_t)0x00020000)) == 0) {
			mapChar = ch - 1;
		}
	} else if (((int32_t)(val & (uint32_t)0x00010000)) != 0) {
		mapChar = toUpperCase(ch);
	}
	return mapChar;
}

int32_t CharacterData01::digit(int32_t ch, int32_t radix) {
	int32_t value = -1;
	if (radix >= $Character::MIN_RADIX && radix <= $Character::MAX_RADIX) {
		int32_t val = getProperties(ch);
		int32_t kind = (int32_t)(val & (uint32_t)31);
		if (kind == $Character::DECIMAL_DIGIT_NUMBER) {
			value = (int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31);
		} else if (((int32_t)(val & (uint32_t)3072)) == 3072) {
			value = ((int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31)) + 10;
		}
	}
	return (value < radix) ? value : -1;
}

int32_t CharacterData01::getNumericValue(int32_t ch) {
	int32_t val = getProperties(ch);
	int32_t retval = -1;
	do {
		int32_t var$0 = (int32_t)(val & (uint32_t)3072);
		if (var$0 == (0)) {
			goto case$0;
		}
		if (var$0 == (1024)) {
			goto case$1;
		}
		if (var$0 == (2048)) {
			goto case$2;
		}
		if (var$0 == (3072)) {
			goto case$3;
		}
		goto case$4;
case$4:
		// default
		{
		}
case$0:
		// (0)
		{
			retval = -1;
			break;
		}
case$1:
		// (1024)
		{
			retval = (int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31);
			break;
		}
case$2:
		// (2048)
		{
			switch (ch) {
			case 0x00010113:
				{
					retval = 40;
					break;
				}
			case 0x00010114:
				{
					retval = 50;
					break;
				}
			case 0x00010115:
				{
					retval = 60;
					break;
				}
			case 0x00010116:
				{
					retval = 70;
					break;
				}
			case 0x00010117:
				{
					retval = 80;
					break;
				}
			case 0x00010118:
				{
					retval = 90;
					break;
				}
			case 0x00010119:
				{
					retval = 100;
					break;
				}
			case 0x0001011A:
				{
					retval = 200;
					break;
				}
			case 0x0001011B:
				{
					retval = 300;
					break;
				}
			case 0x0001011C:
				{
					retval = 400;
					break;
				}
			case 0x0001011D:
				{
					retval = 500;
					break;
				}
			case 0x0001011E:
				{
					retval = 600;
					break;
				}
			case 0x0001011F:
				{
					retval = 700;
					break;
				}
			case 0x00010120:
				{
					retval = 800;
					break;
				}
			case 0x00010121:
				{
					retval = 900;
					break;
				}
			case 0x00010122:
				{
					retval = 1000;
					break;
				}
			case 0x00010123:
				{
					retval = 2000;
					break;
				}
			case 0x00010124:
				{
					retval = 3000;
					break;
				}
			case 0x00010125:
				{
					retval = 4000;
					break;
				}
			case 0x00010126:
				{
					retval = 5000;
					break;
				}
			case 0x00010127:
				{
					retval = 6000;
					break;
				}
			case 0x00010128:
				{
					retval = 7000;
					break;
				}
			case 0x00010129:
				{
					retval = 8000;
					break;
				}
			case 0x0001012A:
				{
					retval = 9000;
					break;
				}
			case 0x0001012B:
				{
					retval = 10000;
					break;
				}
			case 0x0001012C:
				{
					retval = 20000;
					break;
				}
			case 0x0001012D:
				{
					retval = 30000;
					break;
				}
			case 0x0001012E:
				{
					retval = 0x00009C40;
					break;
				}
			case 0x0001012F:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x00010130:
				{
					retval = 0x0000EA60;
					break;
				}
			case 0x00010131:
				{
					retval = 0x00011170;
					break;
				}
			case 0x00010132:
				{
					retval = 0x00013880;
					break;
				}
			case 0x00010133:
				{
					retval = 0x00015F90;
					break;
				}
			case 0x00010144:
				{
					retval = 50;
					break;
				}
			case 0x00010145:
				{
					retval = 500;
					break;
				}
			case 0x00010146:
				{
					retval = 5000;
					break;
				}
			case 0x00010147:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x0001014A:
				{
					retval = 50;
					break;
				}
			case 0x0001014B:
				{
					retval = 100;
					break;
				}
			case 0x0001014C:
				{
					retval = 500;
					break;
				}
			case 0x0001014D:
				{
					retval = 1000;
					break;
				}
			case 0x0001014E:
				{
					retval = 5000;
					break;
				}
			case 0x00010151:
				{
					retval = 50;
					break;
				}
			case 0x00010152:
				{
					retval = 100;
					break;
				}
			case 0x00010153:
				{
					retval = 500;
					break;
				}
			case 0x00010154:
				{
					retval = 1000;
					break;
				}
			case 0x00010155:
				{
					retval = 10000;
					break;
				}
			case 0x00010156:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x00010166:
				{
					retval = 50;
					break;
				}
			case 0x00010167:
				{
					retval = 50;
					break;
				}
			case 0x00010168:
				{
					retval = 50;
					break;
				}
			case 0x00010169:
				{
					retval = 50;
					break;
				}
			case 0x0001016A:
				{
					retval = 100;
					break;
				}
			case 0x0001016B:
				{
					retval = 300;
					break;
				}
			case 0x0001016C:
				{
					retval = 500;
					break;
				}
			case 0x0001016D:
				{
					retval = 500;
					break;
				}
			case 0x0001016E:
				{
					retval = 500;
					break;
				}
			case 0x0001016F:
				{
					retval = 500;
					break;
				}
			case 0x00010170:
				{
					retval = 500;
					break;
				}
			case 0x00010171:
				{
					retval = 1000;
					break;
				}
			case 0x00010172:
				{
					retval = 5000;
					break;
				}
			case 0x00010174:
				{
					retval = 50;
					break;
				}
			case 0x000102ED:
				{
					retval = 40;
					break;
				}
			case 0x000102EE:
				{
					retval = 50;
					break;
				}
			case 0x000102EF:
				{
					retval = 60;
					break;
				}
			case 0x000102F0:
				{
					retval = 70;
					break;
				}
			case 0x000102F1:
				{
					retval = 80;
					break;
				}
			case 0x000102F2:
				{
					retval = 90;
					break;
				}
			case 0x000102F3:
				{
					retval = 100;
					break;
				}
			case 0x000102F4:
				{
					retval = 200;
					break;
				}
			case 0x000102F5:
				{
					retval = 300;
					break;
				}
			case 0x000102F6:
				{
					retval = 400;
					break;
				}
			case 0x000102F7:
				{
					retval = 500;
					break;
				}
			case 0x000102F8:
				{
					retval = 600;
					break;
				}
			case 0x000102F9:
				{
					retval = 700;
					break;
				}
			case 0x000102FA:
				{
					retval = 800;
					break;
				}
			case 0x000102FB:
				{
					retval = 900;
					break;
				}
			case 0x00010323:
				{
					retval = 50;
					break;
				}
			case 0x00010341:
				{
					retval = 90;
					break;
				}
			case 0x0001034A:
				{
					retval = 900;
					break;
				}
			case 0x000103D5:
				{
					retval = 100;
					break;
				}
			case 0x0001085D:
				{
					retval = 100;
					break;
				}
			case 0x0001085E:
				{
					retval = 1000;
					break;
				}
			case 0x0001085F:
				{
					retval = 10000;
					break;
				}
			case 0x000108AF:
				{
					retval = 100;
					break;
				}
			case 0x000108FF:
				{
					retval = 100;
					break;
				}
			case 0x00010919:
				{
					retval = 100;
					break;
				}
			case 0x000109CC:
				{
					retval = 40;
					break;
				}
			case 0x000109CD:
				{
					retval = 50;
					break;
				}
			case 0x000109CE:
				{
					retval = 60;
					break;
				}
			case 0x000109CF:
				{
					retval = 70;
					break;
				}
			case 0x000109D2:
				{
					retval = 100;
					break;
				}
			case 0x000109D3:
				{
					retval = 200;
					break;
				}
			case 0x000109D4:
				{
					retval = 300;
					break;
				}
			case 0x000109D5:
				{
					retval = 400;
					break;
				}
			case 0x000109D6:
				{
					retval = 500;
					break;
				}
			case 0x000109D7:
				{
					retval = 600;
					break;
				}
			case 0x000109D8:
				{
					retval = 700;
					break;
				}
			case 0x000109D9:
				{
					retval = 800;
					break;
				}
			case 0x000109DA:
				{
					retval = 900;
					break;
				}
			case 0x000109DB:
				{
					retval = 1000;
					break;
				}
			case 0x000109DC:
				{
					retval = 2000;
					break;
				}
			case 0x000109DD:
				{
					retval = 3000;
					break;
				}
			case 0x000109DE:
				{
					retval = 4000;
					break;
				}
			case 0x000109DF:
				{
					retval = 5000;
					break;
				}
			case 0x000109E0:
				{
					retval = 6000;
					break;
				}
			case 0x000109E1:
				{
					retval = 7000;
					break;
				}
			case 0x000109E2:
				{
					retval = 8000;
					break;
				}
			case 0x000109E3:
				{
					retval = 9000;
					break;
				}
			case 0x000109E4:
				{
					retval = 10000;
					break;
				}
			case 0x000109E5:
				{
					retval = 20000;
					break;
				}
			case 0x000109E6:
				{
					retval = 30000;
					break;
				}
			case 0x000109E7:
				{
					retval = 0x00009C40;
					break;
				}
			case 0x000109E8:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x000109E9:
				{
					retval = 0x0000EA60;
					break;
				}
			case 0x000109EA:
				{
					retval = 0x00011170;
					break;
				}
			case 0x000109EB:
				{
					retval = 0x00013880;
					break;
				}
			case 0x000109EC:
				{
					retval = 0x00015F90;
					break;
				}
			case 0x000109ED:
				{
					retval = 0x000186A0;
					break;
				}
			case 0x000109EE:
				{
					retval = 0x00030D40;
					break;
				}
			case 0x000109EF:
				{
					retval = 0x000493E0;
					break;
				}
			case 0x000109F0:
				{
					retval = 0x00061A80;
					break;
				}
			case 0x000109F1:
				{
					retval = 0x0007A120;
					break;
				}
			case 0x000109F2:
				{
					retval = 0x000927C0;
					break;
				}
			case 0x000109F3:
				{
					retval = 0x000AAE60;
					break;
				}
			case 0x000109F4:
				{
					retval = 0x000C3500;
					break;
				}
			case 0x000109F5:
				{
					retval = 0x000DBBA0;
					break;
				}
			case 0x00010A46:
				{
					retval = 100;
					break;
				}
			case 0x00010A47:
				{
					retval = 1000;
					break;
				}
			case 0x00010A7E:
				{
					retval = 50;
					break;
				}
			case 0x00010AEF:
				{
					retval = 100;
					break;
				}
			case 0x00010B5E:
				{
					retval = 100;
					break;
				}
			case 0x00010B5F:
				{
					retval = 1000;
					break;
				}
			case 0x00010B7E:
				{
					retval = 100;
					break;
				}
			case 0x00010B7F:
				{
					retval = 1000;
					break;
				}
			case 0x00010BAF:
				{
					retval = 100;
					break;
				}
			case 0x00010CFD:
				{
					retval = 50;
					break;
				}
			case 0x00010CFE:
				{
					retval = 100;
					break;
				}
			case 0x00010CFF:
				{
					retval = 1000;
					break;
				}
			case 0x00010E6C:
				{
					retval = 40;
					break;
				}
			case 0x00010E6D:
				{
					retval = 50;
					break;
				}
			case 0x00010E6E:
				{
					retval = 60;
					break;
				}
			case 0x00010E6F:
				{
					retval = 70;
					break;
				}
			case 0x00010E70:
				{
					retval = 80;
					break;
				}
			case 0x00010E71:
				{
					retval = 90;
					break;
				}
			case 0x00010E72:
				{
					retval = 100;
					break;
				}
			case 0x00010E73:
				{
					retval = 200;
					break;
				}
			case 0x00010E74:
				{
					retval = 300;
					break;
				}
			case 0x00010E75:
				{
					retval = 400;
					break;
				}
			case 0x00010E76:
				{
					retval = 500;
					break;
				}
			case 0x00010E77:
				{
					retval = 600;
					break;
				}
			case 0x00010E78:
				{
					retval = 700;
					break;
				}
			case 0x00010E79:
				{
					retval = 800;
					break;
				}
			case 0x00010E7A:
				{
					retval = 900;
					break;
				}
			case 0x00010F25:
				{
					retval = 100;
					break;
				}
			case 0x00010F54:
				{
					retval = 100;
					break;
				}
			case 0x00010FCB:
				{
					retval = 100;
					break;
				}
			case 0x0001105E:
				{
					retval = 40;
					break;
				}
			case 0x0001105F:
				{
					retval = 50;
					break;
				}
			case 0x00011060:
				{
					retval = 60;
					break;
				}
			case 0x00011061:
				{
					retval = 70;
					break;
				}
			case 0x00011062:
				{
					retval = 80;
					break;
				}
			case 0x00011063:
				{
					retval = 90;
					break;
				}
			case 0x00011064:
				{
					retval = 100;
					break;
				}
			case 0x00011065:
				{
					retval = 1000;
					break;
				}
			case 0x00011C66:
				{
					retval = 40;
					break;
				}
			case 0x00011C67:
				{
					retval = 50;
					break;
				}
			case 0x00011C68:
				{
					retval = 60;
					break;
				}
			case 0x00011C69:
				{
					retval = 70;
					break;
				}
			case 0x00011C6A:
				{
					retval = 80;
					break;
				}
			case 0x00011C6B:
				{
					retval = 90;
					break;
				}
			case 0x00011C6C:
				{
					retval = 100;
					break;
				}
			case 0x000111ED:
				{
					retval = 40;
					break;
				}
			case 0x000111EE:
				{
					retval = 50;
					break;
				}
			case 0x000111EF:
				{
					retval = 60;
					break;
				}
			case 0x000111F0:
				{
					retval = 70;
					break;
				}
			case 0x000111F1:
				{
					retval = 80;
					break;
				}
			case 0x000111F2:
				{
					retval = 90;
					break;
				}
			case 0x000111F3:
				{
					retval = 100;
					break;
				}
			case 0x000111F4:
				{
					retval = 1000;
					break;
				}
			case 0x000118ED:
				{
					retval = 40;
					break;
				}
			case 0x000118EE:
				{
					retval = 50;
					break;
				}
			case 0x000118EF:
				{
					retval = 60;
					break;
				}
			case 0x000118F0:
				{
					retval = 70;
					break;
				}
			case 0x000118F1:
				{
					retval = 80;
					break;
				}
			case 0x000118F2:
				{
					retval = 90;
					break;
				}
			case 0x00012432:
				{
					retval = 0x00034BC0;
					break;
				}
			case 0x00012433:
				{
					retval = 0x00069780;
					break;
				}
			case 0x00012467:
				{
					retval = 40;
					break;
				}
			case 0x00012468:
				{
					retval = 50;
					break;
				}
			case 0x00016B5C:
				{
					retval = 100;
					break;
				}
			case 0x00016B5D:
				{
					retval = 10000;
					break;
				}
			case 0x00016B5E:
				{
					retval = 0x000F4240;
					break;
				}
			case 0x00016B5F:
				{
					retval = 0x05F5E100;
					break;
				}
			case 0x0001D36C:
				{
					retval = 40;
					break;
				}
			case 0x0001D36D:
				{
					retval = 50;
					break;
				}
			case 0x0001D36E:
				{
					retval = 60;
					break;
				}
			case 0x0001D36F:
				{
					retval = 70;
					break;
				}
			case 0x0001D370:
				{
					retval = 80;
					break;
				}
			case 0x0001D371:
				{
					retval = 90;
					break;
				}
			case 0x0001EC7D:
				{
					retval = 40;
					break;
				}
			case 0x0001EC7E:
				{
					retval = 50;
					break;
				}
			case 0x0001EC7F:
				{
					retval = 60;
					break;
				}
			case 0x0001EC80:
				{
					retval = 70;
					break;
				}
			case 0x0001EC81:
				{
					retval = 80;
					break;
				}
			case 0x0001EC82:
				{
					retval = 90;
					break;
				}
			case 0x0001EC83:
				{
					retval = 100;
					break;
				}
			case 0x0001EC84:
				{
					retval = 200;
					break;
				}
			case 0x0001EC85:
				{
					retval = 300;
					break;
				}
			case 0x0001EC86:
				{
					retval = 400;
					break;
				}
			case 0x0001EC87:
				{
					retval = 500;
					break;
				}
			case 0x0001EC88:
				{
					retval = 600;
					break;
				}
			case 0x0001EC89:
				{
					retval = 700;
					break;
				}
			case 0x0001EC8A:
				{
					retval = 800;
					break;
				}
			case 0x0001EC8B:
				{
					retval = 900;
					break;
				}
			case 0x0001EC8C:
				{
					retval = 1000;
					break;
				}
			case 0x0001EC8D:
				{
					retval = 2000;
					break;
				}
			case 0x0001EC8E:
				{
					retval = 3000;
					break;
				}
			case 0x0001EC8F:
				{
					retval = 4000;
					break;
				}
			case 0x0001EC90:
				{
					retval = 5000;
					break;
				}
			case 0x0001EC91:
				{
					retval = 6000;
					break;
				}
			case 0x0001EC92:
				{
					retval = 7000;
					break;
				}
			case 0x0001EC93:
				{
					retval = 8000;
					break;
				}
			case 0x0001EC94:
				{
					retval = 9000;
					break;
				}
			case 0x0001EC95:
				{
					retval = 10000;
					break;
				}
			case 0x0001EC96:
				{
					retval = 20000;
					break;
				}
			case 0x0001EC97:
				{
					retval = 30000;
					break;
				}
			case 0x0001EC98:
				{
					retval = 0x00009C40;
					break;
				}
			case 0x0001EC99:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x0001EC9A:
				{
					retval = 0x0000EA60;
					break;
				}
			case 0x0001EC9B:
				{
					retval = 0x00011170;
					break;
				}
			case 0x0001EC9C:
				{
					retval = 0x00013880;
					break;
				}
			case 0x0001EC9D:
				{
					retval = 0x00015F90;
					break;
				}
			case 0x0001EC9E:
				{
					retval = 0x000186A0;
					break;
				}
			case 0x0001EC9F:
				{
					retval = 0x00030D40;
					break;
				}
			case 0x0001ECA0:
				{
					retval = 0x000186A0;
					break;
				}
			case 0x0001ECA1:
				{
					retval = 0x00989680;
					break;
				}
			case 0x0001ECA2:
				{
					retval = 0x01312D00;
					break;
				}
			case 0x0001ECB3:
				{
					retval = 10000;
					break;
				}
			case 0x0001ECB4:
				{
					retval = 0x000186A0;
					break;
				}
			case 0x0001ED0D:
				{
					retval = 40;
					break;
				}
			case 0x0001ED0E:
				{
					retval = 50;
					break;
				}
			case 0x0001ED0F:
				{
					retval = 60;
					break;
				}
			case 0x0001ED10:
				{
					retval = 70;
					break;
				}
			case 0x0001ED11:
				{
					retval = 80;
					break;
				}
			case 0x0001ED12:
				{
					retval = 90;
					break;
				}
			case 0x0001ED13:
				{
					retval = 100;
					break;
				}
			case 0x0001ED14:
				{
					retval = 200;
					break;
				}
			case 0x0001ED15:
				{
					retval = 300;
					break;
				}
			case 0x0001ED16:
				{
					retval = 400;
					break;
				}
			case 0x0001ED17:
				{
					retval = 500;
					break;
				}
			case 0x0001ED18:
				{
					retval = 600;
					break;
				}
			case 0x0001ED19:
				{
					retval = 700;
					break;
				}
			case 0x0001ED1A:
				{
					retval = 800;
					break;
				}
			case 0x0001ED1B:
				{
					retval = 900;
					break;
				}
			case 0x0001ED1C:
				{
					retval = 1000;
					break;
				}
			case 0x0001ED1D:
				{
					retval = 2000;
					break;
				}
			case 0x0001ED1E:
				{
					retval = 3000;
					break;
				}
			case 0x0001ED1F:
				{
					retval = 4000;
					break;
				}
			case 0x0001ED20:
				{
					retval = 5000;
					break;
				}
			case 0x0001ED21:
				{
					retval = 6000;
					break;
				}
			case 0x0001ED22:
				{
					retval = 7000;
					break;
				}
			case 0x0001ED23:
				{
					retval = 8000;
					break;
				}
			case 0x0001ED24:
				{
					retval = 9000;
					break;
				}
			case 0x0001ED25:
				{
					retval = 10000;
					break;
				}
			case 0x0001ED26:
				{
					retval = 20000;
					break;
				}
			case 0x0001ED27:
				{
					retval = 30000;
					break;
				}
			case 0x0001ED28:
				{
					retval = 0x00009C40;
					break;
				}
			case 0x0001ED29:
				{
					retval = 0x0000C350;
					break;
				}
			case 0x0001ED2A:
				{
					retval = 0x0000EA60;
					break;
				}
			case 0x0001ED2B:
				{
					retval = 0x00011170;
					break;
				}
			case 0x0001ED2C:
				{
					retval = 0x00013880;
					break;
				}
			case 0x0001ED2D:
				{
					retval = 0x00015F90;
					break;
				}
			case 0x0001ED38:
				{
					retval = 400;
					break;
				}
			case 0x0001ED39:
				{
					retval = 600;
					break;
				}
			case 0x0001ED3A:
				{
					retval = 2000;
					break;
				}
			case 0x0001ED3B:
				{
					retval = 10000;
					break;
				}
			default:
				{
					retval = -2;
					break;
				}
			}
			break;
		}
case$3:
		// (3072)
		{
			retval = ((int32_t)((ch + (((int32_t)(val & (uint32_t)992)) >> 5)) & (uint32_t)31)) + 10;
			break;
		}
	} while (false);
	return retval;
}

bool CharacterData01::isDigit(int32_t ch) {
	int32_t props = getProperties(ch);
	return ((int32_t)(props & (uint32_t)31)) == $Character::DECIMAL_DIGIT_NUMBER;
}

bool CharacterData01::isLowerCase(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)1)) != 0;
}

bool CharacterData01::isUpperCase(int32_t ch) {
	return ((int32_t)(getPropertiesEx(ch) & (uint32_t)2)) != 0;
}

bool CharacterData01::isWhitespace(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)28672)) == 16384);
}

int8_t CharacterData01::getDirectionality(int32_t ch) {
	int32_t val = getProperties(ch);
	int8_t directionality = (int8_t)(((int32_t)(val & (uint32_t)0x78000000)) >> 27);
	if (directionality == 15) {
		directionality = $Character::DIRECTIONALITY_UNDEFINED;
	}
	return directionality;
}

bool CharacterData01::isMirrored(int32_t ch) {
	int32_t props = getProperties(ch);
	return (((int32_t)(props & (uint32_t)(int32_t)0x80000000)) != 0);
}

void CharacterData01::init$() {
	$CharacterData::init$();
}

void clinit$CharacterData01($Class* class$) {
	$assignStatic(CharacterData01::A_DATA, $cstr({'\0', 0x7005, '\0', 0x7005, 0x7800, '\0', '\0', 0x7005, '\0', 0x7005, 0x7800, '\0', 0x7800, '\0', 0x7800, '\0', '\0', 0x18, 0x6800, 0x18, '\0', 0x18, 0x7800, '\0', 0x7800, '\0', '\0', 0x74B, '\0', 0x74B, '\0', 0x74B, '\0', 0x74B, '\0', 0x46B, '\0', 0x58B, '\0', 0x80B, '\0', 0x80B, '\0', 0x80B, 0x7800, '\0', '\0', 0x1C, '\0', 0x1C, '\0', 0x1C, 0x6800, 0x780A, 0x6800, 0x780A, 0x6800, 0x77EA, 0x6800, 0x744A, 0x6800, 0x77AA, 0x6800, 0x742A, 0x6800, 0x780A, 0x6800, 0x76CA, 0x6800, 0x774A, 0x6800, 0x780A, 0x6800, 0x780A, 0x6800, 0x766A, 0x6800, 0x752A, 0x6800, 0x750A, 0x6800, 0x74EA, 0x6800, 0x74EA, 0x6800, 0x74CA, 0x6800, 0x74AA, 0x6800, 0x748A, 0x6800, 0x74CA, 0x6800, 0x754A, 0x6800, 0x752A, 0x6800, 0x750A, 0x6800, 0x74EA, 0x6800, 0x74CA, 0x6800, 0x772A, 0x6800, 0x780A, 0x6800, 0x764A, 0x6800, 0x780A, 0x6800, 0x80B, 0x6800, 0x80B, 0x6800, 0x80B, 0x6800, 0x80B, 0x6800, 0x1C, 0x6800, 0x1C, 0x6800, 0x1C, 0x6800, 0x6CB, 0x6800, 0x80B, 0x6800, 0x1C, '\0', 0x1C, '\0', 0x1C, 0x7800, '\0', 0x6800, 0x1C, 0x7800, '\0', '\0', 0x1C, 0x4000, 0x3006, 0x4000, 0x3006, 0x1800, 0x40B, 0x1800, 0x40B, 0x1800, 0x40B, 0x1800, 0x40B, 0x1800, 0x52B, 0x1800, 0x64B, 0x1800, 0x80B, 0x1800, 0x80B, 0x1800, 0x80B, '\0', 0x42B, '\0', 0x48B, '\0', 0x50B, '\0', 0x80B, '\0', 0x7005, '\0', 0x780A, '\0', 0x780A, 0x7800, '\0', 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x7800, '\0', 0x7800, '\0', '\0', 0x18, '\0', 0x18, '\0', 0x760A, '\0', 0x760A, '\0', 0x76EA, '\0', 0x740A, '\0', 0x780A, 0xA2, 0x7001, 0xA2, 0x7001, 0xA1, 0x7002, 0xA1, 0x7002, '\0', 0x3409, '\0', 0x3409, 0x800, 0x7005, 0x800, 0x7005, 0x800, 0x7005, 0x7800, '\0', 0x7800, '\0', 0x800, 0x7005, 0x7800, '\0', 0x800, 0x18, 0x800, 0x52B, 0x800, 0x52B, 0x800, 0x52B, 0x800, 0x5EB, 0x800, 0x70B, 0x800, 0x80B, 0x800, 0x80B, 0x800, 0x80B, 0x800, 0x7005, 0x800, 0x1C, 0x800, 0x1C, 0x800, 0x50B, 0x800, 0x50B, 0x800, 0x50B, 0x800, 0x58B, 0x800, 0x6AB, 0x7800, '\0', 0x800, 0x74B, 0x800, 0x74B, 0x800, 0x74B, 0x800, 0x74B, 0x800, 0x72B, 0x800, 0x72B, 0x800, 0x7AB, 0x800, 0x4CB, 0x800, 0x80B, 0x7800, '\0', 0x800, 0x4CB, 0x800, 0x52B, 0x800, 0x5AB, 0x800, 0x6CB, 0x800, 0x80B, 0x800, 0x56B, 0x800, 0x66B, 0x800, 0x78B, 0x800, 0x80B, 0x7800, '\0', 0x6800, 0x18, 0x800, 0x42B, 0x800, 0x42B, 0x800, 0x54B, 0x800, 0x66B, 0x800, 0x7005, 0x4000, 0x3006, 0x7800, '\0', 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, 0x7800, '\0', 0x7800, '\0', 0x4000, 0x3006, 0x800, 0x4CB, 0x800, 0x5EB, 0x800, 0x80B, 0x7800, '\0', 0x800, 0x18, 0x800, 0x18, 0x800, 0x18, 0x7800, '\0', 0x800, 0x7005, 0x800, 0x48B, 0x800, 0x80B, 0x800, 0x18, 0x800, 0x1C, 0x800, 0x7005, 0x800, 0x7005, 0x4000, 0x3006, 0x7800, '\0', 0x800, 0x6CB, 0x6800, 0x18, 0x6800, 0x18, 0x800, 0x5CB, 0x800, 0x6EB, 0x7800, '\0', 0x800, 0x70B, 0x800, 0x70B, 0x800, 0x70B, 0x800, 0x70B, 0x800, 0x7AB, 0x902, 0x7001, 0x902, 0x7001, 0x902, 0x7001, 0x7800, '\0', 0x901, 0x7002, 0x901, 0x7002, 0x901, 0x7002, 0x7800, '\0', 0x800, 0x4EB, 0x800, 0x54B, 0x800, 0x5CB, 0x800, 0x80B, 0x1000, 0x7005, 0x1000, 0x7005, 0x3000, 0x3609, 0x3000, 0x3609, 0x3000, 0x42B, 0x3000, 0x42B, 0x3000, 0x54B, 0x3000, 0x66B, 0x3000, 0x80B, 0x3000, 0x80B, 0x3000, 0x80B, 0x7800, '\0', 0x4000, 0x3006, 0x800, 0x14, 0x800, 0x48B, 0x800, 0x48B, 0x800, 0x50B, 0x800, 0x62B, 0x800, 0x74B, 0x800, 0x80B, 0x800, 0x80B, 0x800, 0x7005, 0x4000, 0x3006, 0x1000, 0x60B, 0x1000, 0x70B, 0x1000, 0x42B, 0x1000, 0x80B, 0x1000, 0x18, 0x1000, 0x18, 0x1000, 0x18, 0x800, 0x7005, 0x800, 0x78B, 0x800, 0x78B, 0x800, 0x78B, 0x800, 0x78B, 0x800, 0x42B, 0x800, 0x54B, 0x800, 0x80B, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x7005, 0x4000, 0x3006, '\0', 0x18, '\0', 0x18, '\0', 0x18, 0x6800, 0x5EB, 0x6800, 0x5EB, 0x6800, 0x70B, 0x6800, 0x42B, '\0', 0x3749, '\0', 0x3749, '\0', 0x3008, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x3008, 0x4000, 0x3006, '\0', 0x18, '\0', 0x1010, 0x7800, '\0', '\0', 0x1010, '\0', 0x3609, '\0', 0x3609, 0x4000, 0x3006, '\0', 0x7005, '\0', 0x7005, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x3549, '\0', 0x3549, '\0', 0x7005, '\0', 0x3008, '\0', 0x7005, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x7005, '\0', 0x7005, '\0', 0x18, '\0', 0x18, 0x4000, 0x3006, 0x7800, '\0', '\0', 0x40B, '\0', 0x40B, '\0', 0x40B, '\0', 0x40B, '\0', 0x52B, '\0', 0x64B, '\0', 0x80B, '\0', 0x80B, 0x7800, '\0', 0x4000, 0x3006, '\0', 0x3008, 0x4000, 0x3006, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x7005, '\0', 0x3008, 0x7800, '\0', 0x7800, '\0', '\0', 0x3008, '\0', 0x3008, '\0', 0x3008, '\0', 0x18, '\0', 0x7005, 0x4000, 0x3006, '\0', 0x18, 0x6800, 0x18, 0x7800, '\0', '\0', 0x3008, 0x4000, 0x3006, '\0', 0x60B, '\0', 0x72B, '\0', 0x18, '\0', 0x1C, 0x82, 0x7001, 0x82, 0x7001, 0x81, 0x7002, 0x81, 0x7002, 0x4000, 0x3006, '\0', 0x3006, '\0', 0x3006, 0x4000, 0x3006, '\0', 0x3008, '\0', 0x3006, '\0', 0x4EB, '\0', 0x4EB, '\0', 0x3008, '\0', 0x18, '\0', 0x80B, 0x6800, 0x1C, 0x6800, 0x1C, 0x2800, 0x601A, 0x2800, 0x601A, 0x2800, 0x601A, 0x2800, 0x601A, 0x6800, 0x1C, '\0', 0x744A, '\0', 0x744A, '\0', 0x776A, '\0', 0x776A, '\0', 0x776A, '\0', 0x76AA, '\0', 0x76AA, '\0', 0x76AA, '\0', 0x76AA, '\0', 0x758A, '\0', 0x758A, '\0', 0x758A, '\0', 0x746A, '\0', 0x746A, '\0', 0x746A, '\0', 0x77EA, '\0', 0x77EA, '\0', 0x77CA, '\0', 0x77CA, '\0', 0x77CA, '\0', 0x76AA, '\0', 0x768A, '\0', 0x768A, '\0', 0x768A, '\0', 0x780A, '\0', 0x780A, '\0', 0x75AA, '\0', 0x75AA, '\0', 0x75AA, '\0', 0x758A, '\0', 0x752A, '\0', 0x750A, '\0', 0x750A, '\0', 0x74EA, '\0', 0x74CA, '\0', 0x74AA, '\0', 0x74CA, '\0', 0x74CA, '\0', 0x74AA, '\0', 0x748A, '\0', 0x748A, '\0', 0x746A, '\0', 0x746A, '\0', 0x744A, '\0', 0x742A, '\0', 0x740A, '\0', 0x770A, '\0', 0x770A, '\0', 0x770A, '\0', 0x764A, '\0', 0x764A, '\0', 0x764A, '\0', 0x764A, '\0', 0x762A, '\0', 0x762A, '\0', 0x760A, '\0', 0x752A, '\0', 0x752A, '\0', 0x780A, '\0', 0x776A, '\0', 0x776A, 0x7800, '\0', '\0', 0x1010, '\0', 0x1010, '\0', 0x1010, 0x7800, '\0', '\0', 0x7004, '\0', 0x7004, 0x7800, '\0', '\0', 0x5EB, '\0', 0x5AB, '\0', 0x5AB, '\0', 0x5AB, '\0', 0x18, 0x4000, 0x3006, '\0', 0x7004, 0x6800, 0x18, '\0', 0x7004, 0x4000, 0x3006, 0x7800, '\0', '\0', 0x7005, '\0', 0x7005, '\0', 0x7005, 0x7800, '\0', 0x4800, 0x1010, 0x4800, 0x1010, '\0', 0x1C, '\0', 0x3008, '\0', 0x3008, '\0', 0x3008, '\0', 0x3008, 0x4800, 0x1010, 0x4800, 0x1010, 0x4000, 0x3006, 0x4000, 0x3006, '\0', 0x1C, 0x4000, 0x3006, 0x6800, 0x1C, '\0', 0x42B, '\0', 0x42B, '\0', 0x54B, '\0', 0x66B, '\0', 0x5EB, '\0', 0x5EB, '\0', 0x5EB, '\0', 0x54B, '\0', 0x5AB, 0x7800, '\0', '\0', 0x7001, '\0', 0x7001, '\0', 0x7002, '\0', 0x7002, '\0', 0x7002, 0x7800, '\0', '\0', 0x7001, 0x7800, '\0', 0x7800, '\0', '\0', 0x7001, 0x7800, '\0', '\0', 0x7002, '\0', 0x7001, '\0', 0x19, '\0', 0x7002, 0xE800, 0x19, '\0', 0x7001, '\0', 0x7002, 0x1800, 0x3649, 0x1800, 0x3649, 0x1800, 0x3509, 0x1800, 0x3509, 0x1800, 0x37C9, 0x1800, 0x37C9, 0x1800, 0x3689, 0x1800, 0x3689, 0x1800, 0x3549, 0x1800, 0x3549, '\0', 0x1C, '\0', 0x18, 0x4000, 0x3006, '\0', 0x7004, '\0', 0x7005, '\0', 0x1C, 0x7800, '\0', 0x2800, 0x601A, 0x88A, 0x7001, 0x88A, 0x7001, 0x889, 0x7002, 0x889, 0x7002, 0x4000, 0x3006, 0x800, 0x7004, 0x800, 0x3609, 0x800, 0x3609, 0x7800, '\0', 0x1000, 0x60B, 0x1000, 0x60B, 0x1000, 0x60B, 0x1000, 0x60B, 0x1000, 0x72B, 0x1000, 0x44B, 0x1000, 0x80B, 0x1000, 0x80B, 0x1000, 0x80B, 0x1000, 0x80B, 0x1000, 0x7CB, 0x1000, 0x7CB, 0x1000, 0x7CB, 0x1000, 0x1C, 0x1000, 0x80B, 0x1000, 0x601A, 0x1000, 0x60B, 0x1000, 0x60B, 0x1000, 0x80B, 0x1000, 0x80B, 0x7800, '\0', 0x7800, '\0', 0x1000, 0x40B, 0x1000, 0x40B, 0x1000, 0x40B, 0x1000, 0x40B, 0x1000, 0x52B, 0x1000, 0x64B, 0x1000, 0x80B, 0x1000, 0x1C, 0x1000, 0x66B, 0x1000, 0x66B, 0x1000, 0x66B, 0x7800, '\0', 0x1000, 0x7005, 0x1000, 0x7005, 0x7800, '\0', 0x6800, 0x19, 0x6800, 0x19, 0x7800, '\0', 0x6800, 0x1C, 0x1800, 0x40B, 0x1800, 0x7EB, 0x1800, 0x7EB, 0x1800, 0x7EB, 0x1800, 0x7EB, 0x6800, 0x6AB, 0x6800, 0x68B, 0x6800, 0x1C, '\0', 0x1C, 0x6800, 0x1C, '\0', 0x1C, '\0', 0x1C, 0x6800, 0x1C, 0x6800, 0x1B, 0x6800, 0x1B, 0x6800, 0x1B, 0x1800, 0x3609, 0x1800, 0x3609}));
	CharacterData01::$assertionsDisabled = !CharacterData01::class$->desiredAssertionStatus();
	$assignStatic(CharacterData01::instance, $new(CharacterData01));
	$assignStatic(CharacterData01::X, ($cstr({'\0', 0x10, ' ', '0', '@', '@', '@', 'P', '`', 'p', 0x80, 0x90, 0xA0, 0xB0, 0xC0, 0xD0, '0', '0', '0', '0', 0xE0, '@', 0xF0, 0x100, '@', 0x110, 0x120, 0x130, 0x140, '@', 0x150, '0', 0x160, 0x170, 0x180, '@', 0x190, 0x1A0, 0x1B0, 0x1C0, '@', 0x1D0, '@', 0x1E0, '0', '0', '0', '0', '@', '@', '@', '@', '@', '@', '@', '@', '@', 0x1F0, 0x200, 0x210, '0', '0', '0', '0', 0x220, 0x230, 0x240, 0x250, 0x260, 0x270, '0', 0x280, 0x290, 0x2A0, '0', '0', 0x2B0, 0x2C0, 0x2D0, 0x2E0, 0x2F0, 0x300, 0x310, 0x320, 0x330, '0', 0x340, 0x350, 0x2B0, 0x360, 0x370, 0x380, 0x390, 0x3A0, '0', '0', 0x2B0, 0x2B0, 0x3B0, '0', 0x3C0, 0x3D0, 0x3E0, 0x3F0, 0x400, 0x410, '0', '0', '0', '0', '0', '0', '0', '0', '0', 0x420, 0x2B0, 0x430, '0', '0', 0x440, 0x450, 0x460, '0', '0', 0x470, 0x480, 0x490, 0x4A0, 0x4B0, 0x4C0, 0x4D0, 0x4E0, 0x4F0, 0x500, 0x510, 0x520, 0x530, 0x540, 0x550, 0x560, 0x570, 0x580, 0x590, 0x5A0, 0x5B0, '0', '0', 0x5C0, 0x5D0, 0x5E0, 0x5F0, 0x600, 0x610, 0x620, 0x630, '0', '0', '0', '0', '@', 0x640, 0x650, 0x660, '@', 0x670, 0x680, '0', '0', '0', '0', '0', '@', 0x690, 0x6A0, '0', '@', 0x6B0, 0x6C0, 0x6D0, '@', 0x6E0, 0x6F0, '0', 0x700, 0x710, '0', '0', '0', '0', '0', '0', '@', 0x720, '0', '0', '0', 0x730, 0x740, 0x750, 0x760, 0x770, 0x780, '0', '0', 0x790, 0x7A0, 0x7B0, 0x7C0, 0x7D0, 0x7E0, '@', 0x7F0, 0x800, '@', 0x810, '0', '0', '0', '0', '0', '0', '0', '0', 0x820, 0x830, 0x840, 0x850, 0x860, 0x870, '0', '0', 0x880, 0x890, 0x8A0, 0x8B0, 0x8C0, 0x6F0, '0', '0', '0', '0', '0', '0', '0', '0', '0', 0x8D0, '0', '0', '0', '0', '0', 0x8E0, 0x8F0, 0x900, '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', 0x910, '0', '0', '0', 0x920, 0x930, 0x940, 0x950, '@', '@', '@', '@', '@', '@', 0x960, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', '@', 0xxx810, 0x990, 0x9A0, '0', '0', 0x9B0, 0x9C0, '@', 0x9D0, 0x9E0, 0x9F0, 0xA00, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 0x730, 0x740, 0xA10, '0', '0', '0', '@', '@', 0xA20, 0xA30, 0xA40, '0', '0', 0xA50, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA70, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA80, '0', 0xx990, '0', 0xAA0, 0xAB0, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xA60, 0xAC0, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@', '@', '@', 0xAD0, 0xAE0, 0xxB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB10, 0xB00, 0xB20, 0xB00, 0xB30, 0xB40, 0xB50, 0xB00, 0xB60, 0xB70, 0xB70, 0xB80, '0', '0', '0', '0', 0xB90, 0xB70, 0xB70, 0xBA0, 0xBB0, '0', '0', '0', '0', 0xBC0, 0xBD0, 0xBE0, 0xBF0, 0xC00, 0xC10, 0xC20, 0xC30, 0xC40, 0xC50, 0xC60, 0xC70, 0xC80, 0xBC0, 0xBD0, 0xC90, 0xBF0, 0xCA0, 0xCB0, 0xCC0, 0xC30, 0xCD0, 0xCE0, 0xCF0, 0xD00, 0xD10, 0xD20, 0xD30, 0xD40, 0xD50, 0xD60, 0xD70, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xB00, 0xD80, 0xD90, 0xD80, 0xDA0, 0xDB0, 0xDC0, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 0xDD0, 0xDE0, '0', '0', '0', '0', '0', '0', '@', 0xDF0, 0xE00, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@', 0xE10, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0x2B0, 0xE20, '0', 0xE30, 0xE40, 0xE50, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 0xE60, 0xE70, 0xE80, '0', '0', 0xE90, 0xEA0, '0', '0', '0', '0', '0', '0', 0xEB0, 0xEC0, 0xED0, 0xEE0, 0xEF0, 0xF00, '0', 0xF10, '0', '0', '0', '0', '0', '0', '0', '0', 0xB70, 0xF20, 0xB70, 0xB70, 0xF30, 0xF40, 0xF50, 0xF60, 0xF70, 0xF80, 0xF90, 0xFA0, 0xFB0, 0xFC0, '0', 0xFD0, 0xFE0, 0xFF0, 0x1000, 0x1010, '0', '0', '0', '0', 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0x1020, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0xB70, 0x1030, 0x1040, 0xB70, 0xB70, 0xB70, 0xF30, 0xB70, 0xB70, 0x1050, 0x1060, 0xF20, 0xB70, 0x1070, 0xB70, 0x1080, 0x1090, '0', '0', 0xB70, 0xB70, 0xB70, 0x10A0, 0xB70, 0xB70, 0x10B0, 0xB70, 0xB70, 0xB70, 0xF30, 0x10C0, 0x10D0, 0x10E0, 0x10F0, '0', 0xB70, 0xB70, 0xB70, 0xB70, 0x1100, 0xB70, 0x1110, 0x1120, '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'}))->toCharArray());
	$assignStatic(CharacterData01::Y, ($cstr({'\0', '\0', '\0', '\0', '\0', '\0', 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, '\0', 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, '\b', '\n', 0x6, '\f', 0xE, 0xE, 0xE, 0xE, 0x10, 0x12, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x6, 0x16, 0x18, 0x18, 0x18, 0x18, 0x1A, 0x1C, 0x1A, 0x1A, 0x1E, 0x1A, 0x1A, ' ', '\"', 0x1A, 0x1A, '$', '&', '(', '*', ',', '.', '0', '2', 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, '4', '6', '8', ':', '<', '<', '<', '<', '<', '<', '<', '<', '>', '@', 'B', '<', '<', '<', '<', '<', '<', 'D', 0x6, 'D', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 'F', 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'H', 'J', 'J', 'J', 'J', 'L', 'N', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 0x6, 0x6, 'R', 'T', 0x6, 0x6, 0x6, 0x6, 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 'V', '\0', '\0', '\0', '\0', 'X', 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 'Z', 'Z', '\\', 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '^', '\0', '\0', 0x6, 0x6, '\0', '\0', '\0', '\0', '`', 'b', 'd', 0x6, 0x6, 0x6, 0x6, 0x6, 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 'j', 'j', 'j', 'j', 'j', 0x6, 0x6, 0x6, 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 0x6, 0x6, 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 'h', 0x6, 0x6, '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, '^', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 0x6, 'n', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'p', 'n', 0x6, 'n', 'p', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 't', 'v', 'x', 'z', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', '|', '~', 0x80, 0x80, 0x82, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'n', 0x6, 0x6, 0x6, 0x84, 0x86, 0x88, 0x8A, 0x8C, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'n', 'l', 0x6, 0x6, 0x8E, 0x90, 0x92, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x94, 0x96, 0x80, 0x6, 0x98, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 0x6, 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 0x6, 'z', 'l', 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9C, 'z', 'z', 0x6, 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 'z', 0x9E, 'Z', 0xA0, '\\', 0x6, 0x6, 'Z', 'Z', 'l', 'l', 'p', 'l', 'p', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 0xA2, 0xA4, 0x6, 0xA6, 0x9A, 0x9A, 0xA8, 'z', 0xAA, 0x6, 0x6, 0x6, 0xAC, 0xAC, 0xAC, 0xAC, 0xAE, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0xB0, 0xB2, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0xB0, 0x82, 'l', 'l', 'l', 'l', 0xB4, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0xB6, 0xA4, 0x6, 0xB8, 0x8A, 0x8C, 0xAC, 0xAC, 0xAC, 0xAE, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 0x98, 0xBA, 0xBA, 0xBA, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 't', 't', 0xBC, 'z', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'n', 0x6, 0x6, 't', 't', 0xBC, 'z', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0x6, 0x6, 0x6, 'r', 0xAC, 0xAE, 0x6, 0x6, 0x6, 0x6, 0x6, 0xBE, 0xC0, 0xC2, 0x8C, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'n', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xC8, 0xCA, 0x6, 0x6, 0x6, 0xCC, 0xCE, 'z', 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 'Z', 'Z', 0x6, 0x6, 0x6, 0x6, 0xD2, 0xD2, 0xD2, 0xD2, 0xD2, 0x6, 0x6, 0x6, 0xD4, 0xD4, 0xD4, 0xD4, 0xD4, 0xD6, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0xDA, 'l', 'l', 'l', 'l', 'l', 0xA0, 0xDC, 0x6, 'l', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0xB0, 0xDE, 0xDE, 0xE0, 0xE2, 0xE4, 0x6, 0x6, 0x6, 0x6, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xE6, 0xE8, 0xEA, 0xEC, 0xEC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 0xEE, 0xF0, 0xF2, 0xF4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'n', 0x6, 0x6, 0x6, 0x6, 0xF6, 0xF8, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 0xFA, 0xFC, 0xFC, 0xFC, 0x6, 0x6, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x100, '8', '8', '8', '8', 0x102, 0x102, 0x102, 0x102, 0x102, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0xA6, 0xA2, 0xF8, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0xF6, 'Z', 0x106, 0x108, 0xFA, 0x10A, 0xFC, 0xFC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x10C, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, 'Z', 0x110, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x112, 'Z', 'Z', 0xF6, 'Z', 'Z', 0x114, 0xA4, 0x116, 0x116, 0x116, 0x116, 0x116, 0xFC, 0xFC, 0x118, 0xF8, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x11A, 0xFC, 0x4, 0x6, 0x6, 0x6, 0x6, 'Z', 0xF8, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x118, 0x104, 'Z', 'Z', 'Z', 'Z', 0x106, 0x11C, '\0', 0x11E, 0xFC, 0x120, 0xA2, 0xFA, 0xF6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x11E, 0x11E, 0xFC, 0x122, 0x124, 0x124, 0x124, 0x124, 0x126, 0x128, 0x14, 0x14, 0x14, 0x12A, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0xF6, 'Z', 0x104, 0x12C, 0x12E, 0xFC, 0xFC, 0xFC, '\\', '\0', '\0', '\0', 0x4, 0x4, '\0', '\0', 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x2, '\0', '\0', '\0', '\0', 0x11E, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x112, 0x104, 0xF6, 'Z', 'Z', 0x114, 0xA4, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, 'Z', 0x104, 0x2, '\0', '\0', '\0', 0x4, 0x2, 0x4, 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, '\0', '\0', '\0', 0x4, '\0', 0x2, '\0', '\0', 0xA6, 0x130, 0x104, 0x106, 0x104, 0x132, 0x134, 0x132, 0x134, 0x136, 0x6, 0x4, 0x6, 0x6, 0x134, 0x6, 0x6, 0x2, '\0', '\0', 0x104, 0x6, 0xA2, 0xA2, 0xA2, 0xA4, 0x6, 0xA2, 0xA2, 0xA4, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x118, 0x104, 'Z', 'Z', 'Z', 'Z', 0x104, 0x12E, 0x106, 0x130, '\0', 0x11E, 0xFC, 0xFC, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0xFC, '^', 0x130, '\0', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0xF6, 'Z', 'Z', 0x106, 0x106, 0x104, 0xF6, 0x106, 0xA2, '\0', 0x138, 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x118, 0x104, 'Z', 'Z', 0x6, 0x104, 0x104, 'Z', 0x108, 0xFA, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, '\0', '\0', 'Z', 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0xF6, 'Z', 'Z', 'Z', 0x106, 0xF6, 0x108, 0x13A, 0xFC, 0x4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, 0xBA, 0xBA, 0xBA, 0xBA, 0xBA, 0xBA, 0x13C, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', 0x112, 0xF6, 0x104, 'Z', 'Z', 'Z', 0x13E, 0x4, 0x6, 0x6, 0x6, 'j', 'j', 'j', 'j', 'j', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0xA0, 'Z', 0x104, 'Z', 'Z', 0xF6, 'Z', 0x114, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x140, 0xFC, 0x142, '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0xF6, 'Z', 'Z', 'Z', 'Z', 0x108, 0xFA, 0x6, 0x6, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x144, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 0x146, 'j', 'j', 'j', 'j', 'j', 0x126, 0x128, 0x14, 0x14, 0x12A, 0x6, 0x6, 0x6, 0x6, 0x6, 0x2, '\0', '\0', '\0', 0x4, 0x2, 0x6, '\0', '\0', '\0', '\0', 0x2, 0x4, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0x104, 0x104, 0x134, 0x132, 0xA0, 0x12C, 0x130, 0xF8, 0x108, 0xFC, '\n', 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x118, 0x104, 'Z', 'Z', 0x6, 'Z', 0x104, 0x104, 0x130, 0x138, 0x132, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x112, 'Z', 'Z', 0x148, 0x14A, 0x110, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x11A, 0x12E, 'Z', 0x106, 0x112, 'Z', 0x13A, 0xFC, 0xFC, 0xFC, 0x120, 0x6, 0x6, 0x6, 0x6, 0x112, 'Z', 'Z', 0x106, 0xF6, 'Z', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 0x106, 0xA2, 0xFC, 0x138, 0xFC, 0xFC, '\n', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', 0x4, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x118, 'Z', 'Z', 'Z', '\\', 'Z', 'Z', 'Z', 0x14C, 0x11E, 0xFC, 0xFC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x14E, 0x14E, 0x14E, 0x14E, 0x14E, 0x140, 0x14, 0x14, 0x14, 0x12A, 0x6, 0xFC, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 0x134, 'Z', 'Z', 'Z', 0x106, 'Z', 0xF6, '\\', 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', 0x4, '\0', 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x112, 'Z', 'Z', '\\', 0x6, '\\', 'Z', 0xA0, 'Z', 0x12E, 0xA2, 0x112, 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x6, '\0', '\0', '\0', 0x2, 0x4, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x104, 0x104, 0x132, 'Z', 0x134, 0xF6, 0x108, 0x4, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x112, 0x106, 0x150, '\n', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x152, '<', '<', '<', 0x154, 0x156, 0x158, '<', '<', '<', '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '^', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x15A, 0x15A, 0x15A, 0x15A, 0x15C, 0x15C, 0x15C, 0x15E, 0x160, 0x160, 0x162, 0x164, 0x164, 0x164, 0x164, 0x166, 0x166, 0x168, 0x16A, 0x16C, 0x16C, 0x16C, 0x160, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x164, 0x178, 0x17A, 0x17C, 0x17E, 0x180, 0x182, 0x184, 0x186, 0x188, 0x188, 0x18A, 0x18C, 0x18E, 0x190, 0x164, 0x192, 0x172, 0x172, 0x172, 0x172, 0x172, 0x172, 0x172, 0x194, 0x15C, 0x15C, 0x196, 0xFC, 0xFC, '\n', 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x198, 0x198, 0x198, 0x198, 0x19A, 0x6, 0x6, 0x6, '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 'j', 'j', 'j', 'j', 'j', 0x6, 0x6, 0xFC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0xA2, 0xA2, 0xFA, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0xA2, 0xA2, 0xA2, 0xFA, 0xFC, 0xFC, 0x18, 0x18, 0x19C, 0x19C, 0x142, 0x6, 0x6, 0x6, 0x6, 0x6, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x19E, 0x14, 0x14, 0x14, 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x2, '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x1A0, 0x1A2, 0xFC, '\n', 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0xA0, 0x118, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x104, 0x6, 0x6, 0x6, 0xA0, 'Z', 0x1A4, 0x19C, 0x19C, 0x19C, 0x19C, 0x19C, 0x19C, 0x19C, 0x1A6, 0x1A8, 0x6, 0x6, 0x6, 0x6, 0x6, 0x104, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x6, 0x6, 0x6, 0x6, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x6, 0x6, 0x6, 0x6, 0x6, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', 0x4, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', 0x6, 0x6, 0x6, 0x6, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x1AA, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, '\0', '\0', '\0', '\0', 0x4, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', 0x6, 'F', 0x13A, 0x1AE, 0x1AE, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x6, 0x6, 0x6, 0x6, 0x6, 0x18, 0x18, 0x18, 'B', 0x16, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1B0, 0x13E, 0xA2, 0x18, 0x1B0, 0x1B2, 0x1B2, 0x1B4, 0x1AE, 0x1AE, 0x1AE, 0x1B6, 0xA2, 0xA2, 0xA2, 0x1B8, 'F', 0xA2, 0xA2, 0xA2, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xA2, 0xA2, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 'B', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0xA2, 0x1BA, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x124, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', 0x6, 0x6, 0x6, 0x6, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BC, 0x1BE, 0x14, 0x14, 0x14, 0x1C0, 0x1C0, 0x1C2, 0x1C4, 0x6, 0x6, 0x6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1CA, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1CC, 0x1C6, 0x6, 0x1CC, 0x1CE, 0x1CC, 0x1CE, 0x1C6, 0x1CC, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1D0, 0x1D0, 0x1C8, 0x1C8, 0x1C8, 0x1D0, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1CE, 0x1C6, 0x1CC, 0x1CE, 0x1C6, 0x1C6, 0x1C6, 0x1CC, 0x1C6, 0x1C6, 0x1C6, 0x1CC, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1CE, 0x1C6, 0x1CC, 0x1C6, 0x1C6, 0x1CC, 0x1CC, 0x6, 0x1C6, 0x1C6, 0x1C6, 0x1CC, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C8, 0x1C8, 0x1C8, 0x6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1D2, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1D4, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1D2, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1D4, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1D2, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1D4, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1D2, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1D4, 0x1C8, 0x1C8, 0x1C8, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1C6, 0x1D2, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1C8, 0x1D4, 0x1C8, 0x1C8, 0x1C8, 0x1D6, 0x6, 0x1D8, 0x1D8, 0x1D8, 0x1D8, 0x1D8, 0x1DA, 0x1DA, 0x1DA, 0x1DA, 0x1DA, 0x1DC, 0x1DC, 0x1DC, 0x1DC, 0x1DC, 0x1DE, 0x1DE, 0x1DE, 0x1DE, 0x1DE, 0x1E0, 0x1E0, 0x1E0, 0x1E0, 0x1E0, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0x1B8, 0x18, 'F', 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0x1B8, 0x18, 0x18, 0x18, 'F', 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1B8, 0x1E2, 0xFC, 0xFC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0xA6, 0xA2, 0xA2, 0xA6, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 'Z', 'Z', 'Z', '\\', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', '\\', 0xA0, 'Z', 'Z', 'Z', 0xA0, '\\', 'Z', 'Z', '\\', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', 0x4, 0x6, 0xA2, 0xA2, 0xA2, 0x1E4, 0x19C, 0x19C, 0x19C, 0x6, 'j', 'j', 'j', 'j', 'j', 0x6, 0x6, 0x1E6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '\0', '\0', '\0', '\0', '\0', '\0', 0xA2, 0xA2, 0x10E, 0x10E, 0x10E, 0x10E, 0x10E, 0x6, 0x6, 0x1E8, 'l', 'l', 'n', 0x84, 0x86, 0x86, 0x86, 0x86, 0xA2, 0xA2, 0xA2, 0xA4, 0x6, 0x6, 0x6, 0x6, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EA, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0x1EC, 0xA2, 0x12E, 0xA2, 0x1EE, 0x6, 0x6, 0x1F0, 0x1F0, 0x1F0, 0x1F0, 0x1F0, 0x6, 0x6, 0xAC, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x1F2, 0x1F4, 0x1F4, 0x1F4, 0x1F4, 0x1F6, 0x1F8, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FC, 0x1FE, 0x1FE, 0x1FE, 0x1FE, 0x200, 0x1FA, 0x202, 0x204, 0x206, 0x6, 0x6, 0x6, 0x6, 0x6, 0x208, 0x20A, 0x20A, 0x20A, 0x20A, 0x20C, 0x20E, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x1FA, 0x210, 0x212, 0x212, 0x212, 0x212, 0x1FA, 0x1FA, 0x1FA, 0x6, 0xD0, 0xD0, 0x214, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0x214, 0x216, 0x216, 0x214, 0x214, 0xD0, 0xD0, 0xD0, 0xD0, 0x216, 0xD0, 0xD0, 0x214, 0x214, 0x6, 0x6, 0x6, 0x216, 0x6, 0x214, 0x214, 0x214, 0x214, 0xD0, 0x214, 0x216, 0x216, 0x214, 0x214, 0x214, 0x214, 0x214, 0x214, 0x216, 0x216, 0x214, 0xD0, 0x216, 0xD0, 0xD0, 0xD0, 0x216, 0xD0, 0xD0, 0x214, 0xD0, 0x216, 0x216, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0x214, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0x6, 0x6, 0x214, 0xD0, 0x214, 0xD0, 0xD0, 0x214, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0xD0, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x218, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', 'D', 0x21A, '<', '<', '<', '<', '<', '<', '<', 0x21A, '<', '<', '<', '<', '<', '<', '<', 0x21A, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x21C, 0x21E, 0x21E, 0x21E, 0x21E, 0x220, 0x222, '<', 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x224, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x18, 0x18, 0x18, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, '<', '<', '<', 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x226, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x224, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 'B', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x6, 0x6, 0x18, 0x18, 0x18, 0x18, 'B', 0x6, 0x6, 0x6, 0x18, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x228, 0x22A, 0x22A, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', 'D', 0x6, '<', '<', '<', '<', '<', '<', 'D', 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', 0x6, 0x6, 0x6, '<', '<', '<', '<', 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x6, '<', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x21A, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 0x6, '<', '<', 'D', 0x6, '<', 'D', 0x6, 0x6, '<', '<', '<', 'D', 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', 0x6, 0x6, 0x6, '<', '<', '<', 'D', 0x6, 0x6, 0x6, 0x6, '<', 'D', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, '<', '<', '<', 'D', 0x6, 0x6, 0x6, 0x6, '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', '<', 'D', 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x6, 0x22C, 0x22C, 0x22C, 0x22C, 0x22C, 0x6, 0x6, 0x6}))->toCharArray());
	$assignStatic(CharacterData01::A, $new($ints, 558));
	$assignStatic(CharacterData01::B, ($cstr({'0', '0', '\0', '0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', ' ', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '0', '0', '\0', '$', '$', '$', '\0', '\0', '\0', '\0', '0', '0', '0', '0', '0', '2', '2', '1', '1', ' ', ' ', '0', '0', '0', '\0', '\0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '$', '\0', '$', ' ', ' ', ' ', '\0', '\0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '\0', '\0', '\0', '\0', '0', '0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '2', '2', '2', '\0', '1', '1', '1', '\0', '\0', '\0', '\0', '\0', '0', '0', ' ', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '$', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '$', '$', '$', '0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', ' ', ' ', '$', '$', '$', '$', '$', ' ', '\0', '\0', '\0', '\0', ' ', ' ', '$', '0', '0', '$', '$', ' ', ' ', ' ', '0', '$', '0', ' ', ' ', '0', '0', '\0', '\0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '$', ' ', ' ', '$', ' ', '0', '$', '\0', '\0', '$', '$', ' ', '\0', '0', '$', '\0', '\0', '\0', ' ', ' ', '\0', '\0', '\0', '\0', '2', '2', '1', '1', '$', '$', '$', '$', '$', ' ', '\0', '\0', '$', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '\0', '\0', '\0', '\0', '\0', '0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '$', '0', '\0', '0', '(', '\0', '8', '8', '8', '\0', '\0', '\0', '\0', ' ', ' ', ' ', ' ', '\0', '\0', ' ', ' ', '\0', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '2', '2', '1', '1', '1', '\0', '2', '\0', '\0', '2', '\0', '1', '2', '\0', '1', '\0', '2', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\0', '\0', ' ', '0', '0', '\0', '\0', '\0', '2', '2', '1', '1', ' ', '0', ' ', ' ', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '0', '0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', '\0', 0x6, 0x6, '\0', '\0', '\0', '\0', ' ', ' '}))->toCharArray());
	{
		{
			$var($chars, data, $nc(CharacterData01::A_DATA)->toCharArray());
			if (!CharacterData01::$assertionsDisabled && !(data->length == (558 * 2))) {
				$throwNew($AssertionError);
			}
			int32_t i = 0;
			int32_t j = 0;
			while (i < (558 * 2)) {
				int32_t entry = data->get(i++) << 16;
				$nc(CharacterData01::A)->set(j++, entry | data->get(i++));
			}
		}
	}
}

CharacterData01::CharacterData01() {
}

$Class* CharacterData01::load$($String* name, bool initialize) {
	$loadClass(CharacterData01, name, initialize, &_CharacterData01_ClassInfo_, clinit$CharacterData01, allocate$CharacterData01);
	return class$;
}

$Class* CharacterData01::class$ = nullptr;

	} // lang
} // java